<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>shelll编程之select循环与菜单</title>
      <link href="/2018/10/07/shell%E7%BC%96%E7%A8%8B%E4%B9%8Bselect%E5%BE%AA%E7%8E%AF%E4%B8%8E%E8%8F%9C%E5%8D%95/"/>
      <url>/2018/10/07/shell%E7%BC%96%E7%A8%8B%E4%B9%8Bselect%E5%BE%AA%E7%8E%AF%E4%B8%8E%E8%8F%9C%E5%8D%95/</url>
      <content type="html"><![CDATA[<h1 id="select循环与菜单"><a href="#select循环与菜单" class="headerlink" title="select循环与菜单"></a>select循环与菜单</h1><ul><li><p>语法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select variable in list</span><br><span class="line">do</span><br><span class="line">循环体命令</span><br><span class="line">done</span><br></pre></td></tr></table></figure><a id="more"></a></li><li>select 循环主要用于创建菜单，按数字顺序排列的菜单项将显示在标准错误上，并显示 PS3 提示符，等待用户输入</li><li>用户输入菜单列表中的某个数字，执行相应的命令</li><li>用户输入被保存在内置变量 REPLY 中</li><li>select 是个无限循环，因此要记住用 break 命令退出循环，或用 exit 命令终止脚本。也可以按 ctrl+c 退出循环</li><li>select 经常和 case 联合使用</li><li>与 for 循环类似，可以省略 in list，此时使用位置参量</li><li>示例<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[root@centos7 scripts ]#cat select.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">PS3=&quot;please choose a digit: &quot;                                   ## PS3专门用来提供输入</span><br><span class="line">select MENU in jiaozi lamian mifan daoxiaomian quit;do          ## in后面的参数默认按照序号1 2 3 4等一一对应；</span><br><span class="line">    case $MENU in </span><br><span class="line">    jiaozi)</span><br><span class="line">        echo &quot;Your choose is $REPLY&quot;                            ## 变量REPLY专门用于存储用户输入的结果</span><br><span class="line">        echo &quot;$MENU price is 20&quot;</span><br><span class="line">    ;;</span><br><span class="line">    lamian)</span><br><span class="line">        echo &quot;Your choose is $REPLY&quot;</span><br><span class="line">        echo &quot;$MENU price is 15&quot;</span><br><span class="line">    ;;</span><br><span class="line">    mifan)</span><br><span class="line">        echo &quot;Your choose is $REPLY&quot;</span><br><span class="line">        echo &quot;$MENU price is 18&quot;</span><br><span class="line">    ;;</span><br><span class="line">    daoxiaomian)</span><br><span class="line">        echo &quot;Your choose is $REPLY&quot;</span><br><span class="line">        echo &quot;$MENU price is 12&quot;</span><br><span class="line">    ;;</span><br><span class="line">    quit)</span><br><span class="line">        echo &quot;Your choose is $REPLY&quot;</span><br><span class="line">        break</span><br><span class="line">    ;;</span><br><span class="line">    *)</span><br><span class="line">        echo &quot;Your choose is $REPLY&quot;</span><br><span class="line">        echo &quot;choose again&quot;</span><br><span class="line">    ;;</span><br><span class="line">    esac</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">[root@centos7 scripts ]#./select.sh </span><br><span class="line">1) jiaozi</span><br><span class="line">2) lamian</span><br><span class="line">3) mifan</span><br><span class="line">4) daoxiaomian</span><br><span class="line">5) quit</span><br><span class="line">please choose a digit: 1</span><br><span class="line">Your choose is 1</span><br><span class="line">jiaozi price is 20</span><br><span class="line">please choose a digit: 2</span><br><span class="line">Your choose is 2</span><br><span class="line">lamian price is 15</span><br><span class="line">please choose a digit: 5</span><br><span class="line">Your choose is 5</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      <categories>
          
          <category> shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell编程 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>shell编程之while特殊用法</title>
      <link href="/2018/10/06/shell%E7%BC%96%E7%A8%8B%E4%B9%8Bwhile%E7%89%B9%E6%AE%8A%E7%94%A8%E6%B3%95/"/>
      <url>/2018/10/06/shell%E7%BC%96%E7%A8%8B%E4%B9%8Bwhile%E7%89%B9%E6%AE%8A%E7%94%A8%E6%B3%95/</url>
      <content type="html"><![CDATA[<h1 id="while特殊用法"><a href="#while特殊用法" class="headerlink" title="while特殊用法"></a>while特殊用法</h1><ul><li>遍历文件的每一行</li><li><p>语法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">while read line; do</span><br><span class="line">循环体</span><br><span class="line">done &lt; /PATH/FROM/SOMEFILE</span><br></pre></td></tr></table></figure></li><li><p>执行机制</p><a id="more"></a><p>依次读取/PATH/FROM/SOMEFILE文件中的每一行，且将行赋值给变量line</p></li></ul><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><p>1.扫描/etc/passwd文件每一行，如发现GECOS字段为空，则填充用户名和单位电话为62985600，并提示该用户的GECOS信息修改成功<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 scripts ]#cat GECOS.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">## while逐行读取文件内容</span><br><span class="line">while read line ;do </span><br><span class="line">## 分别取出第一列用户名和第五列用户描述</span><br><span class="line">    GECOS=`echo $line|cut -d: -f5`</span><br><span class="line">    USER=`echo $line|cut -d: -f1`</span><br><span class="line">## 判断如果用户描述为空，则进行填充</span><br><span class="line">    [ -z &quot;$GECOS&quot; ] &amp;&amp; chfn -f $USER -p 2985600 $USER &amp;&gt; /dev/null;</span><br><span class="line">done &lt; /etc/passwd</span><br></pre></td></tr></table></figure></p><p>2.逐行读取df的信息，然后判断分区的利用率是否大于8，大于则进行警报</p><ul><li><p>方法1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 9_4 ]#cat diskcheck.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">df |sed -n &quot;/sd/p&quot;|while read line;do</span><br><span class="line">name=`echo $line |tr -s &quot; &quot; %|cut -d% -f1`## 通过echo $line对读取到的每一行进行处理</span><br><span class="line">used=`echo $line |tr -s &quot; &quot; %|cut -d% -f5`</span><br><span class="line">if [ $used -gt 8 ];then</span><br><span class="line">echo &quot;$name will be full;$used %&quot;</span><br><span class="line">fi</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">[root@centos7 9_4 ]#sh diskcheck.sh</span><br><span class="line">/dev/sda2 will be full;9 %</span><br><span class="line">/dev/sda1 will be full;16 %</span><br></pre></td></tr></table></figure></li><li><p>方法2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">df |while read line;do</span><br><span class="line">if [[ &quot;$line&quot; =~ /dev/sd.* ]];then</span><br><span class="line">used=`echo $line|tr -s &quot; &quot; %|cut -d% -f5`</span><br><span class="line"></span><br><span class="line">if [ $used -gt 8 ];then</span><br><span class="line">echo &quot;$line&quot; |tr -s &quot; &quot; :|cut -d: -f1,5</span><br><span class="line">fi</span><br><span class="line">fi</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">[root@centos7 9_4 ]#sh diskcheck1.sh </span><br><span class="line">/dev/sda2:9%</span><br><span class="line">/dev/sda1:16%</span><br></pre></td></tr></table></figure></li></ul><p>3.ss -nt查看访问连接的ip，如果达到两个，就设置防火墙策略拒绝连接。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[root@centos7 9_4 ]#vim test.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">ss -nt|sed -nr &apos;/ESTAB/s/.* (.*):.*/\1/p&apos;|sort|uniq -c|while read line;do     ## 取出ip并统计次数，然后逐行读取；</span><br><span class="line">IP=`echo $line|cut -d&quot; &quot; -f2`</span><br><span class="line">num=`echo $line|cut -d&quot; &quot; -f1`</span><br><span class="line">        if [ &quot;$num&quot; -ge 2 ];then</span><br><span class="line">iptables -A INPUT -s $IP -j REJECT                            ## 如果连接数&gt;2，则使用防火墙策略阻止连接</span><br><span class="line">        else</span><br><span class="line">                true</span><br><span class="line">        fi</span><br><span class="line">done</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell编程 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>shell编程之循环控制以及无限循环</title>
      <link href="/2018/10/05/shell%E7%BC%96%E7%A8%8B%E4%B9%8B%E5%BE%AA%E7%8E%AF%E6%8E%A7%E5%88%B6%E4%BB%A5%E5%8F%8A%E6%97%A0%E9%99%90%E5%BE%AA%E7%8E%AF/"/>
      <url>/2018/10/05/shell%E7%BC%96%E7%A8%8B%E4%B9%8B%E5%BE%AA%E7%8E%AF%E6%8E%A7%E5%88%B6%E4%BB%A5%E5%8F%8A%E6%97%A0%E9%99%90%E5%BE%AA%E7%8E%AF/</url>
      <content type="html"><![CDATA[<h2 id="循环控制语句continue"><a href="#循环控制语句continue" class="headerlink" title="循环控制语句continue"></a>循环控制语句continue</h2><ul><li>用于循环体中</li><li>continue [N]：提前结束第N层的本轮循环，而直接进入下一轮判断；最内层为第1层<a id="more"></a></li><li><p>语法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">while CONDTIITON1; do</span><br><span class="line">CMD1</span><br><span class="line">...</span><br><span class="line">if CONDITION2; then</span><br><span class="line">continue</span><br><span class="line">fi</span><br><span class="line">CMDn</span><br><span class="line">...</span><br><span class="line"> done</span><br></pre></td></tr></table></figure></li><li><p>示例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">## 示例1</span><br><span class="line">[root@centos7 9_4 ]#vim continue.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">for i in &#123;1..10&#125;;do</span><br><span class="line">        if [ $i -eq 5 ];then</span><br><span class="line">                continue               ## 表示i=5的时候，不再执行下面的语句，结束本次循环，开始下一次循环；</span><br><span class="line">        fi</span><br><span class="line">        echo i=$i</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">[root@centos7 9_4 ]#sh continue.sh </span><br><span class="line">i=1</span><br><span class="line">i=2</span><br><span class="line">i=3</span><br><span class="line">i=4</span><br><span class="line">i=6</span><br><span class="line">i=7</span><br><span class="line">i=8</span><br><span class="line">i=9</span><br><span class="line">i=10</span><br><span class="line"></span><br><span class="line">## 示例2：嵌套一个外层循环</span><br><span class="line">[root@centos7 9_4 ]#cat continue2.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">for i in &#123;1..10&#125;;do</span><br><span class="line">for j in &#123;1..10&#125;;do</span><br><span class="line">if [ $j -eq 5 ];then</span><br><span class="line">continue                  ## continue后面的值默认为1，表示结束本次循环，进入下一次循环</span><br><span class="line">fi</span><br><span class="line">echo j=$j</span><br><span class="line">done</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">修改：continue 2</span><br><span class="line">[root@centos7 9_4 ]#cat continue2.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">for i in &#123;1..10&#125;;do</span><br><span class="line">for j in &#123;1..10&#125;;do</span><br><span class="line">if [ $j -eq 5 ];then</span><br><span class="line">continue 2  ## 修改为2，则结束内层循环，继续外层循环</span><br><span class="line">fi</span><br><span class="line">echo j=$j</span><br><span class="line">done</span><br><span class="line">done</span><br><span class="line">[root@centos7 9_4 ]#</span><br><span class="line">[root@centos7 9_4 ]#sh   continue2.sh </span><br><span class="line">j=1</span><br><span class="line">j=2</span><br><span class="line">j=3</span><br><span class="line">j=4</span><br><span class="line">j=1</span><br><span class="line">j=2</span><br><span class="line">j=3</span><br><span class="line">j=4</span><br></pre></td></tr></table></figure></li></ul><h2 id="循环控制语句break"><a href="#循环控制语句break" class="headerlink" title="循环控制语句break"></a>循环控制语句break</h2><ul><li>用于循环体中</li><li>break [N]：提前结束第N层循环，最内层为第1层</li><li>示例<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 9_4 ]#vim  continue2.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">for i in &#123;1..10&#125;;do</span><br><span class="line">        for j in &#123;1..10&#125;;do</span><br><span class="line">                if [ $j -eq 5 ];then</span><br><span class="line">                        break ## 默认值为1，类似continue 2 的效果，结束内层循环，继续外层循环</span><br><span class="line">                fi</span><br><span class="line">                echo j=$j</span><br><span class="line">        done</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">修改为2：</span><br><span class="line">[root@centos7 9_4 ]#vim  continue2.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">for i in &#123;1..10&#125;;do</span><br><span class="line">        for j in &#123;1..10&#125;;do</span><br><span class="line">                if [ $j -eq 5 ];then</span><br><span class="line">                        break 2             ## 如下所示，直接结束外层和内层循环，退出脚本</span><br><span class="line">                fi</span><br><span class="line">                echo j=$j</span><br><span class="line">        done</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">[root@centos7 9_4 ]#sh continue2.sh </span><br><span class="line">j=1</span><br><span class="line">j=2</span><br><span class="line">j=3</span><br><span class="line">j=4</span><br></pre></td></tr></table></figure></li></ul><h2 id="循环控制shift命令"><a href="#循环控制shift命令" class="headerlink" title="循环控制shift命令"></a>循环控制shift命令</h2><ul><li>shift [n]</li><li>用于将参量列表 list 左移指定次数，缺省为左移一次。</li><li>参量列表 list 一旦被移动，最左端的那个参数就从列表中删除。while 循环遍历位置参量列表时，常用到 shift</li><li>示例<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">## 示例1</span><br><span class="line">[root@centos7 scripts ]#cat doit.sh</span><br><span class="line">#!/bin/bash</span><br><span class="line"># Name: doit.sh</span><br><span class="line"># Purpose: shift through command line arguments</span><br><span class="line"># Usage: doit.sh [args]</span><br><span class="line">while [ $# -gt 0 ] # or (( $# &gt; 0 ))</span><br><span class="line">do</span><br><span class="line">    echo $*</span><br><span class="line">    shift</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">执行：./doit.sh a b c d e f g h</span><br><span class="line"></span><br><span class="line">## 示例2</span><br><span class="line">[root@centos7 scripts ]#cat shift.sh</span><br><span class="line">#!/bin/bash</span><br><span class="line">#step through all the positional parameters</span><br><span class="line">until [ -z &quot;$1&quot; ]</span><br><span class="line">do</span><br><span class="line">    echo &quot;$1&quot;</span><br><span class="line">    shift</span><br><span class="line">done</span><br><span class="line">echo</span><br><span class="line"></span><br><span class="line">执行：./shfit.sh a b c d e f g h</span><br><span class="line"></span><br><span class="line">## 示例3:</span><br><span class="line">[root@centos7 data ]#vim test_scripts/9_4/rm.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">while [ &quot;$1&quot; ];do</span><br><span class="line">        dir=&quot;/data/backup/`date +%F`&quot;</span><br><span class="line">        [ -d &quot;$dir&quot; ] || mkdir -p $dir</span><br><span class="line">        [ -f &quot;$1&quot; ] &amp;&amp; mv $1 $dir &amp;&amp; echo $1 is removed</span><br><span class="line">        shift</span><br><span class="line">done</span><br><span class="line">echo &quot;done&quot;</span><br></pre></td></tr></table></figure></li></ul><h2 id="无限循环"><a href="#无限循环" class="headerlink" title="无限循环"></a>无限循环</h2><ul><li><p>for语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">for：</span><br><span class="line">for ((;;));do echo xin ;done</span><br></pre></td></tr></table></figure></li><li><p>while语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">while true; do</span><br><span class="line">循环体</span><br><span class="line">done</span><br></pre></td></tr></table></figure></li><li><p>until语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">until false; do</span><br><span class="line">循环体</span><br><span class="line">Done</span><br></pre></td></tr></table></figure></li></ul><blockquote><p> 当然并不是绝对的，可以利用continue和break退出循环</p></blockquote><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><p>1.随机生成10以内的数字，实现猜字游戏，提示比较大或小，相等则退出  </p><ul><li><p>方法1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 scripts ]#cat num_size_10.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">## 生成随机数字0-9</span><br><span class="line">rand=`echo $[RANDOM%10]`</span><br><span class="line">## 创建无限循环</span><br><span class="line">while true;do</span><br><span class="line">read -p &quot;Please enter the number you guessed: &quot; num</span><br><span class="line">## 判断是否为数字，为真则true</span><br><span class="line">if [[ $num =~ ^[0-9]+$ ]];then</span><br><span class="line">true</span><br><span class="line">## 否则，提示用户输入不正确，并退出本次循环</span><br><span class="line">else </span><br><span class="line"> echo &quot;Error,Please enter the correct number&quot;</span><br><span class="line"> continue</span><br><span class="line">fi</span><br><span class="line">if [ $num -lt $rand ];then</span><br><span class="line">echo &quot;you guessed the number is too small&quot;</span><br><span class="line">elif [ $num -gt $rand ];then</span><br><span class="line">echo &quot;you guessed the number is too big&quot;</span><br><span class="line">## 当用户猜对后，进行恭喜，并退出，返回值为0</span><br><span class="line">elif [ $num -eq $rand ];then</span><br><span class="line"> echo &quot;Congratulations, guess it.&quot;</span><br><span class="line">  exit 0</span><br><span class="line">fi </span><br><span class="line">done</span><br></pre></td></tr></table></figure></li><li><p>方法2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 scripts ]#cat num_size_10_1.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">rand=$[RANDOM%11]                           ## 生成0-10的随机数字</span><br><span class="line">while read -p &quot;input a number: &quot; num;do</span><br><span class="line">        if [[ ! $num =~ ^[0-9]+$ ]];then    ## 由于直接比较，不是&gt;</span><br><span class="line">数字的话会报错，所以进行判断;</span><br><span class="line">                echo &quot;Please input a digit&quot;</span><br><span class="line">                continue                    ## 结束本次循环</span><br><span class="line">        elif [ $num -gt $rand ];then</span><br><span class="line">                echo $num is greater</span><br><span class="line">        elif [ $num -lt $rand ];then</span><br><span class="line">                echo $num is little</span><br><span class="line">        else</span><br><span class="line">                echo &quot;guess OK&quot;</span><br><span class="line">                break                       ## 退出整个循环</span><br><span class="line">        fi</span><br><span class="line">done</span><br></pre></td></tr></table></figure></li></ul><p>2.用文件名做为参数，统计所有参数文件的总行数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 scripts ]#cat file_line.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">line=`cat $1|wc -l`</span><br><span class="line">echo &quot;the $1 line is $line&quot;</span><br></pre></td></tr></table></figure></p><p>3.用二个以上的数字为参数，显示其中的最大值和最小值<br>4.每隔3秒钟到系统上获取已经登录的用户的信息；如果发现用户hacker登录，则将登录时间和主机记录于日志/var/log/login.log中,并退出脚本</p>]]></content>
      
      <categories>
          
          <category> shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell编程 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>shelll编程之流程控制</title>
      <link href="/2018/10/04/shell%E7%BC%96%E7%A8%8B%E4%B9%8B%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/"/>
      <url>/2018/10/04/shell%E7%BC%96%E7%A8%8B%E4%B9%8B%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/</url>
      <content type="html"><![CDATA[<h1 id="条件判断"><a href="#条件判断" class="headerlink" title="条件判断"></a>条件判断</h1><h2 id="条件判断之if语句"><a href="#条件判断之if语句" class="headerlink" title="条件判断之if语句"></a>条件判断之if语句</h2><ul><li>选择执行</li><li>if语句可嵌套</li><li><p>单分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if 判断条件;then</span><br><span class="line">条件为真的分支代码</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><a id="more"></a></li><li><p>双分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if 判断条件; then</span><br><span class="line">条件为真的分支代码</span><br><span class="line">else</span><br><span class="line">条件为假的分支代码</span><br><span class="line">fi</span><br></pre></td></tr></table></figure></li><li><p>多分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">if 判断条件1; then</span><br><span class="line">条件1为真的分支代码</span><br><span class="line">elif 判断条件2; then</span><br><span class="line">条件2为真的分支代码</span><br><span class="line">elif 判断条件3; then</span><br><span class="line">条件3为真的分支代码</span><br><span class="line">else</span><br><span class="line">以上条件都为假的分支代码</span><br><span class="line">fi</span><br></pre></td></tr></table></figure></li><li><p>执行机制<br>逐条件进行判断，第一次遇为“真”条件时，执行其分支，而后结束整个if语句</p></li></ul><h2 id="条件判断之case语句"><a href="#条件判断之case语句" class="headerlink" title="条件判断之case语句"></a>条件判断之case语句</h2><ul><li>语法<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">case 变量引用 in## 这里的变量引用即引用变量的值</span><br><span class="line">PAT1)</span><br><span class="line">分支1</span><br><span class="line">;;</span><br><span class="line">PAT2)</span><br><span class="line">分支2</span><br><span class="line">;;</span><br><span class="line">...</span><br><span class="line">*)</span><br><span class="line">默认分支</span><br><span class="line">;;</span><br><span class="line">esac</span><br><span class="line"></span><br><span class="line">case支持glob风格的通配符：</span><br><span class="line">*: 任意长度任意字符</span><br><span class="line">?: 任意单个字符</span><br><span class="line">[]：指定范围内的任意单个字符</span><br><span class="line">a|b: a或b</span><br></pre></td></tr></table></figure></li></ul><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><p>1.编写脚本/root/bin/createuser.sh，实现如下功能：使用一个用户名做为参<br>数，如果指定参数的用户存在，就显示其存在，否则添加之；显示添加的用户<br>的id号等信息</p><ul><li><p>方法1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[root@centos7 scripts ]#cat createuser.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">## 判断传参个数是否为1个，不是则打印用法并退出脚本</span><br><span class="line">if [ $# -ne 1 ];then</span><br><span class="line">echo $&quot;USAGE:$0 user&quot;</span><br><span class="line">exit 1</span><br><span class="line">fi</span><br><span class="line">## 判断用户是否存在</span><br><span class="line">id $1 &amp;&gt; /dev/null </span><br><span class="line">## 如果用户存在，则打印存在信息，不存在则创建</span><br><span class="line">[ $? -eq 0 ] &amp;&amp; echo &quot;$1 is exist&quot; || useradd $1</span><br><span class="line">## 人性化显示用户的id号</span><br><span class="line">echo &quot;$1 id is `id -u $1`&quot;</span><br></pre></td></tr></table></figure></li><li><p>方法2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 scripts ]#cat createuser1.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">## 以交互式方式输入用户</span><br><span class="line">read -p &quot;Please input user: &quot; user</span><br><span class="line">## 判断变量值是否为空</span><br><span class="line">[ $&#123;#user&#125; -le 0 ] &amp;&amp; &#123;</span><br><span class="line">echo &quot;you input is null&quot;</span><br><span class="line">exit 1</span><br><span class="line">&#125;</span><br><span class="line">## 判断用户是否存在</span><br><span class="line">id $user &amp;&gt; /dev/null </span><br><span class="line">## 如果用户存在，则打印存在信息，不存在则创建</span><br><span class="line">[ $? -eq 0 ] &amp;&amp; echo &quot;$user is exist&quot; || useradd $user</span><br><span class="line">## 人性化显示用户的id号</span><br><span class="line">echo &quot;$user is `id -u $user`&quot;</span><br></pre></td></tr></table></figure></li></ul><p>2.编写脚本/root/bin/yesorno.sh，提示用户输入yes或no,并判断用户输入的<br>是yes还是no,或是其它信息  </p><ul><li><p>方法1———tr转换大写为小写</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 scripts ]#cat yesorno.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">## 思路：用户输入的所有选择：y|yes|Y|YES,同n|no|N|NO</span><br><span class="line">## 分析: 统一判断条件为大写或小写:tr进行转换</span><br><span class="line">## 使用两种选择判断：y|yes|;n|no或者大写</span><br><span class="line"></span><br><span class="line">read  -p &quot;Input yes or no:&quot; answer</span><br><span class="line">## tr对结果进行转换成小写</span><br><span class="line">ans=`echo &quot;$answer&quot;|tr &apos;A-Z&apos; &apos;a-z&apos;`</span><br><span class="line">if [ &quot;$ans&quot; = &quot;yes&quot; -o &quot;$ans&quot; = &quot;y&quot; ];then</span><br><span class="line">        echo &quot;YES&quot;</span><br><span class="line">elif [ &quot;$ans&quot; = &quot;no&quot; -o &quot;$ans&quot; = &quot;n&quot; ];then</span><br><span class="line">        echo &quot;NO&quot;</span><br><span class="line">else</span><br><span class="line">        echo &quot;Please input yes or no&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure></li><li><p>方法2——使用正则匹配</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 scripts ]#cat yesorno1.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">## 思路：用户输入的所有选择：y|yes|Y|YES,同n|no|N|NO</span><br><span class="line">## 分析: 使用正则进行匹配所有选择</span><br><span class="line"></span><br><span class="line">#!/bin/bash</span><br><span class="line">read  -p &quot;Input yes or no:&quot; answer</span><br><span class="line">## 正则匹配使用[[]]，并且前面的字符串加双引号，锚定行首和行尾，?表示0或1次，即Y、y、YES、yes.</span><br><span class="line">if [[ &quot;$answer&quot; =~ ^[Yy]([Ee][Ss])?$ ]];then</span><br><span class="line">        echo YES</span><br><span class="line">## 同理，no的选择也是n、N、no、NO、还有No、nO等</span><br><span class="line">elif [[ &quot;$answer&quot; =~ ^[Nn][Oo]?$ ]];then</span><br><span class="line">        echo &quot;NO&quot;</span><br><span class="line">else</span><br><span class="line">        echo &quot;Please input yes or no&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure></li><li><p>方法3——使用case匹配</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 scripts ]#cat while_yesorno.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">## 思路：用户输入的所有选择：y|yes|Y|YES,同n|no|N|NO</span><br><span class="line">## 分析: 统一判断条件为大写或小写:tr进行转换</span><br><span class="line">## 使用两种选择判断：y|yes|;n|no或者大写</span><br><span class="line"></span><br><span class="line">#!/bin/bash</span><br><span class="line">read -p &quot;Please input yes or no: &quot; ans</span><br><span class="line">case $ans in</span><br><span class="line">## 匹配值[Y或y]或[Yes、YES、yes等]，|为或的意思</span><br><span class="line">[Yy]|[Yy][Ee][Ss])</span><br><span class="line">echo YES</span><br><span class="line">;;</span><br><span class="line">## 匹配[N或n]或[NO、no、No、nO]</span><br><span class="line">[Nn]|[Nn][Oo])</span><br><span class="line">echo NO</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">echo input false</span><br><span class="line">;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure></li></ul><p>3.编写脚本/root/bin/filetype.sh,判断用户输入文件路径，显示其文件类型<br>（普通，目录，链接，其它文件类型）</p><ul><li><p>方法1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 scripts ]#cat filetype.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">read -p &quot;Please input a file_path: &quot; file_path</span><br><span class="line">## 判断变量值是否为空</span><br><span class="line">[ $&#123;#file_path&#125; -le 0 ] &amp;&amp; &#123;</span><br><span class="line">echo &quot;you input is null&quot;</span><br><span class="line">exit 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">## ls -ld 显示文件或目录的详细信息，head取第一个字节，即文件类型标识</span><br><span class="line">head_file=`ls -ld $file_path|head -c1`</span><br><span class="line">## case对标识进行匹配，并人性化显示文件类型</span><br><span class="line">case $head_file in</span><br><span class="line">-)</span><br><span class="line">echo &quot;this $file_path is file&quot;</span><br><span class="line">;;</span><br><span class="line">d)</span><br><span class="line">echo &quot;this $file_path is directory&quot;</span><br><span class="line">;;</span><br><span class="line">l)</span><br><span class="line">echo &quot;this $file_path is link &quot;</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">echo &quot;this $file_path is other filetype&quot;</span><br><span class="line">;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure></li><li><p>方法2:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 scripts ]#cat filetype1.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">read -p &quot;Please input a file_path: &quot; file_path</span><br><span class="line">## 判断变量值是否为空</span><br><span class="line">[ $&#123;#file_path&#125; -le 0 ] &amp;&amp; &#123;</span><br><span class="line">echo &quot;you input is null&quot;</span><br><span class="line">exit 1</span><br><span class="line">&#125;</span><br><span class="line">if [ -f $file_path ];then</span><br><span class="line">echo &quot;this $file_path is file&quot;</span><br><span class="line">elif [ -d $file_path ];then</span><br><span class="line">echo &quot;this $file_path is directory&quot;</span><br><span class="line">elif [ -L $file_path ];then</span><br><span class="line">echo &quot;this $file_path is link &quot;</span><br><span class="line">else</span><br><span class="line">echo &quot;this $file_path is other filetype&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure></li></ul><p>4.编写脚本/root/bin/checkint.sh,判断用户输入的参数是否为正整数</p><ul><li>方法1<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 scripts ]#cat checkint.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">read -p &quot;Please input a Positive integer: &quot; num</span><br><span class="line">## 判断变量值是否为空</span><br><span class="line">[ $&#123;#num&#125; -le 0 ] &amp;&amp; &#123;</span><br><span class="line">echo &quot;you input is null&quot;</span><br><span class="line">exit 1</span><br><span class="line">&#125;</span><br><span class="line">## 判断是否为整数,是则打印输出，否则提示</span><br><span class="line">if [ &quot;num&quot; =~ ^[1-9][0-9]*$ &amp;&gt; /dev/null ];then</span><br><span class="line"> echo &quot;you input is $num&quot;</span><br><span class="line">else</span><br><span class="line"> echo &quot;Please input a Positive integer&quot;</span><br><span class="line"> exit 1 </span><br><span class="line">fi</span><br></pre></td></tr></table></figure></li></ul><h1 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h1><ul><li>将某代码段重复运行多次</li><li>重复运行多少次<ul><li>循环次数事先已知</li><li>循环次数事先未知</li></ul></li><li>有进入条件和退出条件</li><li>有for, while, until</li></ul><h2 id="循环之for语句"><a href="#循环之for语句" class="headerlink" title="循环之for语句"></a>循环之for语句</h2><ul><li><p>语法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for 变量名 in 列表;do</span><br><span class="line">循环体</span><br><span class="line">done</span><br></pre></td></tr></table></figure></li><li><p>执行机制</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">依次将列表中的元素赋值给“变量名”; 每次赋值后即执行一次循环体; 直到列表中的元素耗尽，循环结束</span><br></pre></td></tr></table></figure></li><li><p>列表生成方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">(1) 直接给出列表</span><br><span class="line">(2) 整数列表：</span><br><span class="line">(a) &#123;start..end&#125;</span><br><span class="line">(b) $(seq [start [step]] end)</span><br><span class="line">(3) 返回列表的命令</span><br><span class="line">$(COMMAND)</span><br><span class="line">(4) 使用glob，如：*.sh</span><br><span class="line">(5) 变量引用；</span><br><span class="line">$@, $*</span><br></pre></td></tr></table></figure></li></ul><h2 id="循环之while循环"><a href="#循环之while循环" class="headerlink" title="循环之while循环"></a>循环之while循环</h2><ul><li><p>语法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">while CONDITION; do</span><br><span class="line">循环体</span><br><span class="line">done</span><br></pre></td></tr></table></figure></li><li><p>CONDITION：循环控制条件；进入循环之前，先做一次判断；每一次循环之后会再次做判断；条件为“true”，则执行一次循环；直到条件测试状态为“false”终止循环</p></li><li>因此：CONDTION一般应该有循环控制变量；而此变量的值会在循环体不断地被修正</li><li>进入条件：CONDITION为true</li><li>退出条件：CONDITION为false</li></ul><h2 id="循环之until循环"><a href="#循环之until循环" class="headerlink" title="循环之until循环"></a>循环之until循环</h2><ul><li><p>语法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">until CONDITION; do</span><br><span class="line">循环体</span><br><span class="line">done</span><br></pre></td></tr></table></figure></li><li><p>进入条件： CONDITION 为false</p></li><li>退出条件： CONDITION 为true</li></ul><h1 id="练习-1"><a href="#练习-1" class="headerlink" title="练习"></a>练习</h1><h2 id="for语句练习"><a href="#for语句练习" class="headerlink" title="for语句练习"></a>for语句练习</h2><p>1.判断/var/目录下所有文件的类型</p><ul><li><p>方法1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 scripts ]#cat var_filetype.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">## 利用for+if进行匹配文件类型</span><br><span class="line">for files in   /var/* ;do</span><br><span class="line">    if [ -f $files ];then</span><br><span class="line">        echo &quot;$files exists and is a regular file.&quot;</span><br><span class="line">    elif [ -h $files ] ;then</span><br><span class="line">        echo &quot;$files is a symbolic link.&quot;</span><br><span class="line">    elif [ -d $files ] ;then</span><br><span class="line">        echo &quot;$files is a directory.&quot;</span><br><span class="line">    else</span><br><span class="line">        echo &quot;$files is others.&quot;</span><br><span class="line">    fi</span><br><span class="line">done</span><br></pre></td></tr></table></figure></li><li><p>方法2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 scripts ]#cat var_filetype2.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">## 利用for+case进行匹配文件类型</span><br><span class="line">## 首先利用for循环读取每个文件</span><br><span class="line">for files in   /var/* ;do</span><br><span class="line">## 取每个文件属性信息的第一个字节</span><br><span class="line">file_type=`ls -ld $files|head -c1`</span><br><span class="line">## case匹配</span><br><span class="line">    case $file_type in</span><br><span class="line">-)</span><br><span class="line">    echo &quot;$files exists and is a regular file.&quot;</span><br><span class="line">;;</span><br><span class="line">l)</span><br><span class="line">        echo &quot;$files is a symbolic link.&quot;</span><br><span class="line">;;</span><br><span class="line">d)</span><br><span class="line">        echo &quot;$files is a directory.&quot;</span><br><span class="line">;;</span><br><span class="line">    *)</span><br><span class="line">        echo &quot;$files is others.&quot;</span><br><span class="line">    ;;</span><br><span class="line">esac</span><br><span class="line">done</span><br></pre></td></tr></table></figure></li></ul><ol start="2"><li>添加10个用户user1-user10，密码为8位随机字符<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 scripts ]#cat user1_10.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">for i in &#123;1..10&#125;;do</span><br><span class="line">useradd user$i</span><br><span class="line">ran_pss=`openssl rand -base64 8|tr -dc [0-9a-zA-Z]|head -c8`</span><br><span class="line">echo &quot;$ran_pss&quot; |passwd --stdin user$i &amp;&gt; /dev/null</span><br><span class="line">done</span><br></pre></td></tr></table></figure></li></ol><p>3.删除用户<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 scripts ]#tail -10 /etc/passwd|cut -d: -f1|while read line;do userdel -r $line;done</span><br></pre></td></tr></table></figure></p><p>4./etc/rc.d/rc3.d目录下分别有多个以K开头和以S开头的文件；分别读取每个文件，<br>以K开头的输出为文件加stop，以S开头的输出为文件名加start，如K34filename stop<br>S66filename start</p><ul><li><p>方法1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 scripts ]#cat rc.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">## 从/etc/rc.d/rc3.d/中读取每个文件</span><br><span class="line">for i in /etc/rc.d/rc3.d/*;do</span><br><span class="line">## 取文件的基名，即仅取最后的文件名</span><br><span class="line">value=`basename $i`</span><br><span class="line">## 正则匹配，如果是以K开头，则添加stop</span><br><span class="line">if [[ &quot;$value&quot; =~ ^K ]];then</span><br><span class="line">echo &quot;$i stop&quot;</span><br><span class="line">## 否则，以S开头，则添加start</span><br><span class="line">elif [[ &quot;$value&quot; =~ ^S ]];then</span><br><span class="line">echo &quot;$i start&quot;</span><br><span class="line">fi</span><br><span class="line">done</span><br></pre></td></tr></table></figure></li><li><p>方法2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 scripts ]#cat rc1.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">## 从/etc/rc.d/rc3.d/中读取每个文件</span><br><span class="line">for i in /etc/rc.d/rc3.d/*;do</span><br><span class="line">## 取文件的基名，即仅取最后的文件名</span><br><span class="line">value=`basename $i|head -c1`</span><br><span class="line">## 正则匹配，如果是以K开头，则添加stop</span><br><span class="line">if [ &quot;$value&quot; == K ];then</span><br><span class="line">echo &quot;$i stop&quot;</span><br><span class="line">## 否则，以S开头，则添加start</span><br><span class="line">elif [ &quot;$value&quot; == S ];then</span><br><span class="line">echo &quot;$i start&quot;</span><br><span class="line">fi</span><br><span class="line">done</span><br></pre></td></tr></table></figure></li></ul><ol start="5"><li><p>编写脚本，提示输入正整数n的值，计算1+2+…+n的总和</p><figure class="highlight plain"><figcaption><span>scripts ]#cat num_sum.sh </span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">sum=0</span><br><span class="line">read -p &quot;Please input 一个正整数：&quot; num</span><br><span class="line">## 判断是否为空,如果为空，则输出提示信息，并退出</span><br><span class="line">if [ $&#123;#num&#125; -le 0 ];then</span><br><span class="line">echo &quot;Error,you input is null&quot;</span><br><span class="line">exit 1</span><br><span class="line">fi</span><br><span class="line">## 判断是否为正整数</span><br><span class="line">if [[ $num =~ ^[1-9][0-9]*$ ]];then</span><br><span class="line">## 生成列表有&#123;&#125;和seq两种方式，但是&#123;&#125;赋值后仅仅不生成列表，还好seq支持；</span><br><span class="line">for i in `seq 1 $num`;do</span><br><span class="line">letsum+=$i## 记住，计算的时候一定要添加相应的命令，不可以直接 sum+=$i</span><br><span class="line">done</span><br><span class="line">echo &quot;sum=$sum&quot;</span><br><span class="line">else </span><br><span class="line">##  如果不是一个正整数，则输出警告信息，并退出</span><br><span class="line">echo &quot;Error,you input is not positive integer&quot;</span><br><span class="line">exit 1</span><br><span class="line">fi</span><br></pre></td></tr></table></figure></li><li><p>计算100以内所有能被3整除的整数之和</p></li></ol><ul><li><p>方法1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 scripts ]#cat 100_3num.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">sum=0</span><br><span class="line">## for从1到100中循环取值</span><br><span class="line">for i in &#123;1..100&#125;;do</span><br><span class="line">## 求出每个数与3计算后的余数</span><br><span class="line">value=`echo $[$i%3]`</span><br><span class="line">## 如果余数为0，则进行求和计算，否则，不显示</span><br><span class="line">if [ $value -eq 0 ];then</span><br><span class="line">let sum+=$i</span><br><span class="line">fi</span><br><span class="line">done</span><br><span class="line">## 打印最后的和</span><br><span class="line">echo &quot;sum=$sum&quot;</span><br></pre></td></tr></table></figure></li><li><p>方法2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 scripts ]#cat 100_3num1.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">sum=0</span><br><span class="line">## 由于必须被3整除，所以定义开始为3，步进为3的整数列表，i循环取值并计算求和</span><br><span class="line">for i in `seq 3 3 100` ;do</span><br><span class="line">## 对取值进行计算求和</span><br><span class="line">    let sum+=i</span><br><span class="line">done</span><br><span class="line">## 打印最后的结果</span><br><span class="line">echo &quot;sum=$sum&quot;</span><br></pre></td></tr></table></figure></li></ul><ol start="7"><li>编写脚本，提示请输入网络地址，如192.168.0.0，判断输入的网段中主机在线状态</li></ol><ul><li><p>方法1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 scripts ]#cat scanip.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">read -p &quot;Please input a network address(eg:192.168.0.0): &quot; netid</span><br><span class="line">## 取出前三位的网络ID</span><br><span class="line">ip_head=`echo $netid|cut -d. -f1-3`</span><br><span class="line">## 对最后一位进行匹配1..254</span><br><span class="line">for i in &#123;1..254&#125;;do</span><br><span class="line">## 组合成一个完整的ip</span><br><span class="line">ip=$ip_head.$i</span><br><span class="line">## &#123;&#125;&amp;是为了并行执行更加快速</span><br><span class="line">&#123; ping -c1 $ip &amp;&gt; /dev/null</span><br><span class="line">if [ $? -eq 0 ];then</span><br><span class="line">echo &quot;$ip is up&quot;</span><br><span class="line">else</span><br><span class="line">echo &quot;$ip is down&quot;</span><br><span class="line">fi &#125; &amp;</span><br><span class="line">done</span><br><span class="line">## 结尾添加wait自动退出，否则需要手动敲击enter退出</span><br><span class="line">wait</span><br></pre></td></tr></table></figure></li><li><p>方法2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 scripts ]#cat scanip1.sh </span><br><span class="line">while true; do</span><br><span class="line">        read -t 60 -p &quot;input the network number: &quot; netnum</span><br><span class="line">        if [[ $netnum =~ ^(([1-9]?[0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.)&#123;3]];then</span><br><span class="line">                break</span><br><span class="line">        else</span><br><span class="line">                echo wrong network number</span><br><span class="line">        fi  </span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">last=$(echo $netnum|cut -d&apos;.&apos; -f3)</span><br><span class="line">declare -i up=0</span><br><span class="line">declare -i down=0</span><br><span class="line"></span><br><span class="line">if [ $last != 0 ];then</span><br><span class="line">        net=$(echo $netnum|cut -d&apos;.&apos; -f1-3)</span><br><span class="line">        for i in &#123;1..255&#125;;do</span><br><span class="line">                j=$&#123;net&#125;.$i</span><br><span class="line">                &#123; if ping -c1 -w1 $j &amp;&gt;/dev/null;then</span><br><span class="line">                        echo host $j is up</span><br><span class="line">                        let up++</span><br><span class="line">                else </span><br><span class="line">                        #echo host $j is down</span><br><span class="line">                        let down++</span><br><span class="line">                fi; &#125; &amp; </span><br><span class="line"></span><br><span class="line">        done</span><br><span class="line">        wait</span><br><span class="line">        #echo</span><br><span class="line">        #echo -e &quot;uphost number is:\t $up&quot;</span><br><span class="line">        #echo -e &quot;downhost number is:\t $down&quot;</span><br><span class="line"></span><br><span class="line">else </span><br><span class="line">        second=$(echo $netnum |cut -d&apos;.&apos; -f2)</span><br><span class="line">        if [ $second = 0 ];then</span><br><span class="line">                echo I cant do this. Its a too much big network</span><br><span class="line">                exit 2</span><br><span class="line">        else        </span><br><span class="line">                net=$(echo $netnum |cut -d&apos;.&apos; -f1-2)</span><br><span class="line">                for i in `seq 0 255`;do</span><br><span class="line">                        j=$&#123;net&#125;.$i</span><br><span class="line">                        for k in `seq 0 255`;do</span><br><span class="line">                                &#123; h=$&#123;j&#125;.$k</span><br><span class="line">                                if ping -c1 -w1 $h &amp;&gt;/dev/null;then</span><br><span class="line">                                        echo host $h is up</span><br><span class="line">                                        let up++</span><br><span class="line">                                else</span><br><span class="line">                                        #echo host $h is dowm</span><br><span class="line">                                        let down++</span><br><span class="line">                                fi; &#125; &amp; </span><br><span class="line">                        done</span><br><span class="line">                        wait</span><br><span class="line">                done</span><br><span class="line">                #echo </span><br><span class="line">                #echo -e &quot;uphost number is:\t $up&quot;</span><br><span class="line">                #echo -e &quot;downhost number is:\t $down&quot;</span><br><span class="line">        fi</span><br><span class="line">fi</span><br></pre></td></tr></table></figure></li></ul><ol start="8"><li>打印九九乘法表</li></ol><ul><li><p>方法1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 scripts ]#cat 99.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">## 约定如下：</span><br><span class="line">## 第一个数字为列数，定义为j；</span><br><span class="line">## 第二个数字为行数，定义为i；</span><br><span class="line">## 首先先打印一行，然后循环打印行数即可；</span><br><span class="line">## 那一行：循环次数是多少？找规律，列数&lt;=行数</span><br><span class="line">for ((i=1;i&lt;=9;i++));do</span><br><span class="line">for ((j=1;j&lt;=i;j++));do</span><br><span class="line">## -e解释特殊字符，\t是tab键，\c是不换行，或者直接使用-n也可以；</span><br><span class="line">echo -e &quot;$j*$i=$[j*i]\t\c&quot;</span><br><span class="line">done</span><br><span class="line">echo </span><br><span class="line">done</span><br></pre></td></tr></table></figure></li><li><p>方法2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[root@centos7 scripts ]#cat 99_1.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">## 约定如下：</span><br><span class="line">## 第一个数字为列数，定义为j；</span><br><span class="line">## 第二个数字为行数，定义为i；</span><br><span class="line">## 首先先打印一行，然后循环打印行数即可；</span><br><span class="line">## 那一行：循环次数是多少？找规律，列数&lt;=行数</span><br><span class="line">#for ((i=1;i&lt;=9;i++));do</span><br><span class="line">#for ((j=1;j&lt;=i;j++));do</span><br><span class="line">## -e解释特殊字符，\t是tab键，\c是不换行，或者直接使用-n也可以；</span><br><span class="line">#echo -e &quot;$j*$i=$[j*i]\t\c&quot;</span><br><span class="line">#done</span><br><span class="line">#echo </span><br><span class="line">#done</span><br><span class="line"></span><br><span class="line">i=1</span><br><span class="line">while [ $i -le 9 ];do</span><br><span class="line">j=1</span><br><span class="line">while [ $j -le $i ];do</span><br><span class="line">echo -e &quot;$j*$i=$[j*i]\t\c&quot;</span><br><span class="line">let j++</span><br><span class="line">done</span><br><span class="line">let i++</span><br><span class="line">echo </span><br><span class="line">done</span><br></pre></td></tr></table></figure></li></ul><ol start="9"><li>在/testdir目录下创建10个html文件,文件名格式为数字N（从1到10）加随机8个字母，如：1AbCdeFgH.html</li></ol><ul><li><p>方法1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 scripts ]#cat ran_html.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">## 判断目录是否存在，存在则进入，否则创建并进入</span><br><span class="line">[ -d /testdir ] || mkdir /testdir</span><br><span class="line">for i in &#123;1..10&#125;;do</span><br><span class="line">## 注意；这个命令应该放在for循环里，每次执行生成的随机字符都不一样</span><br><span class="line">rand=`openssl rand -base64 8|tr -dc [a-zA-Z]|head -c8`</span><br><span class="line">touch /testdir/$&#123;i&#125;$rand.html</span><br><span class="line">done</span><br></pre></td></tr></table></figure></li><li><p>方法2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 scripts ]#cat ran_html1.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">## 判断目录是否存在，存在则进入，否则创建并进入</span><br><span class="line">[ -d /testdir ] || mkdir /testdir</span><br><span class="line">for ((i=1;i&lt;=10;i++));do</span><br><span class="line">## 注意；这个命令应该放在for循环里，每次执行生成的随机字符都不一样</span><br><span class="line">rand=`openssl rand -base64 8|tr -dc [a-zA-Z]|head -c8`</span><br><span class="line">touch /testdir/$&#123;i&#125;$rand.html</span><br><span class="line">done</span><br></pre></td></tr></table></figure></li></ul><p>10.打印等腰三角形</p><ul><li><p>方法1：利用while实现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 scripts ]#cat I_triangle.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">## 约定如下</span><br><span class="line">## 定义总行数：line</span><br><span class="line">## 当前行:i</span><br><span class="line">## 当前列:j</span><br><span class="line">## 中间*所在列=总行数line</span><br><span class="line">## 当前行*从开头到中间的个数=当前行i</span><br><span class="line">## space=总行数line-当前行数i</span><br><span class="line">## 当前行*的个数：2i-1</span><br><span class="line"></span><br><span class="line">read -p &quot;Please input a line number: &quot; line</span><br><span class="line">i=1##  打印多行</span><br><span class="line">while [ &quot;$i&quot; -le &quot;$line&quot; ];do</span><br><span class="line">## print space##  打印空格</span><br><span class="line">j=1</span><br><span class="line">while [ &quot;$j&quot; -le $[line-i] ];do</span><br><span class="line">echo -n &quot; &quot;## 或者使用 echo -e &quot; \c&quot;</span><br><span class="line">let j++</span><br><span class="line">done</span><br><span class="line">## print *## 打印*的个数</span><br><span class="line">k=1</span><br><span class="line">while [ &quot;$k&quot; -le $[2*i-1] ];do</span><br><span class="line">echo -n &quot;*&quot;</span><br><span class="line">let k++</span><br><span class="line">done</span><br><span class="line">let i++</span><br><span class="line">echo </span><br><span class="line">done</span><br></pre></td></tr></table></figure></li><li><p>方法2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 scripts ]#cat for_triangle.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">## 约定如下</span><br><span class="line">## 定义总行数：line</span><br><span class="line">## 当前行:i</span><br><span class="line">## 当前列:j</span><br><span class="line">## 中间*所在列=总行数line</span><br><span class="line">## 当前行*从开头到中间的个数=当前行i</span><br><span class="line">## space=总行数line-当前行数i</span><br><span class="line">## 当前行*的个数：2i-1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 利用for的第二种语法实现：</span><br><span class="line">#!/bin/bash</span><br><span class="line">read -p &quot;Please input a line number: &quot; line</span><br><span class="line">for ((i=1;i&lt;=line;i++));do</span><br><span class="line">## 打印空格</span><br><span class="line">    for ((j=1;j&lt;=$[line-i];j++));do</span><br><span class="line">        echo -n &quot; &quot;</span><br><span class="line">    done</span><br><span class="line">## 打印*的个数</span><br><span class="line">    for ((k=1;k&lt;=$[2*i-1];k++));do</span><br><span class="line">        echo -n &quot;*&quot;</span><br><span class="line">    done</span><br><span class="line">## 打印完一行后进行换行</span><br><span class="line">    echo </span><br><span class="line">done</span><br></pre></td></tr></table></figure></li></ul><h2 id="while语句练习"><a href="#while语句练习" class="headerlink" title="while语句练习"></a>while语句练习</h2><ol><li>编写脚本，求100以内所有正奇数之和</li></ol><ul><li><p>方法1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 scripts ]#cat odd_number_100.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">sum=0</span><br><span class="line">for i in &#123;1..10..2&#125;;do</span><br><span class="line">let sum+=$i</span><br><span class="line">done</span><br><span class="line">echo &quot;sum=$sum&quot;</span><br></pre></td></tr></table></figure></li><li><p>方法2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 scripts ]#cat while_odd_number_100.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">## 如果sum赋值为1，则下面计算sum和i的顺序需要调整为：i在前，sum在后</span><br><span class="line">sum=0  </span><br><span class="line">## 对于while语句来说，需要定义初始值、条件、以及不断变化的值</span><br><span class="line">i=1</span><br><span class="line">while [ $i -le 100 ];do</span><br><span class="line">let sum+=$i</span><br><span class="line">## 由于是奇数，所以i=i+2;i++即所谓的i=i+1</span><br><span class="line">let i+=2</span><br><span class="line">done</span><br><span class="line">echo &quot;sum=$sum&quot;</span><br></pre></td></tr></table></figure></li></ul><p>2.编写脚本，打印九九乘法表<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 scripts ]#cat while_99.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">## 约定如下：</span><br><span class="line">## 第一个数字为列数，定义列数为j,i&lt;=i</span><br><span class="line">## 第二个数字为行数，定义行数为i,i&lt;=9</span><br><span class="line">## 思路：先打印一行，然后循环打印多行，一行循环次数的规律是:j&lt;=i</span><br><span class="line"></span><br><span class="line">i=1</span><br><span class="line">while [ $i -le 9 ];do</span><br><span class="line">j=1</span><br><span class="line">while [ $j -le $i ];do</span><br><span class="line">echo -e &quot;$j*$i=$[j*i]\t\c&quot;</span><br><span class="line">##\t表示插入tab,\c表示不换行，需要使用-e选项；或者直接-n选项也是不换行</span><br><span class="line">let j++</span><br><span class="line">done</span><br><span class="line">let i++</span><br><span class="line">echo</span><br><span class="line">## echo 表示打印一行后进行换行 </span><br><span class="line">done</span><br></pre></td></tr></table></figure></p><ol start="3"><li>编写脚本，利用变量RANDOM生成10个随机数字，输出这个10数字，并显示其中的最大值和最小值</li></ol><ul><li><p>方法1</p><figure class="highlight plain"><figcaption><span>scripts ]#cat ran_10.sh </span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">## 打印随机数列表并且不换行</span><br><span class="line">echo -n &quot;rand_list:   &quot;</span><br><span class="line">## 循环生成10个数字</span><br><span class="line">i=1</span><br><span class="line">while [ $i -le 10 ];do</span><br><span class="line">rand=`echo $RANDOM`</span><br><span class="line">## 每循环一次输出一个随机数，并且不换行显示</span><br><span class="line">echo -e &quot;$rand\t\c&quot;</span><br><span class="line">## 如果第一次打印，则没有其他数字可以比较，这时最大和最小都是自己</span><br><span class="line">if [ $i -eq 1 ];then</span><br><span class="line">max=$rand</span><br><span class="line">min=$rand</span><br><span class="line">fi</span><br><span class="line">## 如果随机数大于当前最大值，则把随机数替换为目前最大值</span><br><span class="line">if [ $max -lt $rand ];then</span><br><span class="line">max=$rand</span><br><span class="line">## 如果随机数小于当前最小值，则进行替换</span><br><span class="line">elif</span><br><span class="line">[ $min -gt $rand ];then</span><br><span class="line">min=$rand</span><br><span class="line">## 对于其他情况保持true，默认</span><br><span class="line">else</span><br><span class="line">true</span><br><span class="line">fi </span><br><span class="line">let i++</span><br><span class="line">done</span><br><span class="line">echo## 打印完所有随机数后进行换行</span><br><span class="line">## 输出最大值和最小值</span><br><span class="line">echo max is $max</span><br><span class="line">echo min is $min</span><br></pre></td></tr></table></figure></li><li><p>方法2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 scripts ]#cat ran_10_1.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">## 定义存储随机数的文件</span><br><span class="line">file=/data/ran.txt</span><br><span class="line">## 每次执行脚本之前清空文件，否则会保留原来的数据</span><br><span class="line">&gt; $file</span><br><span class="line">for((i=1;i&lt;=10;i++));do</span><br><span class="line">## 循环追加随机数到文件中</span><br><span class="line">echo $RANDOM &gt;&gt; $file</span><br><span class="line">done</span><br><span class="line">## 利用sort进行排序，取最大值和最小值</span><br><span class="line">echo max `cat $file|sort -nr|head -1`</span><br><span class="line">echo min `cat $file|sort -nr|tail -1`</span><br></pre></td></tr></table></figure></li></ul><ol start="4"><li>编写脚本，实现打印国际象棋棋盘</li></ol><ul><li><p>方法1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 scripts ]#cat International_chess.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">## 国际象棋：8行8列</span><br><span class="line">## 定义行数为i；列数为j</span><br><span class="line">## 思路：奇数行——————红绿红绿红绿红绿； 奇数列===红; 偶数列===绿</span><br><span class="line">##  偶数行——————绿红绿红绿红绿红； 奇数列===绿；偶数列===红</span><br><span class="line">##判断奇数行的奇数列和偶数列分别打印什么颜色；偶数行的奇数列和偶数列分别打印什么颜色； </span><br><span class="line"></span><br><span class="line">## 定义行的循环，循环8次</span><br><span class="line">for((i=1;i&lt;=8;i++));do</span><br><span class="line">## 对2进行取模，判断是奇数行还是偶数行</span><br><span class="line">i_value=`echo $[i%2]`</span><br><span class="line">## 如果是奇数行，则直接执行下面打印行的操作</span><br><span class="line">if [ $i_value -ne 0 ];then</span><br><span class="line">## 定义一行，一列循环8次</span><br><span class="line">for((j=1;j&lt;=8;j++));do</span><br><span class="line">## 对2进行取模，判断是奇数列还是偶数列</span><br><span class="line">j_value=`echo $[j%2]`</span><br><span class="line">## 如果是偶数列，则打印绿色，注意不换行</span><br><span class="line">if [ $j_value -eq 0 ];then</span><br><span class="line"> echo -e &quot;\e[42m  \e[0m\c&quot;</span><br><span class="line">## 否则对于奇数列，则打印红色，注意，不换行</span><br><span class="line">else</span><br><span class="line"> echo -e &quot;\e[41m  \e[0m\c&quot;</span><br><span class="line">fi</span><br><span class="line">done</span><br><span class="line">## 打印完一行后进行换行</span><br><span class="line">echo</span><br><span class="line">## 对应第9行，如果是偶数行，则执行下面的语句，颜色和奇数行正好相反；</span><br><span class="line">else</span><br><span class="line">for((j=1;j&lt;=8;j++));do</span><br><span class="line">            j_value=`echo $[j%2]`</span><br><span class="line">        if [ $j_value -eq 0 ];then</span><br><span class="line">            echo -e &quot;\e[41m  \e[0m\c&quot;</span><br><span class="line">        else</span><br><span class="line">            echo -e &quot;\e[42m  \e[0m\c&quot;</span><br><span class="line">        fi</span><br><span class="line">    done</span><br><span class="line">    echo</span><br><span class="line">    fi</span><br><span class="line">done</span><br></pre></td></tr></table></figure></li><li><p>方法2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 scripts ]#cat International_chess1.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">## 国际象棋：8行8列</span><br><span class="line">## 定义行数为i；列数为j</span><br><span class="line">## 思路2： </span><br><span class="line">## 第一行===红绿红绿红绿红绿</span><br><span class="line">## 第二行===绿红绿红绿红绿红 </span><br><span class="line">## 打印一行奇数行偶数行，然后循环4次；</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">for ((k=1;k&lt;=4;k++));do</span><br><span class="line">for ((i=1;i&lt;=2;i++));do</span><br><span class="line">if [ $i -eq 1 ];then</span><br><span class="line">for ((j=1;j&lt;=8;j++));do</span><br><span class="line">j_value=`echo $[j%2]`</span><br><span class="line">## 如果是偶数列，则打印绿色，注意不换行</span><br><span class="line">if [ $j_value -eq 0 ];then</span><br><span class="line"> echo -e &quot;\e[42m  \e[0m\c&quot;</span><br><span class="line">## 否则对于奇数列，则打印红色，注意，不换行</span><br><span class="line">else</span><br><span class="line"> echo -e &quot;\e[41m  \e[0m\c&quot;</span><br><span class="line">fi</span><br><span class="line">done</span><br><span class="line">## 打印完一行后进行换行</span><br><span class="line">echo</span><br><span class="line">else</span><br><span class="line">for ((j=1;j&lt;=8;j++));do</span><br><span class="line">        j_value=`echo $[j%2]`</span><br><span class="line">## 如果是偶数列，则打印绿色，注意不换行</span><br><span class="line">        if [ $j_value -eq 0 ];then</span><br><span class="line">            echo -e &quot;\e[41m  \e[0m\c&quot;</span><br><span class="line">## 否则对于奇数列，则打印红色，注意，不换行</span><br><span class="line">        else</span><br><span class="line">            echo -e &quot;\e[42m  \e[0m\c&quot;</span><br><span class="line">        fi</span><br><span class="line">    done</span><br><span class="line">## 打印完一行后进行换行</span><br><span class="line">    echo</span><br><span class="line">fi</span><br><span class="line">done</span><br><span class="line">done</span><br></pre></td></tr></table></figure></li><li><p>国际象棋巨无霸版</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 scripts ]#cat International_chess_big.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">##思路：</span><br><span class="line">## 第五步：循环8次，打印大的方块行</span><br><span class="line">for((n=1;n&lt;=8;n++));do</span><br><span class="line">## 第六步：取模，判断奇数行还是偶数行，然后输出对应的方块行；</span><br><span class="line">value=`echo $[n%2]`</span><br><span class="line">if [ $value -ne 0 ];then</span><br><span class="line">## 第四步：再以更大的循环，循环4次，打印前4行，即出现大的方块===黄绿黄绿黄绿黄绿</span><br><span class="line">for ((k=1;k&lt;=4;k++));do</span><br><span class="line">## 第三步:以大的循环，循环4次，打印第一行；</span><br><span class="line">for ((i=1;i&lt;=4;i++));do</span><br><span class="line">## 第一步:先循环输出4个小黄色方块；</span><br><span class="line">for((j=1;j&lt;=4;j++));do</span><br><span class="line">echo -e &quot;\e[43m  \e[0m\c&quot;</span><br><span class="line">done</span><br><span class="line">## 第二步:循环输出4个小蓝色方块；</span><br><span class="line">    for((j=1;j&lt;=4;j++));do</span><br><span class="line">        echo -e &quot;\e[44m  \e[0m\c&quot;</span><br><span class="line">done</span><br><span class="line">done</span><br><span class="line">## 换行</span><br><span class="line">echo</span><br><span class="line">done</span><br><span class="line">## 对应上面的第六步，if判断，这里为偶数行对应的方块颜色,其他同上</span><br><span class="line">else</span><br><span class="line">for ((k=1;k&lt;=4;k++));do</span><br><span class="line">        for ((i=1;i&lt;=4;i++));do</span><br><span class="line">            for((j=1;j&lt;=4;j++));do</span><br><span class="line">                echo -e &quot;\e[44m  \e[0m\c&quot;</span><br><span class="line">            done</span><br><span class="line">            for((j=1;j&lt;=4;j++));do</span><br><span class="line">                echo -e &quot;\e[43m  \e[0m\c&quot;</span><br><span class="line">            done</span><br><span class="line">        done</span><br><span class="line">        echo</span><br><span class="line">    done</span><br><span class="line">fi</span><br><span class="line">done</span><br></pre></td></tr></table></figure></li></ul><ol start="5"><li>后续六个字符串：efbaf275cd、4be9c40b8b、44b2395c46、<br>f8c8873ce0、b902c16c8b、ad865d2f63是通过对随机数变量RANDOM随机<br>执行命令： echo $RANDOM|md5sum|cut –c1-10 后的结果，请破解这些<br>字符串对应的RANDOM值</li></ol><ul><li><p>方法1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 scripts ]#cat pojie.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">sum=&quot;efbaf275cd 4be9c40b8b 44b2395c46 f8c8873ce0 b902c16c8b ad865d2f63&quot;</span><br><span class="line">for i in &#123;0..32767&#125;;do</span><br><span class="line">test_num=`echo $i|md5sum|cut -c 1-10`</span><br><span class="line">for num in $sum;do</span><br><span class="line">if [ &quot;$test_num&quot; == &quot;$num&quot; ];then</span><br><span class="line"> echo &quot;$num-----$i&quot;</span><br><span class="line">fi</span><br><span class="line">done</span><br><span class="line">done</span><br></pre></td></tr></table></figure></li><li><p>方法2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 scripts ]#cat pojie1.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">## 首先将0-32767内的所有数字通过md5sum加密，然后把加密后的字符串和加密前的数字对应的写入日志中</span><br><span class="line">&gt; /tmp/random.log</span><br><span class="line">for i in &#123;0..32767&#125;</span><br><span class="line">do</span><br><span class="line">echo &quot;`echo $i|md5sum ` $i&quot; &gt;&gt; /tmp/random.log</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">## 定义已经给出的加密的字符串</span><br><span class="line">md5_sum=efbaf275cd</span><br><span class="line">while read line</span><br><span class="line">do</span><br><span class="line">## 循环日志中的每一行进行过滤，如果符合要求，则wc后的值为1</span><br><span class="line">if [ `echo $line|grep &quot;$md5_sum&quot;|wc -l` -eq 1 ];then</span><br><span class="line">## 打印查找到的行</span><br><span class="line">echo $line#</span><br><span class="line">break</span><br><span class="line">fi</span><br><span class="line">done &lt; /tmp/random.log ## 读取加密后的日志文件</span><br></pre></td></tr></table></figure></li></ul><h2 id="until语句练习"><a href="#until语句练习" class="headerlink" title="until语句练习"></a>until语句练习</h2><ol><li>每隔3秒钟到系统上获取已经登录的用户的信息；如果发现用户hacker登录，则将登录时间和主机记录于日志/var/log/login.log中,并退出脚本</li></ol><ul><li><p>方法1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 scripts ]#cat hacker.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">## 判断用户是否是否登录，until语句条件为真则退出循环；条件为假则执行循环</span><br><span class="line">until who|grep -q &quot;^hacker\&gt;&quot;;do</span><br><span class="line">    sleep 3</span><br><span class="line">done                                    </span><br><span class="line">## 如果有hacker用户在登录，则退出循环，并执行下面的pkill语句。</span><br><span class="line">pkill -9 -U hacker                      ## 注意 pkill -9 可以杀死用户所有的进程。</span><br></pre></td></tr></table></figure></li><li><p>方法2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 scripts ]#cat hacker1.sh </span><br><span class="line">## 优化版：不退出脚本，进入死循环，hacker一旦登录，则直接踢出去</span><br><span class="line">#!/bin/bash </span><br><span class="line">until false; do                         ## 由于until语句为假则执行循环体，即一旦hacker登录，就立即踢出去，并且这里为死循环</span><br><span class="line">    who|grep -q &quot;^hacker\&gt;&quot; &amp;&amp; pkill -9 -U hacker</span><br><span class="line">    sleep 3</span><br><span class="line">done</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      <categories>
          
          <category> shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell编程 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>shell编程之入门</title>
      <link href="/2018/10/03/shell%E7%BC%96%E7%A8%8B%E4%B9%8B%E5%85%A5%E9%97%A8/"/>
      <url>/2018/10/03/shell%E7%BC%96%E7%A8%8B%E4%B9%8B%E5%85%A5%E9%97%A8/</url>
      <content type="html"><![CDATA[<h2 id="shell编程结构："><a href="#shell编程结构：" class="headerlink" title="shell编程结构："></a>shell编程结构：</h2><p>各种系统命令的组合<br> 数据存储：变量、数组<br> 表达式: a + b<br> 语句:if 、case、for、while、until等<br>  <a id="more"></a></p><h1 id="shell脚本"><a href="#shell脚本" class="headerlink" title="shell脚本"></a>shell脚本</h1><h2 id="创建："><a href="#创建：" class="headerlink" title="创建："></a>创建：</h2><hr><p>第一行必须声明shell：#!/bin/bash<br>可以添加注释，以#开头</p><blockquote><p>规范：<br>1、第一行一般为调用使用的语言<br>2、程序名，避免更改文件名为无法找到正确的文件<br>3、版本号<br>4、更改后的时间<br>5、作者相关信息<br>6、该程序的作用，及注意事项<br>7、最后是各版本的更新简要说明  </p></blockquote><h2 id="执行："><a href="#执行：" class="headerlink" title="执行："></a>执行：</h2><hr><ul><li>给x权限，然后使用绝对、相对路径执行；或者添加到PATH变量中，直接文件名执行。</li><li>直接调用bash执行；</li><li>source或.</li><li>echo … | bash  （后期可以下载互联网上的脚本给bash）</li></ul><h2 id="脚本调试"><a href="#脚本调试" class="headerlink" title="脚本调试"></a>脚本调试</h2><hr><p>检测语法：sh -n<br>调试执行：sh -x</p><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><hr><pre><code>就是一段命名的内存空间</code></pre><p>支持的类型：字符型、数值型：整型、浮点型</p><blockquote><p>由于shell是弱类型语言，不需要指定类型；并且<br>bash 不支持浮点数</p></blockquote><h4 id="命名"><a href="#命名" class="headerlink" title="命名"></a>命名</h4><ul><li>不能使用程序中的保留字，如if、for</li><li>只能使用数字、字母及下划线，且不能以数字开头</li><li>命名需要人性化，见名知义</li><li>使用驼峰命名法，如studentName</li></ul><h4 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h4><ul><li>局部：生效范围为当前shell进程；对当前shell之外的其它shell进程，包括 当前shell的子shell进程均无效  </li><li>环境：生效范围为当前shell进程及其子进程  </li><li>只读:</li><li>位置变量：$1, $2, …来表示，用于在shell脚本中引用命令行传入的参数；  </li><li>特殊变量：$?, $0, $*, $@, $#,$$</li></ul><h5 id="局部变量"><a href="#局部变量" class="headerlink" title="局部变量"></a>局部变量</h5><blockquote><p>赋值：</p><ul><li>普通字符串：name=”value“</li><li>变量引用：name=”$USER”</li><li>命令：name=<code>cmd</code> name=$(cmd)</li><li>文件路径：filename=/etc/fstab  </li></ul></blockquote><blockquote><p>变量引用：   </p><ul><li>“” ：直接引用变量值   </li><li>‘’ ：保持原字符串<br>显示所有已定义的变量————set<br>删除变量——————————unset name</li></ul></blockquote><h4 id="练习："><a href="#练习：" class="headerlink" title="练习："></a>练习：</h4><ol><li>编写脚本/root/bin/systeminfo.sh,显示当前主机系统信息，包括主机名，</li></ol><p>IPv4地址，操作系统版本，内核版本，CPU型号，内存大小，硬盘大小<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 test]#cat systeminfo.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">echo &quot;My hostname is ` hostname`&quot;</span><br><span class="line">echo &quot;os version is:`cat /etc/centos-release`&quot;</span><br><span class="line">echo &quot;kernel version is `uname -r`&quot;</span><br><span class="line">echo &quot;CPU type:`lscpu | grep &quot;Model name&quot; | tr -s &quot; &quot; | cut -d: -f2`&quot;</span><br><span class="line">echo &quot;meminfo:`cat /proc/meminfo|head -1|tr -s &quot; &quot;|cut -d: -f2 `&quot;</span><br><span class="line">echo &quot;Disk:`lsblk|grep &quot;^sd&quot;|tr -s &quot; &quot;|cut -d&quot; &quot; -f1,4`&quot;</span><br><span class="line">echo &quot;My username is $USER&quot;</span><br><span class="line">[root@centos7 test]#sh systeminfo.sh </span><br><span class="line">My hostname is centos7.localdomain</span><br><span class="line">os version is:CentOS Linux release 7.5.1804 (Core) </span><br><span class="line">kernel version is 3.10.0-862.el7.x86_64</span><br><span class="line">CPU type: Intel(R) Core(TM) i5-4210U CPU @ 1.70GHz</span><br><span class="line">meminfo: 1258076 kB</span><br><span class="line">Disk:sda 200G</span><br><span class="line">My username is root</span><br></pre></td></tr></table></figure></p><ol start="2"><li><p>编写脚本/root/bin/backup.sh，可实现每日将/etc/目录备份到<br>/root/etcYYYY-mm-dd中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 test]#cat backup.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">cp -a /etc/ /root/etc`date +%F` &amp;&amp; echo &quot;backup is ok&quot; || echo &quot;backup is err&quot;</span><br><span class="line">[root@centos7 test]#sh backup.sh </span><br><span class="line">backup is ok</span><br><span class="line">[root@centos7 test]#</span><br></pre></td></tr></table></figure></li><li><p>编写脚本/root/bin/disk.sh,显示当前硬盘分区中空间利用率最大的值</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 test]#cat disk.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">echo &quot;Disk is `df -h|tr -s &quot; &quot; %|cut -d% -f5|sort -nr|head -1`&quot;</span><br><span class="line">[root@centos7 test]#sh disk.sh </span><br><span class="line">Disk is 16</span><br></pre></td></tr></table></figure><ol start="4"><li>编写脚本/root/bin/links.sh,显示正连接本主机的每个远程主机的IPv4地址和连接数，并按连接数从大到小排序</li></ol><h5 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h5><p>声明和赋值：  </p><pre><code>export name=VALUEdeclare -x name=VALUE</code></pre><p>引用：</p><pre><code>$name 或 ${name}其中，${name}用于区分变量和后面的字符，如：$(name)01</code></pre><p>显示所有环境变量：</p><pre><code>    envexport</code></pre><p>删除：</p><pre><code>unset name</code></pre><h5 id="只读变量"><a href="#只读变量" class="headerlink" title="只读变量"></a>只读变量</h5><p>特点：只能声明，但是不能修改和删除</p><blockquote><p>声明：</p></blockquote><pre><code>readonly  namedeclare  -r  name</code></pre><blockquote><p>查看：</p></blockquote><pre><code>readonly  -p</code></pre><h5 id="位置变量"><a href="#位置变量" class="headerlink" title="位置变量"></a>位置变量</h5><p>在脚本中调用命令行传入的参数  </p><ul><li>$1, $2, …：对应第1、第2等参数，shift [n]换位置<h5 id="特殊变量"><a href="#特殊变量" class="headerlink" title="特殊变量"></a>特殊变量</h5></li><li>$0: 命令本身</li><li>$*: 传递给脚本的所有参数，全部参数合为一个字符串</li><li>$@: 传递给脚本的所有参数，每个参数为独立字符串<blockquote><p>注意： ZHY$@ $* 只在被双引号包起来的时候才会有差异</p></blockquote></li><li>$#: 传递给脚本的参数的个数</li><li>$?：保存上一条命令的执行状态（0 代表成功，1－255代表失败）</li><li>set – 清空所有位置变量</li></ul><h5 id="退出状态码"><a href="#退出状态码" class="headerlink" title="退出状态码"></a>退出状态码</h5><pre><code>exit [n]：自定义退出状态码</code></pre><blockquote><p>注意：如果在脚本中指定状态码，脚本在执行过程中一旦遇到exit命令，立即终止；退出状态由exit后的数字决定。    </p></blockquote><blockquote><p>如果未给脚本指定退出状态码，整个脚本的退出状态码取决于脚本中执行的最后一条命令的状态码（即：如果前面有错误的命令，但是最后是执行成功的，那么状态码依然是0）</p></blockquote><h2 id="算术运算："><a href="#算术运算：" class="headerlink" title="算术运算："></a>算术运算：</h2><hr><pre><code>+, -, *, /, %取模（取余）, **（乘方）</code></pre><h4 id="实现方法："><a href="#实现方法：" class="headerlink" title="实现方法："></a>实现方法：</h4><ul><li>let var=算术表达式</li><li>var=$ [算术表达式]</li><li>var=$((算术表达式))</li><li>((a=1+3));echo $a</li><li>echo “算术表达式” |bc</li><li>var=$(expr arg1 arg2 arg3 …)  (注意空格)<blockquote><p>注意：乘法符号在有些场景下需要转义,如*</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> 方法一：</span><br><span class="line">[root@centos7 ~]#x=1</span><br><span class="line">[root@centos7 ~]#y=2</span><br><span class="line">[root@centos7 ~]#let sum=x+y</span><br><span class="line">[root@centos7 ~]#echo $sum</span><br><span class="line">3</span><br><span class="line">方法二：</span><br><span class="line">[root@centos7 ~]#echo $[x*y]</span><br><span class="line">2</span><br></pre></td></tr></table></figure></blockquote></li></ul><h4 id="赋值："><a href="#赋值：" class="headerlink" title="赋值："></a>赋值：</h4><p> +=，-=,*=,/=,%=<br> 例如：let count+=3,即自加3后赋值给自己。<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> [root@centos7 data 19:58:15]$count=10</span><br><span class="line">[root@centos7 data 20:45:31]$let count+=3</span><br><span class="line">[root@centos7 data 20:45:38]$echo $count</span><br><span class="line">13</span><br></pre></td></tr></table></figure></p><h4 id="自增、自减："><a href="#自增、自减：" class="headerlink" title="自增、自减："></a>自增、自减：</h4>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">let var+=1=====let var++</span><br><span class="line">let var-=1=====let var--</span><br></pre></td></tr></table></figure><h2 id="练习：-1"><a href="#练习：-1" class="headerlink" title="练习："></a>练习：</h2><hr><ol><li><p>编写脚本/root/bin/sumid.sh，计算/etc/passwd文件中的第10个用户和第20用户的ID之和</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">uid10=`head /etc/passwd|tail -n1|cut -d: -f3`</span><br><span class="line">uid20=`head -20 /etc/passwd|tail -n1|cut -d: -f3`</span><br><span class="line">echo &quot;sumid is $[uid10+uid20]&quot;</span><br></pre></td></tr></table></figure></li><li><p>编写脚本/root/bin/sumspace.sh，传递两个文件路径作为参数给脚本，计算这两个文件中所有空白行之和</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">space1=`grep  &quot;^$&quot; $1|wc -l `</span><br><span class="line">echo &quot;$1 is $space1&quot;</span><br><span class="line">space2=`grep &quot;^$&quot;  $2|wc -l `</span><br><span class="line">echo &quot;$2 is $space2&quot;</span><br><span class="line">echo &quot;$[space1+space2]&quot;</span><br></pre></td></tr></table></figure></li><li><p>编写脚本/root/bin/sumfile.sh,统计/etc,/var, /usr目录中共有多少个一级子目录和文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">dirsum1=`ls -l $1|wc -l`</span><br><span class="line">echo &quot;$1 dirnum is $dirsum1&quot;</span><br><span class="line">dirsum2=`ls -l $2|wc -l`</span><br><span class="line">echo &quot;$2 dirnum is $dirsum2&quot;</span><br><span class="line">dirsum3=`ls -l $3|wc -l`</span><br><span class="line">echo &quot;$3 dirnum is $dirsum3&quot;</span><br><span class="line">echo &quot;is $[dirsum1+dirsum2+dirsum3]&quot;</span><br></pre></td></tr></table></figure></li></ol><h2 id="逻辑运算："><a href="#逻辑运算：" class="headerlink" title="逻辑运算："></a>逻辑运算：</h2><hr><p>true —-1  （总是成功）<br>false—-0  （总是失败）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 mnt]# true </span><br><span class="line">[root@centos7 mnt]# echo $?</span><br><span class="line">0</span><br><span class="line">[root@centos7 mnt]# false</span><br><span class="line">[root@centos7 mnt]# echo $?</span><br><span class="line">1</span><br></pre></td></tr></table></figure></p><blockquote><p>注意：这里的1和0和前面的$?不一样，不要混淆。</p></blockquote><h4 id="与："><a href="#与：" class="headerlink" title="与："></a>与：</h4><pre><code>1 与 1 = 11 与 0 = 00 与 1 = 00 与 0 = 0 即：和1与的保留原值；  和0与的都为0</code></pre><p>例如：十进制12&amp;8在与的时候需要转换成二进制，分别为1100和1000，想与即1000；<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]#((a=12&amp;8))</span><br><span class="line">[root@centos7 ~]#echo $a</span><br><span class="line">8</span><br></pre></td></tr></table></figure></p><h4 id="或："><a href="#或：" class="headerlink" title="或："></a>或：</h4> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1 或 1 = 1</span><br><span class="line">1 或 0 = 1</span><br><span class="line">0 或 1 = 1</span><br><span class="line">0 或 0 = 0</span><br><span class="line">即：和1或的都为1，和0或的保持原值不变。</span><br></pre></td></tr></table></figure><h4 id="非："><a href="#非：" class="headerlink" title="非："></a>非：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">非：！  </span><br><span class="line">! 1 = 0   </span><br><span class="line">! 0 = 1</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 mnt]# ! true</span><br><span class="line">[root@centos7 mnt]# echo $?</span><br><span class="line">1</span><br><span class="line">[root@centos7 mnt]# ! false</span><br><span class="line">[root@centos7 mnt]# echo $?</span><br><span class="line">0</span><br></pre></td></tr></table></figure><h4 id="短路运算："><a href="#短路运算：" class="headerlink" title="短路运算："></a>短路运算：</h4><h5 id="短路与："><a href="#短路与：" class="headerlink" title="短路与："></a>短路与：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">表达式：cmd1 &amp;&amp; cmd2</span><br><span class="line"></span><br><span class="line">如果cmd1成功，则执行cmd2</span><br><span class="line"></span><br><span class="line">如果cmd1失败，则不执行cmd2</span><br></pre></td></tr></table></figure><p>原理：<br>    当cmd1为真，则整体的真假由后面的cmd2判断；<br>    当cmd2为假，整体为假；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">测试：</span><br><span class="line">如果文件存在，则添加x权限；</span><br><span class="line">ls anaconda-ks.cfg &amp;&gt;  /dev/null &amp;&amp; chmod +x anaconda-ks.cfg</span><br></pre></td></tr></table></figure><h5 id="短路或："><a href="#短路或：" class="headerlink" title="短路或："></a>短路或：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">表达式：cmd1 || cmd2</span><br><span class="line"></span><br><span class="line">如果cmd1成功，则不执行cmd2</span><br><span class="line"></span><br><span class="line">如果cmd1失败，则执行cmd2</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">测试：</span><br><span class="line"></span><br><span class="line">案例1：如果用户不存在，则创建该用户：</span><br><span class="line">[root@centos7 mnt]# id wan &amp;&gt; /dev/null || useradd wan</span><br><span class="line">案例2：如果用户不存在，则创建该用户，并输出创建提示；</span><br><span class="line">[root@centos7 mnt]# id wan &amp;&gt; /dev/null || ( useradd wan &amp;&gt; /dev/null ; echo wan is created )</span><br><span class="line">wan is created </span><br><span class="line">案例3：如果用户不存在，则创建该用户，并输出创建提示；否则当用户存在时，提示；</span><br><span class="line">[root@centos7 mnt]# name=mage; id $name &amp;&gt; /dev/null &amp;&amp; echo $name is exist || ( useradd $name &amp;&gt; /dev/null ; echo $name is created )</span><br><span class="line">mage is created  </span><br><span class="line">[root@centos7 mnt]# name=mage; id $name &amp;&gt; /dev/null &amp;&amp; echo $name is exist || ( useradd $name &amp;&gt; /dev/null ; echo $name is created )</span><br><span class="line">mage is exist</span><br></pre></td></tr></table></figure><h5 id="异或："><a href="#异或：" class="headerlink" title="异或：^"></a>异或：^</h5><p>异或：相同为0，不同为1； （1为真）<br>同或：相同为1，不同为0；<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">12^8=?</span><br><span class="line"></span><br><span class="line">1100</span><br><span class="line">1000</span><br><span class="line">0100=4</span><br><span class="line"></span><br><span class="line">案例：</span><br><span class="line">[root@centos7 test]$ echo $[ 12^8 ]</span><br><span class="line">4</span><br><span class="line"></span><br><span class="line">用途：对调数字</span><br><span class="line">a^b=c;a^c=b;b^c=a</span><br><span class="line">可以通过异或来对调数字，但是不支持字母</span><br></pre></td></tr></table></figure></p><h2 id="条件测试："><a href="#条件测试：" class="headerlink" title="条件测试："></a>条件测试：</h2><hr><h4 id="测试命令："><a href="#测试命令：" class="headerlink" title="测试命令："></a>测试命令：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">test EXPRESSION</span><br><span class="line">[ EXPRESSION ]</span><br><span class="line">[[ EXPRESSION ]]</span><br></pre></td></tr></table></figure><blockquote><p>note:EXPRESSION前后必须有空白字符！</p><ul><li>若真，则返回0</li><li>若假，则返回1</li></ul></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">1.判断centos版本号，然后使用相关命令启动服务；</span><br><span class="line">[root@centos7 ~]#grep -oE &quot;[[:digit:]]+&quot; /etc/centos-release|head -n1</span><br><span class="line">7</span><br><span class="line">[root@centos7 ~]#version=&apos;grep -oE &quot;[[:digit:]]+&quot; /etc/centos-release|head -n1&apos;</span><br><span class="line">[root@centos7 ~]#[ $version -eq 6 ] &amp;&amp; service network restart</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]#[ $version -eq 7 ] &amp;&amp; systemctl restart network</span><br><span class="line"></span><br><span class="line">2.测试主机是否存活？</span><br><span class="line">[root@centos7 ~]#ip=192.168.1.1</span><br><span class="line">[root@centos7 ~]#ping -c1 $ip &amp;&gt; /dev/null &amp;&amp; echo &amp;ip is up || echo &amp;ip is down</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3.如果cmd1成功，就执行cmd2，如果cmd2失败，就执行cmd3</span><br><span class="line">——————————cmd1 &amp;&amp; cmd2 || cmd3——————————</span><br><span class="line">[root@centos7 ~]#name=xin</span><br><span class="line">[root@centos7 ~]#id -u name &amp;&gt; /dev/null &amp;&amp; echo name is exist || echo name is not exist</span><br><span class="line">name is not exist</span><br></pre></td></tr></table></figure><p>注意:下面这个逻辑关系不常用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">——————————cmd1 || cmd2 &amp;&amp; cmd3——————————————</span><br><span class="line">即：如果cmd1成功，就不执行cmd2，————cmd3执行；</span><br><span class="line">    如果cmd1失败，就会执行cmd2，————cmd3执行；</span><br><span class="line">    由于cmd3总执行，所以一般不用这种逻辑关系；</span><br></pre></td></tr></table></figure></p><h4 id="测试类型："><a href="#测试类型：" class="headerlink" title="测试类型："></a>测试类型：</h4><blockquote><p> 数值测试<br> 字符串测试<br> 文件测试   </p></blockquote><h5 id="数值型"><a href="#数值型" class="headerlink" title="数值型"></a>数值型</h5><blockquote><p>-gt 是否大于<br> -ge 是否大于等于<br> -eq 是否等于<br> -ne 是否不等于<br> -lt 是否小于<br> -le 是否小于等于   </p></blockquote><h5 id="字符串类型"><a href="#字符串类型" class="headerlink" title="字符串类型"></a>字符串类型</h5><ul><li>==：是否等于，不加“”，支持通配符</li><li>>: 是否大于</li><li>&lt; : 是否小于</li><li>!=：是否不等于</li><li>=~：匹配字符串，不加“”， 【一般用于[[]]中，支持扩展的正则表达式】</li><li>-z “string”：测试字符串是否为空，空则为真，不空则为假；</li><li>-n “string”：测试字符串是否不空，不空则为真，空则为假；</li></ul><blockquote><p>注意：字符串比较时加引号；</p></blockquote><h4 id="练习"><a href="#练习" class="headerlink" title="练习:"></a>练习:</h4><p>1、编写脚本/root/bin/argsnum.sh，接受一个文件路径作为参数；如果参数<br>个数小于1，则提示用户“至少应该给一个参数”，并立即退出；如果参数个数<br>不小于1，则显示第一个参数所指向的文件中的空白行数<br>2、编写脚本/root/bin/hostping.sh，接受一个主机的IPv4地址做为参数，测<br>试是否可连通。如果能ping通，则提示用户“该IP地址可访问”；如果不可<br>ping通，则提示用户“该IP地址不可访问”<br>3、编写脚本/root/bin/checkdisk.sh，检查磁盘分区空间和inode使用率，如<br>果超过80%，就发广播警告空间将满  </p><h4 id="文件测试："><a href="#文件测试：" class="headerlink" title="文件测试："></a>文件测试：</h4><h5 id="存在性测试"><a href="#存在性测试" class="headerlink" title="存在性测试"></a>存在性测试</h5><p>-a FILE：同-e<br>-e FILE: 文件存在性测试，存在为真，否则为假  </p><h5 id="存在性及类别测试"><a href="#存在性及类别测试" class="headerlink" title="存在性及类别测试"></a>存在性及类别测试</h5><p>-b FILE：是否存在且为块设备文件<br>-c FILE：是否存在且为字符设备文件<br>-d FILE：是否存在且为目录文件<br>-f FILE：是否存在且为普通文件<br>-h FILE 或 -L FILE：存在且为符号链接文件<br>-p FILE：是否存在且为命名管道文件<br>-S FILE：是否存在且为套接字文件  </p><h5 id="文件权限测试"><a href="#文件权限测试" class="headerlink" title="文件权限测试"></a>文件权限测试</h5><p>-r FILE：是否存在且可读<br>-w FILE: 是否存在且可写<br>-x FILE: 是否存在且可执行  </p><h5 id="文件特殊权限测试"><a href="#文件特殊权限测试" class="headerlink" title="文件特殊权限测试"></a>文件特殊权限测试</h5><p>-u FILE：是否存在且拥有suid权限<br>-g FILE：是否存在且拥有sgid权限<br>-k FILE：是否存在且拥有sticky权限  </p><h5 id="文件大小测试"><a href="#文件大小测试" class="headerlink" title="文件大小测试"></a>文件大小测试</h5><p>-s FILE: 是否存在且非空</p><h5 id="文件是否打开"><a href="#文件是否打开" class="headerlink" title="文件是否打开"></a>文件是否打开</h5><p>-t fd: fd 文件描述符是否在某终端已经打开<br>-N FILE：文件自从上一次被读取之后是否被修改过<br>-O FILE：当前有效用户是否为文件属主<br>-G FILE：当前有效用户是否为文件属组  </p><h5 id="双目测试"><a href="#双目测试" class="headerlink" title="双目测试"></a>双目测试</h5><p>FILE1 -ef FILE2: FILE1是否是FILE2的硬链接<br>FILE1 -nt FILE2: FILE1是否新于FILE2（mtime）<br>FILE1 -ot FILE2: FILE1是否旧于FILE2</p><h5 id="组合测试："><a href="#组合测试：" class="headerlink" title="组合测试："></a>组合测试：</h5><ul><li><p>方式一：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">COMMAND1 &amp;&amp; COMMAND2 并且  </span><br><span class="line">COMMAND1 || COMMAND2 或者  </span><br><span class="line">! COMMAND 非  </span><br><span class="line">如：[[ -r FILE ]] &amp;&amp; [[ -w FILE ]]</span><br><span class="line"></span><br><span class="line">注意：&amp;&amp; ||等放在[]外</span><br></pre></td></tr></table></figure></li><li><p>方式二：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">EXPRESSION1 -a EXPRESSION2 并且  </span><br><span class="line">EXPRESSION1 -o EXPRESSION2 或者  </span><br><span class="line">! EXPRESSION</span><br><span class="line"></span><br><span class="line">注意：-a..放在[]中</span><br></pre></td></tr></table></figure></li></ul><h4 id="练习：-2"><a href="#练习：-2" class="headerlink" title="练习："></a>练习：</h4><p>1、编写脚本/bin/per.sh,判断当前用户对指定参数文件，是否不可读并且不可写<br>2、编写脚本/root/bin/excute.sh ，判断参数文件是否为sh后缀的普通文件，如果是，添加所有人可执行权限，否则提示用户非脚本文件<br>3、编写脚本/root/bin/nologin.sh和login.sh,实现禁止和充许普通用户登录系统  </p><h2 id="read命令——————接受用户输入"><a href="#read命令——————接受用户输入" class="headerlink" title="read命令——————接受用户输入"></a>read命令——————接受用户输入</h2><blockquote><p>常见选项：  </p><p>-p 指定要显示的提示<br>-s 静默输入，一般用于密码<br>-n N 指定输入的字符长度N<br>-d ‘字符’ 输入结束符<br>t N TIMEOUT为N秒  </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">read -p “Enter a filename: “ FILE</span><br></pre></td></tr></table></figure><h2 id="防止扩展："><a href="#防止扩展：" class="headerlink" title="防止扩展："></a>防止扩展：</h2><ul><li>反斜线（\）会使随后的字符按原意解释  </li><li>加引号来防止扩展  <ul><li>单引号（’）防止所有扩展  </li><li>双引号（”）也防止所有扩展，但是以下情况例外： <ul><li>$（美元符号） － 变量扩展  </li><li>`（反引号） － 命令替换  </li><li>\（反斜线） － 禁止单个字符扩展  </li><li>!（叹号） － 历史命令替换   </li></ul></li></ul></li></ul><h2 id="bash的配置文件："><a href="#bash的配置文件：" class="headerlink" title="bash的配置文件："></a>bash的配置文件：</h2><h3 id="分类一：按范围"><a href="#分类一：按范围" class="headerlink" title="分类一：按范围"></a>分类一：按范围</h3><ul><li><p>全局配置：<br>/etc/profile<br>/etc/profile.d/*.sh<br>/etc/bashrc    </p></li><li><p>个人配置：<br>~/.bash_profile<br>~/.bashrc  </p></li></ul><h3 id="分类二：按功能"><a href="#分类二：按功能" class="headerlink" title="分类二：按功能"></a>分类二：按功能</h3><h4 id="profile类："><a href="#profile类：" class="headerlink" title="profile类："></a>profile类：</h4><p>为交互式登录的shell提供配置 </p><p>全局：/etc/profile, /etc/profile.d/*.sh<br>个人：~/.bash_profile<br>功能：<br>(1) 用于定义环境变量<br>(2) 运行命令或脚本</p><h4 id="bashrc类："><a href="#bashrc类：" class="headerlink" title="bashrc类："></a>bashrc类：</h4><p>为非交互式和交互式登录的shell提供配置<br>全局：/etc/bashrc<br>个人：~/.bashrc<br>功用：<br>(1) 定义命令别名和函数<br>(2) 定义本地变量  </p><h3 id="配置文件生效"><a href="#配置文件生效" class="headerlink" title="配置文件生效"></a>配置文件生效</h3><p>方法一：重新启动shell进程<br>方法二：<br>. 或source  例:. ~/.bashrc</p><h3 id="bash-logout文件："><a href="#bash-logout文件：" class="headerlink" title="bash_logout文件："></a>bash_logout文件：</h3><p>bash退出任务保存在~/.bash_logout文件中（用户） </p><p>在退出登录shell时运行  </p><p> 用于<br>• 创建自动备份<br>• 清除临时文件  </p><h2 id="补充————-变量"><a href="#补充————-变量" class="headerlink" title="补充————$-变量"></a>补充————$-变量</h2><ul><li><p>h：hashall，打开这个选项后，Shell 会将命令所在的路径hash下来，避免每次都要查询。通过set +h将h选项关闭</p></li><li><p>i：interactive-comments，包含这个选项说明当前的 shell 是一个交互式的shell。所谓的交互shell,在脚本中，i选项是关闭的。 </p></li><li><p>m：monitor，打开监控模式，就可以通过Job control来控制进程的停止、继续，后台或者前台执行等。</p></li><li><p>B：braceexpand，大括号扩展</p></li><li><p>H：history，H选项打开，可以展开历史列表中的命令，可以通过!感叹号来完成，例如“!!”返回上最近的一个历史命令，“!n”返回第 n 个历史命令</p></li></ul><h2 id="练习-1"><a href="#练习-1" class="headerlink" title="练习"></a>练习</h2><p>1、让所有用户的PATH环境变量的值多出一个路径，例如：<br>/usr/local/apache/bin  </p><p>2、用户root登录时，将命令指示符变成红色，并自动启用如下别名：<br>rm=‘rm –i’<br>cdnet=‘cd /etc/sysconfig/network-scripts/’<br>editnet=‘vim /etc/sysconfig/network-scripts/ifcfg-eth0’<br>editnet=‘vim /etc/sysconfig/network-scripts/ifcfg-eno16777736 或 ifcfg-ens33 ’ (如果系<br>统是CentOS7)  </p><p>3、任意用户登录系统时，显示红色字体的警示提醒信息“Hi,dangerous！”  </p><p>4、编写生成脚本基本格式的脚本，包括作者，联系方式，版本，时间，描述等  </p><p>5、编写用户的环境初始化脚本reset.sh，包括别名，登录提示符，vim的设置，<br>环境变量等</p>]]></content>
      
      <categories>
          
          <category> shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell编程 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>vim基础用法</title>
      <link href="/2018/10/02/vim%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/"/>
      <url>/2018/10/02/vim%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/</url>
      <content type="html"><![CDATA[<p>vi：Visual Interface，是一种文本编辑器，而vim是vi的增强版，vim是模式化的编辑。</p><h2 id="三种模式"><a href="#三种模式" class="headerlink" title="三种模式"></a>三种模式</h2><ul><li>命令模式：默认进入vim后所处的模式，支持移动光标，剪切/粘贴文本</li><li>插入或编辑模式：修改文本</li><li><p>末行模式：保存退出</p><a id="more"></a><h2 id="模式转换"><a href="#模式转换" class="headerlink" title="模式转换"></a>模式转换</h2></li><li><p>命令模式——&gt;插入模式：<br>i: insert, 在光标所在处输入<br>I：在当前光标所在行的行首输入<br>a: append, 在光标所在处后面输入<br>A：在当前光标所在行的行尾输入<br>o: 在当前光标所在行的下方打开一个新行<br>O：在当前光标所在行的上方打开一个新行  </p></li><li>插入模式——&gt;命令模式：<br>  按ESC</li><li>命令模式——&gt;末行模式：<br>  按：</li><li>末行模式——&gt;命令模式：<br>  按ESC<blockquote><p>插入模式和末行模式不可以直接切换，需要通过命令命令切换</p></blockquote></li></ul><h2 id="命令模式"><a href="#命令模式" class="headerlink" title="命令模式"></a>命令模式</h2><ul><li><p>光标跳转</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">字符间跳转：</span><br><span class="line">h: 左 l: 右 j: 下 k: 上  </span><br><span class="line"># COMMAND：跳转由#指定的个数的字符  </span><br><span class="line"></span><br><span class="line">单词间跳转：</span><br><span class="line">w：下一个单词的词首</span><br><span class="line">e：当前或下一单词的词尾</span><br><span class="line">b：当前或前一个单词的词首</span><br><span class="line">#COMMAND：由#指定一次跳转的单词数</span><br><span class="line"></span><br><span class="line">当前页跳转：</span><br><span class="line">H：页首 M：页中间行 L:页底</span><br><span class="line"></span><br><span class="line">行首行尾跳转：</span><br><span class="line">^: 跳转至行首的第一个非空白字符</span><br><span class="line">0: 跳转至行首</span><br><span class="line">$: 跳转至行尾</span><br><span class="line"></span><br><span class="line">行间移动：</span><br><span class="line">#G、扩展模式：# ：跳转至由#指定行</span><br><span class="line">G：最后一行</span><br><span class="line">1G, gg: 第一行</span><br></pre></td></tr></table></figure></li><li><p>翻屏操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+f: 向文件尾部翻一屏</span><br><span class="line">Ctrl+b: 向文件首部翻一屏</span><br><span class="line">Ctrl+d: 向文件尾部翻半屏</span><br><span class="line">Ctrl+u：向文件首部翻半屏</span><br></pre></td></tr></table></figure></li><li><p>字符编辑</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x: 删除光标处的字符</span><br><span class="line">#x: 删除光标处起始的#个字符</span><br><span class="line">xp: 交换光标所在处的字符及其后面字符的位置</span><br><span class="line">~:转换大小写</span><br><span class="line">J:删除当前行后的换行符</span><br></pre></td></tr></table></figure></li><li><p>替换命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">r: 替换光标所在处的字符</span><br><span class="line">R:切换成REPLACE模式</span><br></pre></td></tr></table></figure></li><li><p>删除命令</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">d$: 删除到行尾</span><br><span class="line">d^:删除到非空行首</span><br><span class="line">d0:删除到行首</span><br><span class="line">dw:删除单词</span><br><span class="line"></span><br><span class="line">dd：删除光标所在的行</span><br><span class="line">#dd: 多行删除</span><br><span class="line">D：从当前光标位置一直删除到行尾，留空行，等同于d$</span><br></pre></td></tr></table></figure><ul><li><p>复制命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">y$：复制到行尾</span><br><span class="line">y0：复制到行首</span><br><span class="line">y^：复制到行首</span><br><span class="line">yw：复制单词</span><br><span class="line"></span><br><span class="line">yy：复制当前行</span><br><span class="line">#yy：复制多行</span><br><span class="line"></span><br><span class="line">Y：复制整行</span><br></pre></td></tr></table></figure></li><li><p>粘贴命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">p：缓冲区存的如果为整行，则粘贴当前光标所在行的下方；否则，则粘贴至当前光标所在处的后面</span><br><span class="line">P：缓冲区存的如果为整行，则粘贴当前光标所在行的上方；否则，则粘贴至当前光标所在处的前面</span><br></pre></td></tr></table></figure></li><li><p>改变命令<br>c：修改后切换成插入模式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">c$</span><br><span class="line">c^</span><br><span class="line">c0</span><br><span class="line">cb</span><br><span class="line">ce</span><br><span class="line">cw</span><br><span class="line"></span><br><span class="line">cc：删除当前行并输入新内容，相当于S</span><br><span class="line">#cc: 删除多行并切换为插入模式</span><br><span class="line">C：删除当前光标到行尾，并切换成插入模式</span><br></pre></td></tr></table></figure></li><li><p>撤销更改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">u撤销最近的更改</span><br><span class="line">#u撤销之前多次更改</span><br><span class="line">U 撤消光标落在这行后所有此行的更改</span><br><span class="line">按Ctrl - r重做最后的“撤消”更改</span><br><span class="line">. 重复前一个操作</span><br><span class="line">n.重复前一个操作n次</span><br></pre></td></tr></table></figure></li><li><p>小技巧</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">100ixin [ESC] 表示粘贴“xin”100次</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">用法：&lt;start position&gt;&lt;command&gt;&lt;end position&gt;</span><br><span class="line">Command:</span><br><span class="line">y 复制、d 删除、gU 变大写、gu 变小写</span><br><span class="line">例如 0y$ 命令意味着：</span><br><span class="line">0 → 先到行头</span><br><span class="line">y → 从这里开始拷贝</span><br><span class="line">$ → 拷贝到本行最后一个字符</span><br><span class="line">ye 从当前位置拷贝到本单词的最后一个字符</span><br></pre></td></tr></table></figure><h2 id="末行模式"><a href="#末行模式" class="headerlink" title="末行模式"></a>末行模式</h2><p>按“:”进入末行模式</p><ul><li><p>关闭文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">:q  退出</span><br><span class="line">:q! 强制退出，丢弃做出的修改</span><br><span class="line">:w  保存</span><br><span class="line">:wq 保存退出</span><br><span class="line">:x  保存退出</span><br></pre></td></tr></table></figure></li><li><p>读取其他文件内容<br>r filename</p></li><li><p>当前文件另存为<br>w  filename</p></li><li><p>在vim中执行命令<br>！command</p></li><li><p>暂时退出vim到命令界面<br>: shell , exit返回到vim中</p></li><li><p>读入命令的输出<br>r! command</p></li></ul><ul><li><p>地址定界  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">地址定义：</span><br><span class="line"></span><br><span class="line">（1）:start_pos,end_pos</span><br><span class="line"># 具体第#行，例如2表示第2行</span><br><span class="line">#,# 从左侧#表示起始行，到右侧#表示结尾行</span><br><span class="line">#,+# 从左侧#表示的起始行，加上右侧#表示的行数</span><br><span class="line">：2,+3 表示2到5行</span><br><span class="line">. 当前行</span><br><span class="line">$ 最后一行</span><br><span class="line">.,$-1 当前行到倒数第二行</span><br><span class="line">% 全文, 相当于1,$</span><br><span class="line">（2）/pat1/,/pat2/</span><br><span class="line">从第一次被pat1模式匹配到的行开始，一直到第一次被pat2匹配到的行结束</span><br><span class="line">#,/pat/</span><br><span class="line">/pat/,$</span><br><span class="line"></span><br><span class="line">用法：地址+编辑命令</span><br><span class="line">d：删除地址内的内容</span><br><span class="line">y：复制内容</span><br><span class="line">w file: 将范围内的行另存至指定文件中</span><br><span class="line">r file：在指定位置插入指定文件中的所有内容</span><br></pre></td></tr></table></figure></li><li><p>查找</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/PATTERN：从当前光标所在处向文件尾部查找</span><br><span class="line">?PATTERN：从当前光标所在处向文件首部查找</span><br><span class="line">n：与命令同方向</span><br><span class="line">N：与命令反方向</span><br></pre></td></tr></table></figure></li><li><p>查找并替换</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">s: 在扩展模式下完成查找替换操作</span><br><span class="line">格式：s/要查找的内容/替换为的内容/修饰符</span><br><span class="line">要查找的内容：可使用模式</span><br><span class="line">替换为的内容：不能使用模式，但可以使用\1, \2, ...等后向引用符号；还可以使用“&amp;”引用前面查找时查找到的整个内容</span><br><span class="line"></span><br><span class="line">修饰符：</span><br><span class="line">i: 忽略大小写</span><br><span class="line">g: 全局替换；默认情况下，每一行只替换第一次出现</span><br><span class="line">gc:全局替换，每次替换前询问</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>查找替换中的分隔符/可替换为其它字符，例如:<br>s@/etc@/var@g<br>s#/boot#/#i  </p></blockquote>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>正则表达式</title>
      <link href="/2018/10/01/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>/2018/10/01/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      <content type="html"><![CDATA[<h1 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h1><p>由一类特殊字符及文本字符所编写的模式，其中有些字符（元字符）不表示字符字面意义，而表示控制或通配的功能</p><ul><li>程序支持：grep,sed,awk,vim, less,nginx,varnish等</li><li>分两类：<ul><li>基本正则表达式：BRE</li><li>扩展正则表达式：ERE<br>  grep -E, egrep  <a id="more"></a></li></ul></li><li>正则表达式引擎：<br>  采用不同算法，检查处理正则表达式的软件模块<br>  PCRE（Perl Compatible Regular Expressions）</li><li>元字符分类：字符匹配、匹配次数、位置锚定、分组</li><li>查看帮助：man 7 regex</li></ul><h2 id="基本正则表达式"><a href="#基本正则表达式" class="headerlink" title="基本正则表达式"></a>基本正则表达式</h2><h3 id="字符匹配"><a href="#字符匹配" class="headerlink" title="字符匹配"></a>字符匹配</h3><pre><code>. 匹配任意单个字符[] 匹配指定范围内的任意单个字符[^] 匹配指定范围外的任意单个字符[:alnum:] 字母和数字[:alpha:] 代表任何英文大小写字符，亦即 A-Z, a-z[:lower:] 小写字母 [:upper:] 大写字母[:blank:] 空白字符（空格和制表符）[:space:] 水平和垂直的空白字符（比[:blank:]包含的范围广）[:cntrl:] 不可打印的控制字符（退格、删除、警铃...）[:digit:] 十进制数字 [:xdigit:]十六进制数字[:graph:] 可打印的非空白字符[:print:] 可打印字符[:punct:] 标点符号</code></pre><h3 id="匹配次数："><a href="#匹配次数：" class="headerlink" title="匹配次数："></a>匹配次数：</h3><p>用在要指定次数的字符后面，用于指定前面的字符要出现的次数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> * 匹配前面的字符任意次，包括0次（贪婪模式：尽可能长的匹配）</span><br><span class="line"> .* 任意长度的任意字符</span><br><span class="line">\? 匹配其前面的字符0或1次</span><br><span class="line">\+ 匹配其前面的字符至少1次</span><br><span class="line">\&#123;n\&#125; 匹配前面的字符n次</span><br><span class="line">\&#123;m,n\&#125; 匹配前面的字符至少m次，至多n次</span><br><span class="line">\&#123;,n\&#125; 匹配前面的字符至多n次</span><br><span class="line">\&#123;n,\&#125; 匹配前面的字符至少n次</span><br></pre></td></tr></table></figure></p><h3 id="位置锚定："><a href="#位置锚定：" class="headerlink" title="位置锚定："></a>位置锚定：</h3><p>用于定位出现的位置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">^ 行首锚定，用于模式的最左侧</span><br><span class="line">$ 行尾锚定，用于模式的最右侧</span><br><span class="line">^PATTERN$ 用于模式匹配整行</span><br><span class="line">^$ 空行</span><br><span class="line">^[[:space:]]*$ 空白行</span><br><span class="line">\&lt; 或 \b 词首锚定，用于单词模式的左侧</span><br><span class="line">\&gt; 或 \b 词尾锚定；用于单词模式的右侧</span><br><span class="line">\&lt;PATTERN\&gt; 匹配整个单词</span><br></pre></td></tr></table></figure></p><h3 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h3><ul><li>分组：() 将一个或多个字符捆绑在一起，当作一个整体进行处理，如：(root)+</li><li>分组括号中的模式匹配到的内容会被正则表达式引擎记录于内部的变量中，这些变量的命名方式为: \1, \2, \3, …<ul><li>\1 表示从左侧起第一个左括号以及与之匹配右括号之间的模式所匹配到的字符  ，<br>示例： (string1+(string2)*)</li><li>\1 ：string1+(string2)*</li><li>\2 ：string2</li></ul></li><li>后向引用：引用前面的分组括号中的模式所匹配字符，而非模式本身</li><li>或者：|<br>示例：a|b: a或b C|cat: C或cat (C|c)at:Cat或cat</li></ul><h3 id="示例："><a href="#示例：" class="headerlink" title="示例："></a>示例：</h3><p>1、显示/proc/meminfo文件中以大小s开头的行(要求：使用两种方法)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grep -i &apos;^s&apos; /proc/meminfo</span><br><span class="line">grep -i &apos;^[Ss]&apos; /proc/meminfo</span><br><span class="line">grep -E &apos;^(S|s)&apos; /proc/meminfo</span><br></pre></td></tr></table></figure></p><p>2、显示/etc/passwd文件中不以/bin/bash结尾的行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -v &quot;/bin/bash$&quot; /etc/passwd</span><br></pre></td></tr></table></figure></p><p>3、显示用户rpc默认的shell程序<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep &quot;^rpc\&gt;&quot; /etc/passwd|cut -d: -f7</span><br></pre></td></tr></table></figure></p><p>4、找出/etc/passwd中的两位或三位数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep &quot;\b[0-9]\&#123;2,3\&#125;\b&quot; /etc/passwd</span><br></pre></td></tr></table></figure></p><p>5、显示CentOS7的/etc/grub2.cfg文件中，至少以一个空白字符开头的且后面有非空白字符的行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep &quot;^[[:space:]]\+[^[:space:]]&quot; /etc/grub2.cfg</span><br></pre></td></tr></table></figure></p><p>6、找出“netstat -tan”命令结果中以LISTEN后跟任意多个空白字符结尾的行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -tan|grep &quot;\bLISTEN\b[[:space:]]\+$&quot;</span><br></pre></td></tr></table></figure></p><p>7、显示CentOS7上所有系统用户的用户名和UID<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep &quot;/sbin/nologin$&quot; /etc/passwd|cut -d: -f1,3</span><br></pre></td></tr></table></figure></p><p>8、添加用户bash、testbash、basher、sh、nologin(其shell为/sbin/nologin),找出/etc/passwd用户名和shell同名的行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~ ]#grep &quot;^\([[:alnum:]]\+\):.*\1$&quot; /etc/passwd</span><br><span class="line">sync:x:5:0:sync:/sbin:/bin/sync</span><br><span class="line">shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</span><br><span class="line">halt:x:7:0:halt:/sbin:/sbin/halt</span><br><span class="line">nologin:x:1006:1006::/home/nologin:/sbin/nologin</span><br></pre></td></tr></table></figure></p><p>9、利用df和grep，取出磁盘各分区利用率，并从大到小排序<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">方法1：</span><br><span class="line">df|grep &quot;^/dev/sd&quot;|tr -s &quot; &quot; %|cut -d% -f5|sort -nr</span><br><span class="line"></span><br><span class="line">方法2：</span><br><span class="line">df | grep &quot;/dev/sd&quot; | grep -Eo &quot;[0-9]&#123;1,3&#125;%&quot;|grep -Eo &quot;[0-9]&#123;1,3&#125;&quot;</span><br></pre></td></tr></table></figure></p><h2 id="扩展正则表达式"><a href="#扩展正则表达式" class="headerlink" title="扩展正则表达式"></a>扩展正则表达式</h2><p>egrep = grep -E  </p><ul><li>语法：<br>egrep [OPTIONS] PATTERN [FILE…]<h3 id="字符匹配："><a href="#字符匹配：" class="headerlink" title="字符匹配："></a>字符匹配：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">. 任意单个字符  </span><br><span class="line">[] 指定范围的字符  </span><br><span class="line">[^] 不在指定范围的字符   </span><br><span class="line">[:alnum:] 字母和数字</span><br><span class="line">[:alpha:] 代表任何英文大小写字符，亦即 A-Z, a-z</span><br><span class="line">[:lower:] 小写字母 [:upper:] 大写字母</span><br><span class="line">[:blank:] 空白字符（空格和制表符）</span><br><span class="line">[:space:] 水平和垂直的空白字符（比[:blank:]包含的范围广）</span><br><span class="line">[:cntrl:] 不可打印的控制字符（退格、删除、警铃...）</span><br><span class="line">[:digit:] 十进制数字 [:xdigit:]十六进制数字</span><br><span class="line">[:graph:] 可打印的非空白字符</span><br><span class="line">[:print:] 可打印字符</span><br><span class="line">[:punct:] 标点符号</span><br></pre></td></tr></table></figure></li></ul><h3 id="次数匹配"><a href="#次数匹配" class="headerlink" title="次数匹配"></a>次数匹配</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*：匹配前面字符任意次  </span><br><span class="line">?: 0或1次  </span><br><span class="line">+：1次或多次  </span><br><span class="line">&#123;m&#125;：匹配m次  </span><br><span class="line">&#123;m,n&#125;：至少m，至多n次</span><br></pre></td></tr></table></figure><h3 id="位置锚定"><a href="#位置锚定" class="headerlink" title="位置锚定"></a>位置锚定</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">^ :行首</span><br><span class="line">$ :行尾</span><br><span class="line">\&lt;, \b :语首</span><br><span class="line">\&gt;, \b :语尾</span><br></pre></td></tr></table></figure><h3 id="分组-1"><a href="#分组-1" class="headerlink" title="分组"></a>分组</h3><pre><code>()后向引用：\1, \2, ...</code></pre><h3 id="或者"><a href="#或者" class="headerlink" title="或者"></a>或者</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a|b: a或b</span><br><span class="line">C|cat: C或cat</span><br><span class="line">(C|c)at:Cat或cat</span><br></pre></td></tr></table></figure><h3 id="示例：-1"><a href="#示例：-1" class="headerlink" title="示例："></a>示例：</h3><p>1、显示三个用户root、mage、wang的UID和默认shell<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -E &quot;(root|mage|wang)&quot; /etc/passwd</span><br></pre></td></tr></table></figure></p><p>2、找出/etc/rc.d/init.d/functions文件中行首为某单词(包括下划线)后面跟一个小括号的行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep &quot;^.*\b[[:space:]]*()&quot; /etc/init.d/functions</span><br></pre></td></tr></table></figure></p><p>3、使用egrep取出/etc/rc.d/init.d/functions中其基名<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo /etc/rc.d/init.d/functions|egrep -o &apos;[^/]+/?$&apos;</span><br></pre></td></tr></table></figure></p><p>4、使用egrep取出上面路径的目录名<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo /etc/rc.d/init.d/functions|egrep -o &apos;^.*/&apos;</span><br></pre></td></tr></table></figure></p><p>5、统计last命令中以root登录的每个主机IP地址登录次数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">last|egrep &quot;^root\b&quot;|tr -s &quot; &quot;|cut -d &quot; &quot; -f1|uniq -c</span><br></pre></td></tr></table></figure></p><p>6、利用扩展正则表达式分别表示0-9、10-99、100-199、200-249、250-255<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">grep &quot;\b[0-9]&quot;</span><br><span class="line">grep &quot;\b[1-9][0-9]&quot;</span><br><span class="line">grep &quot;\b1[0-9][0-9]&quot;</span><br><span class="line">grep &quot;\b2[0-4][0-9]&quot;</span><br><span class="line">grep &quot;\b25[0-5]&quot;</span><br></pre></td></tr></table></figure></p><p>7、显示ifconfig命令结果中所有IPv4地址<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">方法1：</span><br><span class="line">ifconfig|grep -o &quot;[0-9]\&#123;1,3\&#125;\.[0-9]\&#123;1,3\&#125;\.[0-9]\&#123;1,3\&#125;\.[0-9]\&#123;1,3\&#125;&quot;</span><br><span class="line"></span><br><span class="line">方法2：</span><br><span class="line">ifconfig|grep -o &quot;\([0-9]\&#123;1,3\&#125;\.\)\&#123;3\&#125;[0-9]\&#123;1,3\&#125;&quot;</span><br><span class="line"></span><br><span class="line">方法3：</span><br><span class="line">ifconfig |grep -Eo  &apos;([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1,3&#125;&apos;</span><br></pre></td></tr></table></figure></p><p>8、将此字符串：welcome to magedu linux 中的每个字符去重并排序，重复次数多的排到前面<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;welcome to magedu linux&quot; |grep -o &quot;[[:alpha:]]&quot;|sort|uniq -c|sort -nr</span><br></pre></td></tr></table></figure></p><p>9.如何取出eth0网卡的ip地址？<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">除了上述三种方法之外，还有下面几种：</span><br><span class="line">方法1：</span><br><span class="line">ifconfig eth0|grep -w &quot;inet&quot;|grep -o &quot;[0-9.]\&#123;7,\&#125;&quot;|head -1</span><br><span class="line"></span><br><span class="line">方法2：</span><br><span class="line">ifconfig eth0|grep -o &quot;inet [0-9.]\+&quot;|cut -d &quot; &quot; -f2</span><br></pre></td></tr></table></figure></p><p>10.统计/etc/下每个子目录里的.conf结尾的文件的总个数？<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -R /etc/ |grep &quot;\.conf$&quot; |wc -l</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 正则表达式 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>通配符</title>
      <link href="/2018/09/27/%E9%80%9A%E9%85%8D%E7%AC%A6/"/>
      <url>/2018/09/27/%E9%80%9A%E9%85%8D%E7%AC%A6/</url>
      <content type="html"><![CDATA[<h3 id="通配符和正则的区别"><a href="#通配符和正则的区别" class="headerlink" title="通配符和正则的区别"></a>通配符和正则的区别</h3><p>通配符主要匹配文件名，而正则主要匹配文件中的内容；</p><h3 id="常用的通配符介绍"><a href="#常用的通配符介绍" class="headerlink" title="常用的通配符介绍"></a>常用的通配符介绍</h3><p>主要有* 、？、[]这三种；<a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. *  匹配零个或多个字符</span><br><span class="line">如a*b，与之匹配的可以是aab，ab，a123b，abc.....</span><br></pre></td></tr></table></figure></p><ol start="2"><li><p>？ 匹配任意单个字符<br>如a?b，与之匹配的可以是aab，abb，a1b，a2b……</p></li><li><p>[] 匹配指定范围内的任意单个字符<br>如[wang] 即匹配w、a、n、g等任意一个字符；</p></li><li><p>[^] 匹配指定范围以外的任意单个字符<br>如[^wang] 排除列表中的所有字符,i与[]相反，即取反；</p></li><li><p>字符集的表示</p><blockquote><p>注意：对于下面的字符集，如果想要表示其中任意一个字符，需要在外面再加一个[]才可以；</p></blockquote></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[0-9]:     任意数字</span><br><span class="line">[a-z]:     注意，这里不仅仅是小写字母，而是a,A ,b,B,c,C...z这样的顺序，即：小写、大写</span><br><span class="line">[A-Z]:     注意，这里不仅仅表示大写字母，而是A,b,B,c,C...z,Z的 顺序</span><br><span class="line">[:digit:]：任意数字，相当于0-9</span><br><span class="line">[:lower:]：任意小写字母  </span><br><span class="line">[:upper:]: 任意大写字母</span><br><span class="line">[:alpha:]: 任意大小写字母</span><br><span class="line">[:alnum:]：任意数字或字母</span><br><span class="line">[:blank:]：水平空白字符</span><br><span class="line">[:space:]：水平或垂直空白字符，包含空格</span><br><span class="line">[:punct:]：标点符号</span><br><span class="line">更多内容，可以man 7 glob查看</span><br></pre></td></tr></table></figure><h3 id="练习："><a href="#练习：" class="headerlink" title="练习："></a>练习：</h3><h4 id="1-显示-var目录下所有以l开头，以一个小写字母结尾，且中间出现至少一位数字的文件或目录"><a href="#1-显示-var目录下所有以l开头，以一个小写字母结尾，且中间出现至少一位数字的文件或目录" class="headerlink" title="1. 显示/var目录下所有以l开头，以一个小写字母结尾，且中间出现至少一位数字的文件或目录"></a>1. 显示/var目录下所有以l开头，以一个小写字母结尾，且中间出现至少一位数字的文件或目录</h4><p>(1)环境准备：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS6 var ]#touch l2223343434a</span><br><span class="line">[root@CentOS6 var ]#touch l22233sddfd34a</span><br><span class="line">[root@CentOS6 var ]#touch l22dfdf34a</span><br></pre></td></tr></table></figure></p><p>(2)解答：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS6 var ]#ls   /var/l*[[:digit:]]*[[:lower:]]</span><br><span class="line">/var/l2223343434a  /var/l22233sddfd34a  /var/l22dfdf34a</span><br><span class="line">或</span><br><span class="line">[root@CentOS6 var ]#ls -d /var/l*[0-9]*[[:lower:]]</span><br><span class="line">/var/l2223343434a  /var/l22233sddfd34a  /var/l22dfdf34a</span><br></pre></td></tr></table></figure></p><h4 id="2-显示-etc目录下以任意一位数字开头，且以非数字结尾的文件或目录"><a href="#2-显示-etc目录下以任意一位数字开头，且以非数字结尾的文件或目录" class="headerlink" title="2. 显示/etc目录下以任意一位数字开头，且以非数字结尾的文件或目录"></a>2. 显示/etc目录下以任意一位数字开头，且以非数字结尾的文件或目录</h4><p>(1)准备环境：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS6 var ]#touch /etc/133rdfdf</span><br><span class="line">[root@CentOS6 var ]#touch /etc/123xin</span><br><span class="line">[root@CentOS6 var ]#touch /etc/123yuanhonli</span><br><span class="line">[root@CentOS6 var ]#touch /etc/abc_xn</span><br><span class="line">[root@CentOS6 var ]#touch /etc/1axc_xn</span><br></pre></td></tr></table></figure></p><p>(2)解答：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS6 var ]#ls /etc/[0-9]*[^0-9]</span><br><span class="line">/etc/123xin  /etc/123yuanhonli  /etc/133rdfdf  /etc/1axc_xn</span><br><span class="line">或</span><br><span class="line">[root@CentOS6 var ]#ls /etc/[0-9]*[^[:digit:]]</span><br><span class="line">/etc/123xin  /etc/123yuanhonli  /etc/133rdfdf  /etc/1axc_xn</span><br></pre></td></tr></table></figure></p><h4 id="3-显示-etc-目录下以非字母开头，后面跟了一个字母及其它任意长度任意字符的文件或目录"><a href="#3-显示-etc-目录下以非字母开头，后面跟了一个字母及其它任意长度任意字符的文件或目录" class="headerlink" title="3. 显示/etc/目录下以非字母开头，后面跟了一个字母及其它任意长度任意字符的文件或目录"></a>3. 显示/etc/目录下以非字母开头，后面跟了一个字母及其它任意长度任意字符的文件或目录</h4><p>(1准备环境：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS6 var ]#touch /etc/1axc_xn</span><br><span class="line">[root@CentOS6 var ]#touch /etc/_222b</span><br><span class="line">[root@CentOS6 var ]#touch /etc/*b22b</span><br><span class="line">[root@CentOS6 var ]#touch /etc/xinb22b</span><br></pre></td></tr></table></figure></p><p>(2)解答：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS6 var ]#ls /etc/[^[:alpha:]][[:alpha:]]*</span><br><span class="line">/etc/1axc_xn  /etc/*b22b</span><br></pre></td></tr></table></figure></p><h4 id="4-显示-etc-目录下所有以rc开头，并后面是0-6之间的数字，其它为任意字符的文件或目录"><a href="#4-显示-etc-目录下所有以rc开头，并后面是0-6之间的数字，其它为任意字符的文件或目录" class="headerlink" title="4. 显示/etc/目录下所有以rc开头，并后面是0-6之间的数字，其它为任意字符的文件或目录"></a>4. 显示/etc/目录下所有以rc开头，并后面是0-6之间的数字，其它为任意字符的文件或目录</h4><p>解答：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS6 var ]#ls -d  /etc/rc[0-6]*                      ##注意添加-d选项，否则显示所有目录下的文件</span><br><span class="line">/etc/rc0.d  /etc/rc1.d  /etc/rc2.d  /etc/rc3.d  /etc/rc4.d  /etc/rc5.d  /etc/rc6.d</span><br></pre></td></tr></table></figure></p><h4 id="5-显示-etc目录下，所有以-d结尾的文件或目录"><a href="#5-显示-etc目录下，所有以-d结尾的文件或目录" class="headerlink" title="5. 显示/etc目录下，所有以.d结尾的文件或目录"></a>5. 显示/etc目录下，所有以.d结尾的文件或目录</h4><p>解答：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS6 var ]#ls -d /etc/*.d</span><br><span class="line">/etc/bash_completion.d  /etc/logrotate.d     /etc/rc0.d          /etc/rsyslog.d</span><br><span class="line">/etc/chkconfig.d        /etc/lsb-release.d   /etc/rc1.d          /etc/rwtab.d</span><br><span class="line">/etc/cron.d             /etc/makedev.d       /etc/rc2.d          /etc/sane.d</span><br><span class="line">/etc/depmod.d           /etc/modprobe.d      /etc/rc3.d          /etc/setuptool.d</span><br><span class="line">/etc/dnsmasq.d          /etc/oddjobd.conf.d  /etc/rc4.d          /etc/statetab.d</span><br><span class="line">/etc/dracut.conf.d      /etc/pam.d           /etc/rc5.d          /etc/sudoers.d</span><br><span class="line">/etc/init.d             /etc/popt.d          /etc/rc6.d          /etc/sysctl.d</span><br><span class="line">/etc/latrace.d          /etc/prelink.conf.d  /etc/rc.d           /etc/xinetd.d</span><br><span class="line">/etc/ld.so.conf.d       /etc/profile.d       /etc/request-key.d  /etc/yum.repos.d</span><br><span class="line">[root@CentOS6 var ]#</span><br></pre></td></tr></table></figure></p><h4 id="6-显示-etc目录下，所有-conf结尾，且以m-n-r-p开头的文件或目录"><a href="#6-显示-etc目录下，所有-conf结尾，且以m-n-r-p开头的文件或目录" class="headerlink" title="6. 显示/etc目录下，所有.conf结尾，且以m,n,r,p开头的文件或目录"></a>6. 显示/etc目录下，所有.conf结尾，且以m,n,r,p开头的文件或目录</h4><p>解答：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS6 var ]#ls -d /etc/[mnrp]*.conf</span><br><span class="line">/etc/mke2fs.conf    /etc/ntp.conf                      /etc/prelink.conf      /etc/rsyslog.conf</span><br><span class="line">/etc/mtools.conf    /etc/pbm2ppa.conf                  /etc/readahead.conf</span><br><span class="line">/etc/nfsmount.conf  /etc/pm-utils-hd-apm-restore.conf  /etc/request-key.conf</span><br><span class="line">/etc/nsswitch.conf  /etc/pnm2ppa.conf                  /etc/resolv.conf</span><br></pre></td></tr></table></figure></p><h4 id="7-只显示-root下的隐藏文件和目录"><a href="#7-只显示-root下的隐藏文件和目录" class="headerlink" title="7. 只显示/root下的隐藏文件和目录"></a>7. 只显示/root下的隐藏文件和目录</h4><p>解答：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS6 var ]#ls -d /root/.*</span><br><span class="line">/root/.              /root/.cache     /root/.gnote           /root/.local         /root/.thumbnails</span><br><span class="line">/root/..             /root/.config    /root/.gnupg           /root/.nautilus      /root/.viminfo</span><br><span class="line">/root/.abrt          /root/.cshrc     /root/.gtk-bookmarks   /root/.pulse         /root/.Xauthority</span><br><span class="line">/root/.bash_history  /root/.dbus      /root/.gvfs            /root/.pulse-cookie</span><br><span class="line">/root/.bash_logout   /root/.esd_auth  /root/.ICEauthority    /root/.ssh</span><br><span class="line">/root/.bash_profile  /root/.gconf     /root/.icons           /root/.tcshrc</span><br><span class="line">/root/.bashrc        /root/.gnome2    /root/.imsettings.log  /root/.themes</span><br><span class="line">[root@CentOS6 var ]#</span><br></pre></td></tr></table></figure></p><h4 id="8-只显示-etc下的非隐藏目录"><a href="#8-只显示-etc下的非隐藏目录" class="headerlink" title="8. 只显示/etc下的非隐藏目录"></a>8. 只显示/etc下的非隐藏目录</h4><p>解答：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS6 var ]#ls -d /etc/[^.]*</span><br><span class="line">/etc/123xin                   /etc/host.conf                     /etc/prelink.cache</span><br><span class="line">/etc/123yuanhonli             /etc/hosts                         /etc/prelink.conf</span><br><span class="line">/etc/133rdfdf                 /etc/hosts.allow                   /etc/prelink.conf.d</span><br><span class="line">/etc/1axc_xn                  /etc/hosts.deny                    /etc/printcap</span><br><span class="line">/etc/_222b                    /etc/hp                            /etc/profile</span><br><span class="line">/etc/abc_xn                   /etc/httpd                         /etc/profile.d</span><br><span class="line">/etc/abrt                     /etc/idmapd.conf                   /etc/protocols</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 通配符 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>grep介绍</title>
      <link href="/2018/09/27/grep%E4%BB%8B%E7%BB%8D/"/>
      <url>/2018/09/27/grep%E4%BB%8B%E7%BB%8D/</url>
      <content type="html"><![CDATA[<blockquote><p>这篇文章 ，主要介绍linux三剑客中的老三grep的基本使用</p></blockquote><h2 id="linux文本处理三剑客"><a href="#linux文本处理三剑客" class="headerlink" title="linux文本处理三剑客"></a>linux文本处理三剑客</h2><ul><li>grep：文本过滤(模式：pattern)工具<br>  grep, egrep, fgrep（不支持正则表达式搜索）</li><li>sed：stream editor，文本编辑工具</li><li>awk：Linux上的实现gawk，文本报告生成器</li></ul><h2 id="grep介绍"><a href="#grep介绍" class="headerlink" title="grep介绍"></a>grep介绍</h2><p>grep (Global search REgular expression and Print out the line)),是一个文本过滤工具；<br><a id="more"></a></p><h3 id="1-作用"><a href="#1-作用" class="headerlink" title="1. 作用"></a>1. 作用</h3><p>根据特定的模式，对文件逐行进行匹配检查，打印匹配到的行<br>模式：即过滤的条件，可以由变量、命令、双引号字符等组成；</p><h3 id="2-选项"><a href="#2-选项" class="headerlink" title="2. 选项"></a>2. 选项</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">--color=auto：对匹配到的文本着色显示，Centos7默认已经定义为别名</span><br><span class="line">-v:           显示不被模式所匹配到的行，即反选</span><br><span class="line">-i:           忽略大小写</span><br><span class="line">-n:           显示匹配的行号</span><br><span class="line">-c:           统计匹配的行数</span><br><span class="line">-o:           仅显示匹配到的字符串，而不是整行，默认显示整行</span><br><span class="line">-q:           静默模式，不输出任何信息</span><br><span class="line">-e:           实现多个选项之间的逻辑or关系</span><br><span class="line">-w:           匹配整个单词</span><br><span class="line">-A #(数字):   同after，即把匹配到的行以及后#行显示出来</span><br><span class="line">-B #:         同before，即把匹配到的行以及前#行显示出来</span><br><span class="line">-C #:         把匹配到的行以及前后各#行都显示出来</span><br><span class="line">-E：          相当于egrep，扩展正则表达式，默认grep仅支持标准正则表达式</span><br><span class="line">-F:           相当于fgrep，不支持正则表达式</span><br><span class="line">-f:           可以匹配两个文件中的公共行</span><br></pre></td></tr></table></figure><h3 id="3-示例如下："><a href="#3-示例如下：" class="headerlink" title="3. 示例如下："></a>3. 示例如下：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">## /etc/passwd中包含root的行</span><br><span class="line">[root@centos7 test ]#grep &quot;root&quot; /etc/passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line">注意：这里是过滤包含root字符串的行，而不是以root开头的行；还有就是grep默认是以整行显示。</span><br><span class="line"></span><br><span class="line">## 使用引号，尤其是带空格的字符</span><br><span class="line">[root@centos7 test ]#grep &quot;root:/bin&quot; /etc/passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line"></span><br><span class="line">## 支持变量和命令</span><br><span class="line">[root@centos7 test ]#grep $USER /etc/passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line">[root@centos7 test ]#grep `whoami` /etc/passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">operator:x:11:0:operator:/root:/sbin/nologin</span><br></pre></td></tr></table></figure><ul><li><p>-v </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">环境准备</span><br><span class="line">[root@CentOS6 data ]#cat test </span><br><span class="line">aaa</span><br><span class="line">bbb</span><br><span class="line">ccc</span><br><span class="line">ddd</span><br><span class="line">xin</span><br><span class="line">xin</span><br><span class="line">yuanhohl</span><br><span class="line"></span><br><span class="line">[root@CentOS6 data ]#grep &apos;a&apos; test </span><br><span class="line">aaa</span><br><span class="line">yuanhohl</span><br><span class="line"></span><br><span class="line">[root@CentOS6 data ]#grep -v &apos;a&apos; test </span><br><span class="line">bbb</span><br><span class="line">ccc</span><br><span class="line">ddd</span><br><span class="line">xin</span><br><span class="line">xin</span><br></pre></td></tr></table></figure></li><li><p>-n</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS6 var ]#grep  -n &quot;UUID&quot; /etc/fstab </span><br><span class="line">9:UUID=91054f47-59f0-4c0f-9136-d1a824233866 /                       ext4    defaults        1 1</span><br><span class="line">10:UUID=38fafd9a-a99a-48e2-8112-2016e04db828 /boot                   ext4    defaults        1 2</span><br><span class="line">11:UUID=ec1e0b78-b7c4-44b4-90f7-63bd23ed129e /data                   ext4    defaults        1 2</span><br><span class="line">12:UUID=a8fd9779-45d3-449b-aa16-12532df94d4b swap                    swap    defaults        0 0</span><br></pre></td></tr></table></figure></li><li><p>-c</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS6 var ]#grep  -c &quot;UUID&quot; /etc/fstab </span><br><span class="line">4</span><br></pre></td></tr></table></figure></li><li><p>-o</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS6 var ]#grep  -o &quot;UUID&quot; /etc/fstab </span><br><span class="line">UUID</span><br><span class="line">UUID</span><br><span class="line">UUID</span><br><span class="line">UUID</span><br></pre></td></tr></table></figure></li><li><p>-q</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS6 var ]#grep  -q &quot;UUID&quot; /etc/fstab </span><br><span class="line">[root@CentOS6 var ]#echo $?</span><br><span class="line">0</span><br></pre></td></tr></table></figure></li><li><p>-A 、-B、-C</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS6 var ]#grep  -A 2 &quot;UUID&quot; /etc/fstab </span><br><span class="line">UUID=91054f47-59f0-4c0f-9136-d1a824233866 /                       ext4    defaults        1 1</span><br><span class="line">UUID=38fafd9a-a99a-48e2-8112-2016e04db828 /boot                   ext4    defaults        1 2</span><br><span class="line">UUID=ec1e0b78-b7c4-44b4-90f7-63bd23ed129e /data                   ext4    defaults        1 2</span><br><span class="line">UUID=a8fd9779-45d3-449b-aa16-12532df94d4b swap                    swap    defaults        0 0</span><br><span class="line">tmpfs                   /dev/shm                tmpfs   defaults        0 0</span><br><span class="line">devpts                  /dev/pts                devpts  gid=5,mode=620  0 0</span><br><span class="line">[root@CentOS6 var ]#</span><br><span class="line"></span><br><span class="line">[root@CentOS6 var ]#grep  -B 2 &quot;UUID&quot; /etc/fstab </span><br><span class="line"> See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info</span><br><span class="line">#</span><br><span class="line">UUID=91054f47-59f0-4c0f-9136-d1a824233866 /                       ext4    defaults        1 1</span><br><span class="line">UUID=38fafd9a-a99a-48e2-8112-2016e04db828 /boot                   ext4    defaults        1 2</span><br><span class="line">UUID=ec1e0b78-b7c4-44b4-90f7-63bd23ed129e /data                   ext4    defaults        1 2</span><br><span class="line">UUID=a8fd9779-45d3-449b-aa16-12532df94d4b swap                    swap    defaults        0 0</span><br><span class="line"></span><br><span class="line">[root@CentOS6 var ]#grep  -C 2 &quot;UUID&quot; /etc/fstab </span><br><span class="line"> See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info</span><br><span class="line">#</span><br><span class="line">UUID=91054f47-59f0-4c0f-9136-d1a824233866 /                       ext4    defaults        1 1</span><br><span class="line">UUID=38fafd9a-a99a-48e2-8112-2016e04db828 /boot                   ext4    defaults        1 2</span><br><span class="line">UUID=ec1e0b78-b7c4-44b4-90f7-63bd23ed129e /data                   ext4    defaults        1 2</span><br><span class="line">UUID=a8fd9779-45d3-449b-aa16-12532df94d4b swap                    swap    defaults        0 0</span><br><span class="line">tmpfs                   /dev/shm                tmpfs   defaults        0 0</span><br><span class="line">devpts                  /dev/pts                devpts  gid=5,mode=620  0 0</span><br><span class="line">[root@CentOS6 var ]#</span><br></pre></td></tr></table></figure><ul><li>-e</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS6 var ]#grep -e root -e nologin /etc/passwd     ##注意每个条件之前都要加-e</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line">mail:x:8:12:mail:/var/spool/mail:/sbin/nologin</span><br><span class="line">uucp:x:10:14:uucp:/var/spool/uucp:/sbin/nologin</span><br><span class="line">operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line">games:x:12:100:games:/usr/games:/sbin/nologin</span><br><span class="line">gopher:x:13:30:gopher:/var/gopher:/sbin/nologin</span><br><span class="line">ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin</span><br><span class="line">nobody:x:99:99:Nobody:/:/sbin/nologin</span><br><span class="line">dbus:x:81:81:System message bus:/:/sbin/nologin</span><br><span class="line">usbmuxd:x:113:113:usbmuxd user:/:/sbin/nologin</span><br><span class="line">rpc:x:32:32:Rpcbind Daemon:/var/lib/rpcbind:/sbin/nologin</span><br><span class="line">rtkit:x:499:499:RealtimeKit:/proc:/sbin/nologin</span><br><span class="line">avahi-autoipd:x:170:170:Avahi IPv4LL Stack:/var/lib/avahi-autoipd:/sbin/nologin</span><br><span class="line">vcsa:x:69:69:virtual console memory owner:/dev:/sbin/nologin</span><br><span class="line">abrt:x:173:173::/etc/abrt:/sbin/nologin</span><br><span class="line">rpcuser:x:29:29:RPC Service User:/var/lib/nfs:/sbin/nologin</span><br></pre></td></tr></table></figure><ul><li>-w</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">环境准备：</span><br><span class="line">##默认会将包含root的字符串全部打印；</span><br><span class="line">[root@CentOS6 var ]#useradd rooter</span><br><span class="line"></span><br><span class="line">[root@CentOS6 var ]#grep &quot;root&quot; /etc/passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line">rooter:x:501:501::/home/rooter:/bin/bash                </span><br><span class="line">使用-w，仅打印root的行</span><br><span class="line"></span><br><span class="line">[root@CentOS6 var ]#grep -w &quot;root&quot; /etc/passwd          </span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">operator:x:11:0:operator:/root:/sbin/nologin</span><br></pre></td></tr></table></figure><p>好了，grep的基本用法就介绍到这里，后期会介绍grep搭配正则表达式，功能更加强大。</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux三剑客 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>文本处理工具</title>
      <link href="/2018/09/27/%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/"/>
      <url>/2018/09/27/%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/</url>
      <content type="html"><![CDATA[<blockquote><p>这篇文章主要介绍一些文本处理工具，包括less、cat、head、tail、cut<br>基础不牢，地动山摇<br><a id="more"></a></p></blockquote><h2 id="cat"><a href="#cat" class="headerlink" title="cat"></a>cat</h2><p> 作用：显示文本内容</p><ul><li><p>选项：</p><ul><li>-A：显示所有特殊字符，包括空格、windows中的^M</li><li>-E：显示行结束符$</li><li>-n: 对显示出的每一行进行编号</li><li>-b：非空行编号</li><li>-s：压缩连续的空行成一行</li></ul></li><li>-A</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">## 在windows下新建一个文件，编辑内容如下：</span><br><span class="line">aa</span><br><span class="line">bb</span><br><span class="line">cc</span><br><span class="line"></span><br><span class="line">## 使用rz命令上次到linux</span><br><span class="line">[root@centos7 data ]#cat -A test.txt </span><br><span class="line">aa^M$                                    ##显示^M的特殊字符，这表示windows中的回车;$表示行结束符，等同于-E.</span><br><span class="line">bb^M$</span><br><span class="line">cc[root@centos7 data ]#</span><br><span class="line">&gt; 扩展：在windows中的换行符由回车和换行即\r\n表示，\r表示回车，\n表示换行，而在linux中的换行符仅用\n表示，于是多出来的\r被解释成了^M，在linux 编辑文件时发现^M，可以确定在windows中编辑过，特别是在允许脚本的时候，方便排错</span><br></pre></td></tr></table></figure><ul><li>cat编辑文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[root@centos7 data ]#cat  f1</span><br><span class="line">a</span><br><span class="line">b</span><br><span class="line">c                             ##   Ctrl+d结束并退出</span><br><span class="line">[root@centos7 data ]#cat f1</span><br><span class="line">a</span><br><span class="line">b</span><br><span class="line">c</span><br><span class="line"></span><br><span class="line">[root@centos7 data ]#cat &gt; f2 &lt;&lt;EOF</span><br><span class="line">&gt; XIN</span><br><span class="line">&gt; YUANHONLI</span><br><span class="line">&gt; HAH</span><br><span class="line">&gt; EOF                                  ## 末尾和上面的EOF要对应，也可以使用其他的单词表示</span><br><span class="line">[root@centos7 data ]#cat f2</span><br><span class="line">XIN</span><br><span class="line">YUANHONLI</span><br><span class="line">HAH</span><br></pre></td></tr></table></figure><h2 id="tac"><a href="#tac" class="headerlink" title="tac"></a>tac</h2><p>即，cat命令反过来，<br>作用：垂直方向，倒过来显示<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[root@centos7 data ]#cat test</span><br><span class="line">aa </span><br><span class="line">bb</span><br><span class="line">cc </span><br><span class="line">dd </span><br><span class="line">[root@centos7 data ]#tac test</span><br><span class="line">dd </span><br><span class="line">cc </span><br><span class="line">bb</span><br><span class="line">aa</span><br></pre></td></tr></table></figure></p><h2 id="rev"><a href="#rev" class="headerlink" title="rev"></a>rev</h2><p>水平方向，倒过来显示<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 data ]#cat test </span><br><span class="line">aabbcc</span><br><span class="line">[root@centos7 data ]#rev test</span><br><span class="line">ccbbaa</span><br></pre></td></tr></table></figure></p><h2 id="head"><a href="#head" class="headerlink" title="head"></a>head</h2><p>作用：显示文本前#行内容</p><ul><li>语法：head [OPTION]… [FILE]…</li><li>选项：<ul><li>-c #：指定获取前#字节 </li><li>-n #: 指定获取前#行</li><li>-#  ：指定行数</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 data ]#head -c 3 test</span><br><span class="line">aab[root@centos7 data ]#</span><br><span class="line"></span><br><span class="line">[root@centos7 data ]#head -n 3 /etc/fstab </span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># /etc/fstab</span><br><span class="line"></span><br><span class="line">## 使用head -c取随机数（要求：大小写字母、数字，10位长度）</span><br><span class="line">[root@centos7 data ]#cat /dev/urandom                                   ## urandom是一个设备，存储随机数</span><br><span class="line">[root@centos7 data ]#tr -dc &quot;[[:alnum:]]&quot; &lt; /dev/urandom |head -c 10    ##使用tr删除除字母、数字的所有字符，然后head取字符</span><br><span class="line">si8eE8JYSI[root@centos7 data ]#</span><br></pre></td></tr></table></figure><h2 id="tail"><a href="#tail" class="headerlink" title="tail"></a>tail</h2><p>作用：显示文本后#行内容</p><ul><li>语法：tail [OPTION]… [FILE]…</li><li><p>选项：</p><ul><li>-c #：指定获取后#字节</li><li>-n #：指定获取后#行</li><li>-#  : 指定行数</li><li>-f  ：跟踪文件描述符，常用于日志监控</li><li>-F  ：跟踪文件名</li></ul><p>tailf类似tail -f </p><blockquote><p>-f 和 -F的区别：-F是跟踪文件名，一旦文件被删除，则停止跟踪。而-f即使文件被删除，也还跟踪。</p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[root@centos7 data ]#cat test </span><br><span class="line">aabbcc</span><br><span class="line">[root@centos7 data ]#tail -c 2 test</span><br><span class="line">c                                        ## 默认会将末尾的换行符也当成一个字节</span><br><span class="line"></span><br><span class="line">[root@centos7 data ]#cat f1</span><br><span class="line">a</span><br><span class="line">b</span><br><span class="line">c</span><br><span class="line"></span><br><span class="line">[root@centos7 data ]#tail -c 1 f1</span><br><span class="line">                                        </span><br><span class="line">[root@centos7 data ]#tail -c 2 f1</span><br><span class="line">c                                          ## 同上，末尾的换行符也是一个字节     </span><br><span class="line">[root@centos7 data ]#tail -c 3 f1</span><br><span class="line">                                         </span><br><span class="line">c</span><br></pre></td></tr></table></figure><h2 id="cut"><a href="#cut" class="headerlink" title="cut"></a>cut</h2><p>作用：根据分隔符，取特定的列</p><ul><li>语法：cut [OPTION]… [FILE]…</li><li>选项：<ul><li>-d delimiter:指定分隔符，默认是tab</li><li>-f fileds：<pre><code>#：第#列#,#[,#]:不连续的多个列，例如1,3,6#-#：连续的多列，例如1-6混合使用：1-3,7</code></pre></li><li>-c:按字符数取列</li><li>–output-delimiter=string:指定输出的分隔符，即自定义分隔符</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">在/etc/passwd文件中取出所有用户的UID？</span><br><span class="line">[root@centos7 data ]#cut -d: -f3 /etc/passwd</span><br><span class="line">0</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line"></span><br><span class="line">取出磁盘利用率</span><br><span class="line">[root@centos7 data ]#df |tr -s &apos; &apos; |cut -d &quot; &quot; -f5|cut -d% -f1      ##因为空格不只一个，所以使用tr -s压缩为一个空格，然后再取</span><br><span class="line">Use</span><br><span class="line">7</span><br><span class="line">0</span><br><span class="line">0</span><br><span class="line">2</span><br><span class="line">0</span><br><span class="line">1</span><br><span class="line">16</span><br><span class="line">1</span><br><span class="line">100</span><br><span class="line">或者直接使用tr压缩时替换分隔符为%，直接取</span><br><span class="line">[root@centos7 data ]#df |tr -s &apos; &apos; % |cut -d% -f5</span><br><span class="line">Use</span><br><span class="line">7</span><br><span class="line">0</span><br><span class="line">0</span><br><span class="line">2</span><br><span class="line">0</span><br><span class="line">1</span><br><span class="line">16</span><br><span class="line">1</span><br><span class="line">100</span><br><span class="line"></span><br><span class="line">自定义分隔符</span><br><span class="line">[root@centos7 data ]#cut -d: -f1,3 --output-delimiter=+  /etc/passwd</span><br><span class="line">root+0</span><br><span class="line">bin+1</span><br><span class="line">daemon+2</span><br><span class="line">adm+3</span><br><span class="line"></span><br><span class="line">[root@centos7 data ]#cut -d: -f1,3 --output-delimiter===  /etc/passwd</span><br><span class="line">root==0</span><br><span class="line">bin==1</span><br><span class="line">daemon==2</span><br><span class="line">adm==3</span><br><span class="line">lp==4</span><br><span class="line">sync==5</span><br><span class="line">shutdown==6</span><br><span class="line"></span><br><span class="line">按字符数取列</span><br><span class="line">[root@centos7 data ]#cut -c1-3 /etc/passwd</span><br><span class="line">roo</span><br><span class="line">bin</span><br><span class="line">dae</span><br><span class="line">adm</span><br><span class="line">lp:</span><br><span class="line">syn</span><br><span class="line">shu</span><br><span class="line">hal</span><br><span class="line">mai</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">取ip地址:  先取第二行，然后取列</span><br><span class="line">CentOS6</span><br><span class="line">[root@CentOS6 ~ ]#ifconfig eth0 |grep -w &quot;inet&quot;|tr -s &quot; &quot; :|cut -d: -f4   ##Centos6以：作为分隔符</span><br><span class="line">192.168.64.128</span><br><span class="line"></span><br><span class="line">CentOS7:</span><br><span class="line">[root@centos7 data ]#ifconfig ens33 |grep -w &quot;inet&quot; |tr -s &quot; &quot; |cut -d&quot; &quot; -f3</span><br><span class="line">192.168.64.134</span><br><span class="line"></span><br><span class="line">取Centos系统的主版本号：使用与CentOS和CentOS</span><br><span class="line">[root@centos7 data ]#cat /etc/centos-release</span><br><span class="line">CentOS Linux release 7.5.1804 (Core)</span><br><span class="line">[root@CentOS6 ~ ]#cat /etc/centos-release </span><br><span class="line">CentOS release 6.10 (Final)</span><br><span class="line"></span><br><span class="line">[root@CentOS6 ~ ]#tr -dc &quot;[:digit:].&quot; &lt; /etc/centos-release |cut -d. -f1        ##除了数字和点不删，其他全部删除</span><br><span class="line">6</span><br><span class="line">[root@centos7 data ]#tr -dc &quot;[:digit:].&quot; &lt; /etc/centos-release |cut -d. -f1</span><br><span class="line">7</span><br></pre></td></tr></table></figure><h2 id="wc"><a href="#wc" class="headerlink" title="wc"></a>wc</h2><p>word count的简写，<br>作用：统计一个文件有多少行，多少单词、多少字节、多少字符（注意：字节和字符不一样）</p><ul><li>选项：<ul><li>-l 只计数行数</li><li>-w 只计数单词总数</li><li>-c 只计数字节总数</li><li>-m 只计数字符总数</li><li>-L 显示文件中最长行的长度<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">默认显示行数、单词、字节数</span><br><span class="line">[root@centos7 data ]#cat test </span><br><span class="line">aabbcc</span><br><span class="line">[root@centos7 data ]#wc test</span><br><span class="line">1 1 7 test                              ## 7个字节是因为末尾的换行符的存在</span><br><span class="line">由于结果带有文件名，不方便后期做运算，可以用下面的方式仅显示数字</span><br><span class="line">[root@centos7 data ]#cat test|wc </span><br><span class="line">      1       1       7</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@centos7 data ]#cat /etc/issue</span><br><span class="line">\S</span><br><span class="line">Kernel \r on an \m</span><br><span class="line"></span><br><span class="line">[root@centos7 data ]#wc -l /etc/issue</span><br><span class="line">3 /etc/issue</span><br><span class="line">[root@centos7 data ]#cat /etc/issue|wc -l</span><br><span class="line">3</span><br><span class="line">[root@centos7 data ]#cat /etc/issue|wc -w</span><br><span class="line">6</span><br><span class="line">[root@centos7 data ]#cat /etc/issue|wc -c</span><br><span class="line">23</span><br><span class="line">[root@centos7 data ]#cat /etc/issue|wc -m</span><br><span class="line">23</span><br><span class="line"></span><br><span class="line">统计当前登录用户数</span><br><span class="line">[root@centos7 data ]#who</span><br><span class="line">root     :0           2018-08-18 10:50 (:0)</span><br><span class="line">root     pts/0        2018-08-18 10:52 (:0)</span><br><span class="line">root     pts/1        2018-08-18 10:55 (192.168.64.1)</span><br><span class="line">root     pts/2        2018-08-18 13:26 (192.168.64.1)</span><br><span class="line">root     pts/3        2018-08-18 14:30 (192.168.64.1)</span><br><span class="line">[root@centos7 data ]#who |wc -l</span><br><span class="line">5</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="sort"><a href="#sort" class="headerlink" title="sort"></a>sort</h2><p>作用：指定分隔符，根据第几列对文件进行排序</p><ul><li>语法：sort [options] file(s)</li><li>选项：<ul><li>-t   ：指定分隔符，等同于cut的-d选项</li><li>-k # ：对第几列进行排序</li><li>-n   ：按数字大小进行排序，默认按照字母顺序排序</li><li>-r   ：倒序</li><li>-R   : 随机排序</li><li>-u   ：删除输出中的重复行</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">取出/etc/passwd文件中的第一列和第三列，并按照数字排序</span><br><span class="line">[root@centos7 data ]#cut -d: -f1,3 /etc/passwd |sort -t: -k2 -n</span><br><span class="line">root:0</span><br><span class="line">bin:1</span><br><span class="line">daemon:2</span><br><span class="line">adm:3</span><br><span class="line">lp:4</span><br><span class="line">sync:5</span><br><span class="line">shutdown:6</span><br><span class="line">halt:7</span><br><span class="line">mail:8</span><br><span class="line">operator:11</span><br><span class="line">games:12</span><br><span class="line">ftp:14</span><br><span class="line">rpcuser:29</span><br><span class="line">rpc:32</span><br><span class="line">ntp:38</span><br><span class="line"></span><br><span class="line">倒序</span><br><span class="line">[root@centos7 data ]#cut -d: -f1,3 /etc/passwd |sort -t: -k2 -nr</span><br><span class="line">nfsnobody:65534</span><br><span class="line">xin:1000</span><br><span class="line">polkitd:999</span><br><span class="line">libstoragemgmt:998</span><br><span class="line">colord:997</span><br><span class="line">saslauth:996</span><br><span class="line">setroubleshoot:995</span><br><span class="line">chrony:994</span><br><span class="line">unbound:993</span><br><span class="line">gluster:992</span><br><span class="line">geoclue:991</span><br><span class="line">gnome-initial-setup:990</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">去重</span><br><span class="line">[root@centos7 data ]#cat f1</span><br><span class="line">aa</span><br><span class="line">aa</span><br><span class="line">bb</span><br><span class="line">bb</span><br><span class="line">cc</span><br><span class="line">dd</span><br><span class="line">[root@centos7 data ]#sort -u f1</span><br><span class="line">aa</span><br><span class="line">bb</span><br><span class="line">cc</span><br><span class="line">dd</span><br><span class="line"></span><br><span class="line">随机抽取学号</span><br><span class="line">[root@centos7 data ]#seq 72 |sort -R|head -n1</span><br><span class="line">14</span><br><span class="line">[root@centos7 data ]#seq 72 |sort -R|head -n1</span><br><span class="line">40</span><br><span class="line">[root@centos7 data ]#seq 72 |sort -R|head -n1</span><br><span class="line">67</span><br></pre></td></tr></table></figure><h2 id="uniq"><a href="#uniq" class="headerlink" title="uniq"></a>uniq</h2><p>作用：删除相邻的重复的行</p><ul><li><p>语法:uniq [OPTION]… [FILE]…</p></li><li><p>选项：</p><ul><li>-c: 显示每行重复出现的次数</li><li>-d: 仅显示重复过的行</li><li>-u: 仅显示不曾重复的行<br>常和sort 命令一起配合使用：<br>sort userlist.txt | uniq -c</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 data ]#cat f1</span><br><span class="line">aa</span><br><span class="line">aa</span><br><span class="line">bb</span><br><span class="line">aa</span><br><span class="line">bb</span><br><span class="line">bb</span><br><span class="line">cc</span><br><span class="line">dd</span><br><span class="line">dd</span><br><span class="line">[root@centos7 data ]#uniq f1           ## 默认uniq仅删除相邻的重复的行</span><br><span class="line">aa</span><br><span class="line">bb</span><br><span class="line">aa</span><br><span class="line">bb</span><br><span class="line">cc</span><br><span class="line">dd</span><br><span class="line"></span><br><span class="line">[root@centos7 data ]#sort f1|uniq       ##可sort先排序，再uniq删除重复行</span><br><span class="line">aa</span><br><span class="line">bb</span><br><span class="line">cc</span><br><span class="line">dd</span><br><span class="line"></span><br><span class="line">[root@centos7 data ]#sort f1|uniq -c    ## 统计重复出现的次数</span><br><span class="line">      3 aa</span><br><span class="line">      3 bb</span><br><span class="line">      1 cc</span><br><span class="line">      2 dd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">统计一篇英语文档中每个单词出现多少次？并统计出现频率最高的前3个单词？</span><br><span class="line">[root@centos7 data ]#cat f1</span><br><span class="line">aa</span><br><span class="line">aa</span><br><span class="line">bb yy</span><br><span class="line">aa www</span><br><span class="line">bb</span><br><span class="line">bb  zzz</span><br><span class="line">cc  yy</span><br><span class="line">dd  ww</span><br><span class="line">dd</span><br><span class="line">[root@centos7 data ]#tr -s &quot; &quot; &quot;\n&quot; &lt; f1 |sort|uniq -c</span><br><span class="line">      3 aa</span><br><span class="line">      3 bb</span><br><span class="line">      1 cc</span><br><span class="line">      2 dd</span><br><span class="line">      1 ww</span><br><span class="line">      1 www</span><br><span class="line">      2 yy</span><br><span class="line">      1 zzz</span><br><span class="line">[root@centos7 data ]#tr -s &quot; &quot; &quot;\n&quot; &lt; f1 |sort|uniq -c|sort -nr|head -n3</span><br><span class="line">      3 bb</span><br><span class="line">      3 aa</span><br><span class="line">      2 yy</span><br><span class="line">[root@centos7 data ]#</span><br><span class="line"></span><br><span class="line">如何取出两个文件的交集，即相同的行(保证一个文件中没有重复的行)</span><br><span class="line">[root@centos7 data ]#cat f1 </span><br><span class="line">aa</span><br><span class="line">bb yy</span><br><span class="line">aa www</span><br><span class="line">bb</span><br><span class="line">bb  zzz</span><br><span class="line">cc  yy</span><br><span class="line">dd  ww</span><br><span class="line">dd</span><br><span class="line">[root@centos7 data ]#cat f2</span><br><span class="line">aa</span><br><span class="line">bb yy</span><br><span class="line">bb</span><br><span class="line">cc  yy</span><br><span class="line">zz</span><br><span class="line">sss</span><br><span class="line">[root@centos7 data ]#cat f1 f2|sort |uniq -d</span><br><span class="line">aa</span><br><span class="line">bb</span><br><span class="line">bb yy</span><br><span class="line">cc  yy</span><br><span class="line">或</span><br><span class="line">[root@centos7 data ]#grep -f f1 f2</span><br><span class="line">aa</span><br><span class="line">bb yy</span><br><span class="line">bb</span><br><span class="line">cc  yy</span><br><span class="line"></span><br><span class="line">对httpd的access访问日志，判断有多少ip在访问，访问次数分别是多少？取出前10个访问量最多的ip地址？</span><br><span class="line">[root@centos7 data ]#cat access_log </span><br><span class="line">192.168.32.7 - - [30/Jul/2018:10:15:34 +0800] &quot;GET / HTTP/1.0&quot; 403 4961 &quot;-&quot; &quot;ApacheBench/2.3&quot;</span><br><span class="line">192.168.32.7 - - [30/Jul/2018:10:15:34 +0800] &quot;GET / HTTP/1.0&quot; 403 4961 &quot;-&quot; &quot;ApacheBench/2.3&quot;</span><br><span class="line">192.168.32.7 - - [30/Jul/2018:10:15:34 +0800] &quot;GET / HTTP/1.0&quot; 403 4961 &quot;-&quot; &quot;ApacheBench/2.3&quot;</span><br><span class="line">192.168.32.7 - - [30/Jul/2018:10:15:34 +0800] &quot;GET / HTTP/1.0&quot; 403 4961 &quot;-&quot; &quot;ApacheBench/2.3&quot;</span><br><span class="line">192.168.32.7 - - [30/Jul/2018:10:15:34 +0800] &quot;GET / HTTP/1.0&quot; 403 4961 &quot;-&quot; &quot;ApacheBench/2.3&quot;</span><br><span class="line">[root@centos7 data ]#cut -d&quot; &quot; -f1 access_log |sort |uniq -c</span><br><span class="line">   2000 192.168.32.17</span><br><span class="line">      5 192.168.32.5</span><br><span class="line">   1100 192.168.32.7</span><br><span class="line">[root@centos7 data ]#cut -d&quot; &quot; -f1 access_log |sort |uniq -c|sort -nr|head </span><br><span class="line">   2000 192.168.32.17</span><br><span class="line">   1100 192.168.32.7</span><br><span class="line">      5 192.168.32.5</span><br></pre></td></tr></table></figure><h2 id="diff"><a href="#diff" class="headerlink" title="diff"></a>diff</h2><p>作用：比较两个文件有什么不同</p><ul><li>选项:<br>  -u<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 data ]#cat f1 </span><br><span class="line">aa</span><br><span class="line">bb yy</span><br><span class="line">a www</span><br><span class="line">bb</span><br><span class="line">bb  zzz</span><br><span class="line">cc  yy</span><br><span class="line">dd  ww</span><br><span class="line">dd</span><br><span class="line">[root@centos7 data ]#cat f2</span><br><span class="line">aa</span><br><span class="line">bb yy</span><br><span class="line">bb</span><br><span class="line">cc  yy</span><br><span class="line">zz</span><br><span class="line">sss</span><br><span class="line">[root@centos7 data ]#diff -u f1 f2</span><br><span class="line">--- f12018-08-18 16:45:43.484986457 +0800   ## -开头表示第一个文件</span><br><span class="line">+++ f22018-08-18 16:31:53.353991142 +0800   ## +开头表示第二个文件</span><br><span class="line">@@ -1,8 +1,6 @@                               ## 比较的范围：f1的1-8行；f2的1-6行</span><br><span class="line"> aa                                           ## 前面为空表示两个文件的交集</span><br><span class="line"> bb yy</span><br><span class="line">-a www                                        ## 即f1多出a www,删除后两个文件相同</span><br><span class="line"> bb</span><br><span class="line">-bb  zzz</span><br><span class="line"> cc  yy</span><br><span class="line">-dd  ww</span><br><span class="line">-dd</span><br><span class="line">+zz                                           ## 即f2多出zz,删除后两个文件相同</span><br><span class="line">+sss</span><br><span class="line"></span><br><span class="line">建议：vimdiff f1 f2</span><br></pre></td></tr></table></figure></li></ul><h2 id="paste"><a href="#paste" class="headerlink" title="paste"></a>paste</h2><p>作用：横向合并文件<br>      -s：将文件的所有列以一行显示<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">## 环境准备：</span><br><span class="line">[root@centos7 test ]#cat f1</span><br><span class="line">aaa bbb</span><br><span class="line">cc dd</span><br><span class="line">ee ff</span><br><span class="line">[root@centos7 test ]#cat f2</span><br><span class="line">hello world</span><br><span class="line">hostname</span><br><span class="line">ifconfig</span><br><span class="line"></span><br><span class="line">## 合并文件</span><br><span class="line">[root@centos7 test ]#paste f1 f2</span><br><span class="line">aaa bbbhello world</span><br><span class="line">cc ddhostname</span><br><span class="line">ee ffifconfig</span><br><span class="line"></span><br><span class="line">## 将f1的内容全部以一行进行显示：</span><br><span class="line">[root@centos7 test ]#paste -s f1</span><br><span class="line">aaa bbb  cc ddee ff</span><br></pre></td></tr></table></figure></p><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><p> 找出ifconfig “网卡名”结果中本机的ipv4地址？<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CentOS6</span><br><span class="line">[root@CentOS6 ~ ]#ifconfig eth0 | grep -w &quot;inet&quot; |tr -s &quot; &quot; :|cut -d: -f4   ##Centos6以：作为分隔符</span><br><span class="line">192.168.64.128</span><br><span class="line"></span><br><span class="line">CentOS7:</span><br><span class="line">[root@centos7 data ]#ifconfig ens33 | grep -w &quot;inet&quot; |tr -s &quot; &quot; |cut -d&quot; &quot; -f3</span><br><span class="line">192.168.64.134</span><br></pre></td></tr></table></figure></p><p> 查出分区空间使用率的最大百分比值？<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 data ]#df|grep &quot;/dev/sd&quot; |tr -s &quot; &quot; %|cut -d% -f5|sort -nr|head -1</span><br><span class="line">16</span><br></pre></td></tr></table></figure></p><p> 查出用户UID最大值的用户名、UID及shel类型？<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 data ]#cut -d: -f1,3,7 /etc/passwd|sort -t: -k2 -nr|head -1</span><br><span class="line">nfsnobody:65534:/sbin/nologin</span><br><span class="line"></span><br><span class="line">或</span><br><span class="line">[root@centos7 data ]#sort -t: -k3 -nr /etc/passwd|head -1|cut -d: -f1,3,7</span><br><span class="line">nfsnobody:65534:/sbin/nologin</span><br></pre></td></tr></table></figure></p><p> 查出/tmp的权限，以数字方式显示<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 data ]#stat /tmp |grep &quot;Access: (&quot; |cut -d&quot;(&quot; -f2 |cut -d&quot;/&quot; -f1</span><br><span class="line">1777</span><br><span class="line">[root@centos7 data ]#stat /tmp |grep &quot;Access: (&quot; |cut -d&quot;(&quot; -f2 |head -c 4</span><br><span class="line">1777[root@centos7 data ]#</span><br></pre></td></tr></table></figure></p><p> 统计当前连接本机的每个远程主机ip的连接数？并按照从大到小排序？<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 data ]#netstat -nt |tr -s &quot; &quot; : |cut -d: -f6|sort|uniq -c|sort -nr</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文本处理工具 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>文件权限</title>
      <link href="/2018/09/26/%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90/"/>
      <url>/2018/09/26/%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90/</url>
      <content type="html"><![CDATA[<h2 id="文件属性"><a href="#文件属性" class="headerlink" title="文件属性"></a>文件属性</h2><p><img src="http://i2.bvimg.com/662847/5290b039d8086818.png" alt="Markdown"><br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; ls -l命令可以查看文件的详细信息</span><br><span class="line">[root@centos7 ~ ]#ll anaconda-ks.cfg </span><br><span class="line">-rw-------. 1 root root 1869 Jul 18 17:44 anaconda-ks.cfg</span><br></pre></td></tr></table></figure></p><p>如图，一个文件的基本属性信息包含8列：文件类型、权限、硬链接数、属主、属组、大小、创建时间、文件名，通过-i选项还可以查看具体的inode值，这里主要介绍权限和归属的修改<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~ ]#ll -i anaconda-ks.cfg </span><br><span class="line">100663363 -rw-------. 1 root root 1869 Jul 18 17:44 anaconda-ks.cfg</span><br></pre></td></tr></table></figure></p><h2 id="修改文件的属主和属组"><a href="#修改文件的属主和属组" class="headerlink" title="修改文件的属主和属组"></a>修改文件的属主和属组</h2><ul><li>chown 修改属主、属组</li><li>chgrp 修改属组</li></ul><h3 id="chown"><a href="#chown" class="headerlink" title="chown"></a>chown</h3><p>语法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown [OPTION]... [OWNER][:[GROUP]] FILE...</span><br></pre></td></tr></table></figure></p><p>选项：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-R:递归设置，用于目录下的所有文件</span><br><span class="line"> chown [OPTION]... --reference=RFILE FILE...：参考文件修改</span><br></pre></td></tr></table></figure></p><ul><li><p>仅修改属主</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">格式：chown  owner  file</span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line">[root@centos7 ~ ]#ll anaconda-ks.cfg </span><br><span class="line">-rw-------. 1 root root 1869 Jul 18 17:44 anaconda-ks.cfg</span><br><span class="line">[root@centos7 ~ ]#chown xin anaconda-ks.cfg </span><br><span class="line">[root@centos7 ~ ]#ll anaconda-ks.cfg </span><br><span class="line">-rw-------. 1 xin root 1869 Jul 18 17:44 anaconda-ks.cfg</span><br><span class="line">[root@centos7 ~ ]#</span><br></pre></td></tr></table></figure></li><li><p>同时修改属主和属组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">格式：chown  owner:group file</span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line">[root@centos7 ~ ]#ll anaconda-ks.cfg </span><br><span class="line">-rw-------. 1 xin root 1869 Jul 18 17:44 anaconda-ks.cfg</span><br><span class="line">[root@centos7 ~ ]#chown lhy:lhy anaconda-ks.cfg </span><br><span class="line">[root@centos7 ~ ]#ll anaconda-ks.cfg </span><br><span class="line">-rw-------. 1 lhy lhy 1869 Jul 18 17:44 anaconda-ks.cfg</span><br></pre></td></tr></table></figure></li><li><p>仅修改属组</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">格式：chown :group  file</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@centos7 ~ ]#ll anaconda-ks.cfg </span><br><span class="line">-rw-------. 1 lhy lhy 1869 Jul 18 17:44 anaconda-ks.cfg</span><br><span class="line">[root@centos7 ~ ]#chown :root anaconda-ks.cfg </span><br><span class="line">[root@centos7 ~ ]#ll anaconda-ks.cfg </span><br><span class="line">-rw-------. 1 lhy root 1869 Jul 18 17:44 anaconda-ks.cfg</span><br></pre></td></tr></table></figure><p>注意：冒号也可以用点.来代替。</p><h3 id="chgrp"><a href="#chgrp" class="headerlink" title="chgrp"></a>chgrp</h3><p>其实一个chown就可以解决了，但还是的介绍一些chgrp这个命令。<br>语法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chgrp [OPTION]... GROUP FILE...</span><br></pre></td></tr></table></figure></p><p>选项：同chown<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">--reference=RFILE ：参考文件设置</span><br><span class="line">-R ：递归设置目录下的所有文件的属组</span><br></pre></td></tr></table></figure></p><p>示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[root@centos7 ~ ]#ll anaconda-ks.cfg </span><br><span class="line">-rw-------. 1 lhy root 1869 Jul 18 17:44 anaconda-ks.cfg</span><br><span class="line">[root@centos7 ~ ]#chgrp lhy anaconda-ks.cfg </span><br><span class="line">[root@centos7 ~ ]#ll anaconda-ks.cfg </span><br><span class="line">-rw-------. 1 lhy lhy 1869 Jul 18 17:44 anaconda-ks.cfg</span><br></pre></td></tr></table></figure></p><h2 id="权限"><a href="#权限" class="headerlink" title="权限"></a>权限</h2><blockquote><p>rwxrwrwx</p></blockquote><ul><li><p>权限位共9位：<br>左三位：定义user（owner）的权限，属主权限<br>中三位：定义group的权限，属组权限<br>有三位：定义other的权限，其他的权限</p></li><li><p>r、w、x</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">r：readable，可读</span><br><span class="line">w：writable，可写</span><br><span class="line">x：executble，可执行</span><br></pre></td></tr></table></figure></li></ul><p>对于一个文件或目录来说，r、w、x分别具有不同的功能。</p><ul><li><p>对于文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">r: 可以查看文件内容</span><br><span class="line">w：可以修改文件内容</span><br><span class="line">x：为可执行文件，可启动为一个进程</span><br></pre></td></tr></table></figure></li><li><p>对于目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">r：可以使用ls查看文件列表</span><br><span class="line">w：可以在目录中创建文件，也可以删除文件；</span><br><span class="line">x：可以ls 查看文件列表，可以cd进入该目录下</span><br></pre></td></tr></table></figure></li></ul><h3 id="chmod"><a href="#chmod" class="headerlink" title="chmod"></a>chmod</h3><p>功能：设置文件或者目录的权限<br>语法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">chmod [OPTION]... OCTAL-MODE FILE..</span><br><span class="line">chmod [OPTION]... MODE[,MODE]... FILE...</span><br><span class="line"></span><br><span class="line">MODE：</span><br><span class="line"> 修改一类用户的所有权限：</span><br><span class="line"> u= g= o= ug= a= u=,g=</span><br><span class="line"> 修改一类用户某位或某些位权限</span><br><span class="line"> u+ u- g+ g- o+ o- a+ a- + -</span><br></pre></td></tr></table></figure></p><p>选项：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-R: 递归修改权限</span><br><span class="line">--reference=RFILE :参考文件修改</span><br></pre></td></tr></table></figure></p><p>示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&gt; 修改文件的权限为rwx--xr--</span><br><span class="line">[root@centos7 data ]#echo &quot;hello world&quot; &gt; f1</span><br><span class="line">[root@centos7 data ]#ll f1</span><br><span class="line">-rw-r--r-- 2 root root 12 Sep 24 19:52 f1</span><br><span class="line">[root@centos7 data ]#chmod u=rwx,g=x f1</span><br><span class="line">[root@centos7 data ]#ll f1</span><br><span class="line">-rwx--xr-- 2 root root 12 Sep 24 19:52 f1</span><br><span class="line"></span><br><span class="line">&gt; 也可以通过修改某位的权限实现</span><br><span class="line">[root@centos7 data ]#chmod u+x,g=x f1</span><br><span class="line">[root@centos7 data ]#ll f1</span><br><span class="line">-rwx--xr-- 2 root root 12 Sep 24 19:52 f1</span><br></pre></td></tr></table></figure></p><p>不过这种方法还是有点麻烦，其实还有更加简单的方法，就是<br>用数字表示权限，看图：<br><img src="http://i4.bvimg.com/662847/f908980f45b81134.png" alt="Markdown"></p><p>其实就是r用数字4表示，w用数字2表示，x用数字1表示；</p><p>示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; 修改file权限为rw-r--r--</span><br><span class="line">chmod  644  file</span><br><span class="line">&gt; 修改file权限为rwxrw-r--</span><br><span class="line">chmod  764  file</span><br><span class="line">&gt; 修改权限为rwx------</span><br><span class="line">chmod  400  file</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>用户和组管理</title>
      <link href="/2018/09/26/%E7%94%A8%E6%88%B7%E5%92%8C%E7%BB%84%E7%AE%A1%E7%90%86/"/>
      <url>/2018/09/26/%E7%94%A8%E6%88%B7%E5%92%8C%E7%BB%84%E7%AE%A1%E7%90%86/</url>
      <content type="html"><![CDATA[<h2 id="用户："><a href="#用户：" class="headerlink" title="用户："></a>用户：</h2><p>在Linux中，用户管理是基于用户和密码的方式进行资源的分配，而UID是用户的唯一标识；</p><table><thead><tr><th style="text-align:left">用户</th><th>UID</th></tr></thead><tbody><tr><td style="text-align:left">管理员：root</td><td>0</td></tr><tr><td style="text-align:left">登录用户</td><td>500+(CentOS6)  1000+(CentOS7)</td></tr><tr><td style="text-align:left">系统用户</td><td>1-499（CentOS6)  1-999)(_CentOS7)</td></tr></tbody></table><a id="more"></a><h2 id="组"><a href="#组" class="headerlink" title="组"></a>组</h2><p>同样，GID是组的标识；<br>| 组             | GID                               |<br>|  ————- | ——————————— |<br>| 管理员组：root | 0                                 |<br>| 非系统组       | 500+(CentOS6)  1000+(CentOS7)     |<br>| 系统组         | 1-499（CentOS6)  1-999)(CentOS7)  |</p><p>对组进行分类的话，可以分为主组(私有组)和附加组(公共组)，<br>所谓的主组就是创建用户的时候默认会创建一个与用户名同名的组，这个组内仅包含一个用户，即同名的用户；<br>一个用户可以位于多个组内，而用户除了主组之外所归属的组即用户的附加组。</p><h2 id="用户和组的配置文件"><a href="#用户和组的配置文件" class="headerlink" title="用户和组的配置文件"></a>用户和组的配置文件</h2><table><thead><tr><th>/etc/passwd</th><th>用户及其属性信息</th></tr></thead><tbody><tr><td>/etc/shadow</td><td>用户密码及其相关属性</td></tr><tr><td>/etc/group</td><td>组及其属性信息</td></tr><tr><td>/etc/gshadow</td><td>组密码及其相关属性</td></tr></tbody></table><h3 id="passwd文件格式"><a href="#passwd文件格式" class="headerlink" title="passwd文件格式"></a>passwd文件格式</h3><ul><li>login name：登录用名（wang）</li><li>passwd：密码 (x)</li><li>UID：用户身份编号 (1000)</li><li>GID：登录默认所在组编号 (1000)</li><li>GECOS：用户全名或注释</li><li>home directory：用户主目录 (/home/wang)</li><li>shell：用户默认使用shell (/bin/bash)</li></ul><h3 id="shadow文件格式"><a href="#shadow文件格式" class="headerlink" title="shadow文件格式"></a>shadow文件格式</h3><ul><li>登录用名</li><li>用户密码:一般用sha512加密</li><li>从1970年1月1日起到密码最近一次被更改的时间</li><li>密码再过几天可以被变更（0表示随时可被变更）</li><li>密码再过几天必须被变更（99999表示永不过期）</li><li>密码过期前几天系统提醒用户（默认为一周）</li><li>密码过期几天后帐号会被锁定</li><li>从1970年1月1日算起，多少天后帐号失效</li></ul><h3 id="密码的复杂性策略"><a href="#密码的复杂性策略" class="headerlink" title="密码的复杂性策略"></a>密码的复杂性策略</h3><ul><li><p>使用数字、大写字母、小写字母及特殊字符中至少3种</p></li><li><p>足够长</p></li><li><p>使用随机密码</p></li><li><p>定期更换,不要使用最近曾经使用过的密码</p></li></ul><h3 id="group文件格式"><a href="#group文件格式" class="headerlink" title="group文件格式"></a>group文件格式</h3><ul><li>群组名称：就是群组名称</li><li>群组密码：通常不需要设定，密码是被记录在 /etc/gshadow</li><li>GID：就是群组的 ID</li><li>以当前组为附加组的用户列表(分隔符为逗号)</li></ul><h3 id="gshadow文件格式"><a href="#gshadow文件格式" class="headerlink" title="gshadow文件格式"></a>gshadow文件格式</h3><ul><li>群组名称：就是群组名称</li><li>群组密码：</li><li>组管理员列表：组管理员的列表，更改组密码和成员</li><li>以当前组为附加组的用户列表：(分隔符为逗号)</li></ul><h2 id="用户和组管理命令"><a href="#用户和组管理命令" class="headerlink" title="用户和组管理命令"></a>用户和组管理命令</h2><ul><li><p>用户管理命令</p><ul><li>useradd</li><li>usermod</li><li>userdel</li></ul></li><li><p>组管理命令</p><ul><li>groupadd</li><li>roupmod</li><li>groupdel</li></ul></li></ul><h3 id="用户创建：useradd"><a href="#用户创建：useradd" class="headerlink" title="用户创建：useradd"></a>用户创建：useradd</h3><p>语法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd [options] LOGIN</span><br></pre></td></tr></table></figure></p><p>选项：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">-u UID</span><br><span class="line">-o 配合-u 选项，不检查UID的唯一性</span><br><span class="line">-g GID：指明用户所属基本组，可为组名，也可以GID</span><br><span class="line">-c &quot;COMMENT&quot;：用户的注释信息</span><br><span class="line">-d HOME_DIR: 以指定的路径(不存在)为家目录</span><br><span class="line">-s SHELL: 指明用户的默认shell程序</span><br><span class="line">可用列表在/etc/shells文件中</span><br><span class="line">-G GROUP1[,GROUP2,...]：为用户指明附加组，组须事先存在</span><br><span class="line">-N 不创建私用组做主组，使用users组做主组</span><br><span class="line">-r: 创建系统用户 CentOS 6: ID&lt;500，CentOS 7: ID&lt;1000</span><br><span class="line">-m 创建家目录，用于系统用户</span><br><span class="line">-M 不创建家目录，用于非系统用户</span><br></pre></td></tr></table></figure></p><ul><li>默认值设定：/etc/default/useradd文件中</li><li>显示或更改默认设置<br>useradd -D<br>useradd –D -s SHELL<br>useradd –D –b BASE_DIR<br>useradd –D –g GROUP</li><li><p>练习：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1、创建用户gentoo，附加组为bin和root，默认shell为/bin/csh，注释信息为</span><br><span class="line">&quot;Gentoo Distribution&quot;</span><br><span class="line">2、创建下面的用户、组和组成员关系</span><br><span class="line">名字为webs 的组</span><br><span class="line">用户nginx 使用webs 作为附属组</span><br><span class="line">用户varnish，也使用webs 作为附属组</span><br><span class="line">用户mysql，不可交互登录系统，且不是webs 的成员，nginx，varnish，mysql密</span><br><span class="line">码都是magedu</span><br></pre></td></tr></table></figure></li><li><p>新建用户的相关文件和命令</p><ul><li>/etc/default/useradd</li><li>/etc/skel/*</li><li>/etc/login.defs</li><li>newusers passwd格式文件 批量创建用户</li><li>chpasswd 批量修改用户口令</li></ul></li></ul><h3 id="用户属性修改：usermod"><a href="#用户属性修改：usermod" class="headerlink" title="用户属性修改：usermod"></a>用户属性修改：usermod</h3><p>语法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usermod [OPTION] login</span><br></pre></td></tr></table></figure></p><p>选项：基本同useradd<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">-u UID: 新UID</span><br><span class="line">-g GID: 新主组</span><br><span class="line">-G GROUP1[,GROUP2,...[,GROUPN]]]：新附加组，原来的附加组将会被覆盖；</span><br><span class="line">若保留原有，则要同时使用-a选项</span><br><span class="line">-s SHELL：新的默认SHELL</span><br><span class="line">-c &apos;COMMENT&apos;：新的注释信息</span><br><span class="line">-d HOME: 新家目录不会自动创建；若要创建新家目录并移动原家数据，同时使</span><br><span class="line">用-m选项</span><br><span class="line">-l login_name: 新的名字；</span><br><span class="line">-L: lock指定用户,在/etc/shadow 密码栏的增加 !</span><br><span class="line">-U: unlock指定用户,将 /etc/shadow 密码栏的 ! 拿掉</span><br><span class="line">-e YYYY-MM-DD: 指明用户账号过期日期</span><br><span class="line">-f INACTIVE: 设定非活动期限</span><br></pre></td></tr></table></figure></p><h3 id="删除用户：userdel"><a href="#删除用户：userdel" class="headerlink" title="删除用户：userdel"></a>删除用户：userdel</h3><p>语法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">userdel [OPTION]... login</span><br></pre></td></tr></table></figure></p><p>选项：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-r: 删除用户家目录</span><br></pre></td></tr></table></figure></p><h3 id="查看用户相关信息"><a href="#查看用户相关信息" class="headerlink" title="查看用户相关信息"></a>查看用户相关信息</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">id [OPTION]... [USER]</span><br><span class="line"></span><br><span class="line">-u: 显示UID</span><br><span class="line">-g: 显示GID</span><br><span class="line">-G: 显示用户所属的组的ID</span><br><span class="line">-n: 显示名称，需配合ugG使用</span><br></pre></td></tr></table></figure><h3 id="切换用户或以其他用户身份执行命令"><a href="#切换用户或以其他用户身份执行命令" class="headerlink" title="切换用户或以其他用户身份执行命令"></a>切换用户或以其他用户身份执行命令</h3><p>语法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su [options...] [-] [user [args...]]</span><br></pre></td></tr></table></figure></p><ul><li>切换用户的方式：<ul><li>su UserName：非登录式切换，即不会读取目标用户的配置文件，不改变<br>当前工作目录</li><li>su - UserName：登录式切换，会读取目标用户的配置文件，切换至家目<br>录，完全切换</li></ul></li><li>root su至其他用户无须密码；非root用户切换时需要密码</li><li>换个身份执行命令：su [-] UserName -c ‘COMMAND’</li></ul><h3 id="设置密码"><a href="#设置密码" class="headerlink" title="设置密码"></a>设置密码</h3><p>语法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd [OPTIONS] UserName: 修改指定用户的密码</span><br></pre></td></tr></table></figure></p><p>选项<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> 常用选项：</span><br><span class="line">-d:删除指定用户密码</span><br><span class="line">-l:锁定指定用户</span><br><span class="line">-u:解锁指定用户</span><br><span class="line">-e:强制用户下次登录修改密码</span><br><span class="line">-f: 强制操作</span><br><span class="line">-n mindays: 指定最短使用期限</span><br><span class="line">-x maxdays：最大使用期限</span><br><span class="line">-w warndays：提前多少天开始警告</span><br><span class="line">-i inactivedays：非活动期限</span><br><span class="line">--stdin：从标准输入接收用户密码</span><br><span class="line">echo &quot;PASSWORD&quot; | passwd --stdin USERNAME</span><br></pre></td></tr></table></figure></p><h3 id="修改用户密码策略"><a href="#修改用户密码策略" class="headerlink" title="修改用户密码策略"></a>修改用户密码策略</h3><p>语法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chage [OPTION]... LOGIN</span><br></pre></td></tr></table></figure></p><p>选项：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-d LAST_DAY</span><br><span class="line">-E --expiredate EXPIRE_DATE</span><br><span class="line">-I --inactive INACTIVE</span><br><span class="line">-m --mindays MIN_DAYS</span><br><span class="line">-M --maxdays MAX_DAYS</span><br><span class="line">-W --warndays WARN_DAYS</span><br><span class="line"> –l 显示密码策略</span><br></pre></td></tr></table></figure></p><ul><li>示例：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chage -d 0 tom 下一次登录强制重设密码</span><br><span class="line">chage -m 0 –M 42 –W 14 –I 7 tom</span><br><span class="line">chage -E 2016-09-10 tom</span><br></pre></td></tr></table></figure></li></ul><h3 id="用户相关的其它命令"><a href="#用户相关的其它命令" class="headerlink" title="用户相关的其它命令"></a>用户相关的其它命令</h3><ul><li>chfn 指定个人信息</li><li>chsh 指定shell</li><li>finger 查看用户信息</li></ul><h3 id="创建组：groupadd"><a href="#创建组：groupadd" class="headerlink" title="创建组：groupadd"></a>创建组：groupadd</h3><p>语法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupadd [OPTION]... group_name</span><br></pre></td></tr></table></figure></p><p>选项：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-g GID: 指明GID号；[GID_MIN, GID_MAX]</span><br><span class="line"> -r: 创建系统组</span><br><span class="line">    CentOS 6: ID&lt;500</span><br><span class="line">    CentOS 7: ID&lt;1000</span><br></pre></td></tr></table></figure></p><h3 id="组属性修改：groupmod"><a href="#组属性修改：groupmod" class="headerlink" title="组属性修改：groupmod"></a>组属性修改：groupmod</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">groupmod [OPTION]... group</span><br><span class="line">-n group_name: 新名字</span><br><span class="line">-g GID: 新的GID</span><br></pre></td></tr></table></figure><h3 id="组删除：groupdel"><a href="#组删除：groupdel" class="headerlink" title="组删除：groupdel"></a>组删除：groupdel</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupdel GROUP</span><br></pre></td></tr></table></figure><h3 id="更改组密码-gpasswd"><a href="#更改组密码-gpasswd" class="headerlink" title="更改组密码:gpasswd"></a>更改组密码:gpasswd</h3><p>语法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gpasswd [OPTION] GROUP</span><br></pre></td></tr></table></figure></p><p>选项：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-a user 将user添加至指定组中</span><br><span class="line">-d user 从指定组中移除用户user</span><br><span class="line">-A user1,user2,... 设置有管理权限的用户列表</span><br></pre></td></tr></table></figure></p><h3 id="临时切换主组：newgrp"><a href="#临时切换主组：newgrp" class="headerlink" title="临时切换主组：newgrp"></a>临时切换主组：newgrp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">默认创建一个文件的属组是当前用户的主组，可以临时切换主组，从而创建指定归属组的文件，如果切换的组是该用户的附加组，可以直接切换，否则如果用户本不属于此组，则需要组密码</span><br></pre></td></tr></table></figure><h3 id="更改和查看组成员"><a href="#更改和查看组成员" class="headerlink" title="更改和查看组成员"></a>更改和查看组成员</h3><p>语法:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupmems [options] [action]</span><br></pre></td></tr></table></figure></p><p>选项：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">options：</span><br><span class="line"> -g, --group groupname 更改为指定组 (只有root)</span><br><span class="line"> Actions:</span><br><span class="line"> -a, --add username 指定用户加入组</span><br><span class="line"> -d, --delete username 从组中删除用户</span><br><span class="line"> -p, --purge 从组中清除所有成员</span><br><span class="line"> -l, --list 显示组成员列表</span><br></pre></td></tr></table></figure></p><h3 id="查看用户所属组列表：groups"><a href="#查看用户所属组列表：groups" class="headerlink" title="查看用户所属组列表：groups"></a>查看用户所属组列表：groups</h3>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>管道</title>
      <link href="/2018/09/26/%E7%AE%A1%E9%81%93/"/>
      <url>/2018/09/26/%E7%AE%A1%E9%81%93/</url>
      <content type="html"><![CDATA[<h2 id="管道：用符号”-”表示"><a href="#管道：用符号”-”表示" class="headerlink" title="管道：用符号”|”表示"></a>管道：用符号”|”表示</h2><p>功能：用来连接命令，即把前一个命令的标准输出作为下一个命令的处理对象</p><blockquote><p>注意：管道只处理标准输出，对于错误输出不进行处理，而显示在终端。<a id="more"></a></p></blockquote><p>格式：命令1 | 命令2 | 命令3 | …</p><p>示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">## 只有标准输出会转换；</span><br><span class="line">[xin@centos7 ~ ]$ls /boot/ /error |tr &apos;a-z&apos; &apos;A-Z&apos;</span><br><span class="line">ls: cannot access /error: No such file or directory</span><br><span class="line">/BOOT/:</span><br><span class="line">CONFIG-3.10.0-862.EL7.X86_64</span><br><span class="line">EFI</span><br><span class="line">GRUB</span><br><span class="line">GRUB2</span><br><span class="line">INITRAMFS-0-RESCUE-EABA35925CD4470A8EA2B81643FD49A2.IMG</span><br><span class="line">INITRAMFS-3.10.0-862.EL7.X86_64.IMG</span><br><span class="line">SYMVERS-3.10.0-862.EL7.X86_64.GZ</span><br><span class="line">SYSTEM.MAP-3.10.0-862.EL7.X86_64</span><br><span class="line">VMLINUZ-0-RESCUE-EABA35925CD4470A8EA2B81643FD49A2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 计算1+2</span><br><span class="line">[root@centos7 data ]#echo 1+2|bc</span><br><span class="line">3</span><br><span class="line">## 计算1+2+3+..100的和</span><br><span class="line">方法1：输出1..100的值，然后tr替换空格为+，然后通过管道给bc</span><br><span class="line">[root@centos7 data ]#echo &#123;1..100&#125;|tr &apos; &apos; &apos;+&apos;|bc</span><br><span class="line">5050</span><br><span class="line">方法2：seq命令，-s指定分隔符</span><br><span class="line">[root@centos7 data ]#seq -s + 100|bc</span><br><span class="line">5050</span><br></pre></td></tr></table></figure><p>错误输出默认不能通过管道进行处理，那么有没有什么办法可以处理呢？可以结合2&gt;&amp;1(将错误输出重定向到标准输出，相当于将错误的洗白)实现；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 data ]#ls /error |tr &apos;a-z&apos; &quot;A-Z&quot;</span><br><span class="line">ls: cannot access /error: No such file or directory</span><br><span class="line">## 测试将错误的输出进行洗白</span><br><span class="line">[root@centos7 data ]#ls /error 2&gt;&amp;1 |tr &apos;a-z&apos; &quot;A-Z&quot;</span><br><span class="line">LS: CANNOT ACCESS /ERROR: NO SUCH FILE OR DIRECTORY</span><br><span class="line">ok，成功实现；</span><br><span class="line"></span><br><span class="line">##其实，还有另外一种方法可以实现，只不过是一项新功能，对于一些系统可能无法实现；</span><br><span class="line">## 测试使用|&amp;进行洗白</span><br><span class="line">[root@centos7 data ]#ls /error |&amp; tr &apos;a-z&apos; &quot;A-Z&quot;</span><br><span class="line">LS: CANNOT ACCESS /ERROR: NO SUCH FILE OR DIRECTORY</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>I/O重定向</title>
      <link href="/2018/09/26/I-O%E9%87%8D%E5%AE%9A%E5%90%91/"/>
      <url>/2018/09/26/I-O%E9%87%8D%E5%AE%9A%E5%90%91/</url>
      <content type="html"><![CDATA[<h2 id="标准输入和输出"><a href="#标准输入和输出" class="headerlink" title="标准输入和输出"></a>标准输入和输出</h2><p>1.计算机中有很多程序，程序的运行依赖于指令，而指令最终服务的是数据；数据无非以下两种：</p><p>读入数据：Input</p><p>输出数据：Output <a id="more"></a></p><p>2.前面曾经说过：linux一切皆文件；</p><p>在linux中，每打开一个文件系统都会自动分配一个fd：file  descriptor(文件描述符)，相当于文件的标识编号；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">## 打开文件，放入后台</span><br><span class="line">[root@centos7 ansible ]#  /etc/inittab &amp;</span><br><span class="line"></span><br><span class="line">## 过滤出进程编号</span><br><span class="line">[root@centos7 fd ]#ps aux|grep vim</span><br><span class="line">root       4248  0.0  0.3 151112  4948 pts/0    S+   09:19   0:00 vim /etc/inittab</span><br><span class="line">root       4433  0.0  0.0 112704   972 pts/1    R+   09:25   0:00 grep --color=auto vim</span><br><span class="line"></span><br><span class="line">## 进入该进程目录下的fd目录</span><br><span class="line">[root@centos7 fd ]#cd /proc/4248/fd</span><br><span class="line">[root@centos7 fd ]#ls </span><br><span class="line">0  1  2  4</span><br><span class="line"></span><br><span class="line">## 查看打开文件的编号；</span><br><span class="line">[root@centos7 fd ]#ll</span><br><span class="line">total 0</span><br><span class="line">lrwx------ 1 root root 64 Sep 22 09:20 0 -&gt; /dev/pts/0</span><br><span class="line">lrwx------ 1 root root 64 Sep 22 09:20 1 -&gt; /dev/pts/0</span><br><span class="line">lrwx------ 1 root root 64 Sep 22 09:19 2 -&gt; /dev/pts/0</span><br><span class="line">lrwx------ 1 root root 64 Sep 22 09:20 4 -&gt; /etc/.inittab.swp</span><br><span class="line">## 4，即打开的文件描述符；剩下的0 、1 、2就是接下来的重点内容。</span><br></pre></td></tr></table></figure><ol><li><p>linux给程序提供三种I/O设备</p><p>标准输入（STDIN）  -0  默认接受来自键盘的输入</p><p>标准输出（STDOUT） -1 默认输出到终端窗口</p><p>标准错误（STDERR）-2  默认输出到终端窗口</p><p>既然上面都是默认，那么是不是可以不接受键盘的标准输入，不输出到终端，而自定义默认的位置，这就是重定向。</p></li></ol><h2 id="I-O重定向：改变默认位置"><a href="#I-O重定向：改变默认位置" class="headerlink" title="I/O重定向：改变默认位置"></a>I/O重定向：改变默认位置</h2><p>   输入重定向：原来默认是键盘，可以改成其他的输入，如从文件读取输入；</p><p>   输出重定向：原来默认是终端，可以改成其他的输出，如输出到文件中；</p><h3 id="输出重定向："><a href="#输出重定向：" class="headerlink" title="输出重定向："></a>输出重定向：</h3><ul><li><h4 id="正常输出重定向：-gt-（覆盖输出）、-gt-gt-（追加输出）"><a href="#正常输出重定向：-gt-（覆盖输出）、-gt-gt-（追加输出）" class="headerlink" title="正常输出重定向：&gt;（覆盖输出）、&gt;&gt;（追加输出）"></a><strong>正常输出重定向</strong>：<code>&gt;</code>（覆盖输出）、<code>&gt;&gt;</code>（追加输出）</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">准备环境：</span><br><span class="line">[root@centos7 data ]#cat f1</span><br><span class="line">hello world</span><br><span class="line"></span><br><span class="line">## 覆盖输出，原文件内容被覆盖；</span><br><span class="line">[root@centos7 data ]#echo &quot;passwd &quot; &gt; f1</span><br><span class="line">[root@centos7 data ]#cat f1</span><br><span class="line">passwd </span><br><span class="line"></span><br><span class="line">## 追加输出，保留原文件内容；</span><br><span class="line">[root@centos7 data ]#echo &quot;passwd &quot; &gt;&gt; f1</span><br><span class="line">[root@centos7 data ]#cat  f1</span><br><span class="line">passwd </span><br><span class="line">passwd</span><br></pre></td></tr></table></figure></li><li><h4 id="错误输出重定向：2-gt-（覆盖输出）、2-gt-gt-（追加输出）"><a href="#错误输出重定向：2-gt-（覆盖输出）、2-gt-gt-（追加输出）" class="headerlink" title="错误输出重定向：2&gt;（覆盖输出）、2&gt;&gt;（追加输出）"></a><strong>错误输出重定向</strong>：<code>2&gt;</code>（覆盖输出）、<code>2&gt;&gt;</code>（追加输出）</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">## 准备环境：</span><br><span class="line">[root@centos7 data ]#cat f2</span><br><span class="line">this is hostname is centos6.10</span><br><span class="line"></span><br><span class="line">## 查看默认错误输出</span><br><span class="line">[root@centos7 data ]#ls /file</span><br><span class="line">ls: cannot access /file: No such file or directory</span><br><span class="line"></span><br><span class="line">## 覆盖输出，原文件内容被清空；</span><br><span class="line">[root@centos7 data ]#ls /file 2&gt; f2</span><br><span class="line">[root@centos7 data ]#cat f2</span><br><span class="line">ls: cannot access /file: No such file or directory</span><br><span class="line"></span><br><span class="line">## 追加输出，</span><br><span class="line">[root@centos7 data ]#pssh 2&gt;&gt; f2</span><br><span class="line">[root@centos7 data ]#cat f2</span><br><span class="line">ls: cannot access /file: No such file or directory</span><br><span class="line">bash: pssh: command not found...</span><br><span class="line">Similar command is: &apos;ssh&apos;</span><br></pre></td></tr></table></figure></li><li><h4 id="正确和错误的都进行输出重定向："><a href="#正确和错误的都进行输出重定向：" class="headerlink" title="正确和错误的都进行输出重定向："></a><strong>正确和错误的都进行输出重定向</strong>：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">## 标准输出到文件，错误输出到终端</span><br><span class="line">[root@centos7 data ]#ls /etc/motd /file &gt; f3</span><br><span class="line">ls: cannot access /file: No such file or directory</span><br><span class="line">[root@centos7 data ]#cat f3</span><br><span class="line">/etc/motd</span><br><span class="line"></span><br><span class="line">## 标准输出到终端，错误输出到文件</span><br><span class="line">[root@centos7 data ]#ls /etc/motd /file 2&gt; f3</span><br><span class="line">/etc/motd</span><br><span class="line">[root@centos7 data ]#cat f3</span><br><span class="line">ls: cannot access /file: No such file or directory</span><br><span class="line"></span><br><span class="line">## 将标准输出和错误输出都输出到文件</span><br><span class="line">[root@centos7 data ]#ls /etc/motd /file &amp;&gt; f3</span><br><span class="line">[root@centos7 data ]#cat f3</span><br><span class="line">ls: cannot access /file: No such file or directory</span><br><span class="line">/etc/motd</span><br></pre></td></tr></table></figure></li></ul><h3 id="输入重定向"><a href="#输入重定向" class="headerlink" title="输入重定向"></a>输入重定向</h3><pre><code>使用&lt;来重定向标准输入<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">## 使用tr命令读取文件内容，并把小写字符转换成大写</span><br><span class="line">[root@centos7 data ]#tr &apos;a-z&apos; &apos;A-Z&apos; &lt; /etc/issue</span><br><span class="line">\S</span><br><span class="line">KERNEL \R ON AN \M</span><br></pre></td></tr></table></figure>使用&quot;&lt;&lt;终止词&quot;命令从键盘将多行重导向给标准输入<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">## 给xin发邮件，-s指定标题，后面跟接收用户地址</span><br><span class="line">[root@centos7 data ]#mail -s &quot;Please call&quot; xin  &lt;&lt;EOF</span><br><span class="line">&gt; hi wang,</span><br><span class="line">&gt; please give me a call when you get in, We may need</span><br><span class="line">&gt; EOF</span><br><span class="line">## 切换xin，查看邮件</span><br><span class="line">[root@centos7 data ]#su - xin</span><br><span class="line">Last login: Sat Sep 22 10:16:52 CST 2018 on pts/0</span><br><span class="line">## 直接输入mail命令</span><br><span class="line">[xin@centos7 ~ ]$mail</span><br><span class="line">Heirloom Mail version 12.5 7/5/10.  Type ? for help.</span><br><span class="line">&quot;/var/spool/mail/xin&quot;: 2 messages 2 new</span><br><span class="line">&gt;N  1 root                  Sat Sep 22 10:19  20/589   &quot;xin&quot;</span><br><span class="line"> N  2 root                  Sat Sep 22 10:21  19/648   &quot;Please call&quot;</span><br><span class="line">&amp; 2## 输入邮件对应编号</span><br><span class="line">Message  2:</span><br><span class="line">From root@centos7.localdomain  Sat Sep 22 10:21:08 2018</span><br><span class="line">Return-Path: &lt;root@centos7.localdomain&gt;</span><br><span class="line">X-Original-To: xin</span><br><span class="line">Delivered-To: xin@centos7.localdomain</span><br><span class="line">Date: Sat, 22 Sep 2018 10:21:08 +0800</span><br><span class="line">To: xin@centos7.localdomain</span><br><span class="line">Subject: Please call</span><br><span class="line">User-Agent: Heirloom mailx 12.5 7/5/10</span><br><span class="line">Content-Type: text/plain; charset=us-ascii</span><br><span class="line">From: root@centos7.localdomain (root)</span><br><span class="line">Status: R</span><br><span class="line"></span><br><span class="line">hi wang,</span><br><span class="line">please give me a call when you get in, We may need</span><br><span class="line"></span><br><span class="line">&amp; quit## quit退出</span><br></pre></td></tr></table></figure></code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">## cat结合多行重定向生成文件</span><br><span class="line">[xin@centos7 ~ ]$cat &gt;file.txt &lt;&lt;EOF</span><br><span class="line">&gt; hello, world</span><br><span class="line">&gt; EOF</span><br><span class="line">[xin@centos7 ~ ]$cat file.txt </span><br><span class="line">hello, world</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>inode和软链接</title>
      <link href="/2018/09/26/inode%E5%92%8C%E8%BD%AF%E9%93%BE%E6%8E%A5/"/>
      <url>/2018/09/26/inode%E5%92%8C%E8%BD%AF%E9%93%BE%E6%8E%A5/</url>
      <content type="html"><![CDATA[<h2 id="inode介绍"><a href="#inode介绍" class="headerlink" title="inode介绍"></a>inode介绍</h2><p>inode（index node）表：用于存放磁盘上文件的元数据信息。</p><p>文件的元数据信息包括如下几个部分：<a id="more"></a></p><ul><li>文件类型，权限，UID，GID</li><li>链接数（指向这个文件名路径名称个数）</li><li>该文件的大小和不同的时间戳</li><li>数据块指针：指向磁盘上文件的真正数据的磁盘块block</li><li>有关文件的其他数据</li></ul><p>系统通过inode表中的指针寻找文件的数据，而管理员通过文件名引用</p><p><img src="http://i1.bvimg.com/662847/b49b431db820910f.png" alt="Markdown"></p><p><img src="http://i1.bvimg.com/662847/6178bc9f18de3331.png" alt="Markdown"></p><h3 id="cp和inode的关系："><a href="#cp和inode的关系：" class="headerlink" title="cp和inode的关系："></a>cp和inode的关系：</h3><p>cp命令做的事情实际上就是分配一个空闲的inode号，然后在inode表中生成一个新条目，然后在目录中创建一个目录项，然后将名称与inode编号关联，最后拷贝数据生成新的文件</p><h3 id="rm和inode的关系："><a href="#rm和inode的关系：" class="headerlink" title="rm和inode的关系："></a>rm和inode的关系：</h3><p>删除文件时，实际上是释放文件的inode号，文件的block数据实际上并不会马上被删除，直到有另一个文件使用该block时才会删除。</p><h3 id="mv和inode的关系："><a href="#mv和inode的关系：" class="headerlink" title="mv和inode的关系："></a>mv和inode的关系：</h3><p>mv和inode的关系：如果mv的目标文件和源文件在同一个分区内，那么move后的文件的inode号并不会改变，因为该文件实际的block位置并没有改变。但是如果目标和源在一个不同的分区中， 那么mv就相当于cp和rm了，mv后的文件的inode号将会被改变，因为文件的block变了。</p><table><thead><tr><th>ls -i</th><th>显示文件的inode节点号，每个分区的inode节点编号都是独立分配的。因此不同分区中的文件的inode值可能会一样。</th></tr></thead><tbody><tr><td>df -i</td><td>显示每个分区的inode编号最大值，在同一分区mv文件，文件的inode值不变，inode值不变也就意味着磁盘块不变。因此同一分区移动文件特别快</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS6 ~ ]#ll -i</span><br><span class="line">total 108</span><br><span class="line">2752725 -rw-------. 1 root root  1445 Sep 19  2018 anaconda-ks.cfg</span><br><span class="line">2752533 drwxr-xr-x. 2 root root  4096 Sep 14  2018 Desktop</span><br><span class="line">2752537 drwxr-xr-x. 2 root root  4096 Sep 14  2018 Documents</span><br><span class="line">2752534 drwxr-xr-x. 2 root root  4096 Sep 14  2018 Downloads</span><br><span class="line">2752514 -rw-r--r--. 1 root root 50968 Jul 18  2018 install.log</span><br><span class="line">2752515 -rw-r--r--. 1 root root 11698 Jul 18  2018 install.log.syslog</span><br><span class="line">2752724 -rw-r--r--. 1 root root  1445 Sep 19  2018 ks6.cfg</span><br><span class="line">2752538 drwxr-xr-x. 2 root root  4096 Sep 14  2018 Music</span><br><span class="line">2752539 drwxr-xr-x. 2 root root  4096 Sep 14  2018 Pictures</span><br><span class="line">2752536 drwxr-xr-x. 2 root root  4096 Sep 14  2018 Public</span><br><span class="line">2752535 drwxr-xr-x. 2 root root  4096 Sep 14  2018 Templates</span><br><span class="line">2752540 drwxr-xr-x. 2 root root  4096 Sep 14  2018 Videos</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@CentOS6 ~ ]#df -i</span><br><span class="line">Filesystem      Inodes  IUsed   IFree IUse% Mounted on</span><br><span class="line">/dev/sda2      3203072 104733 3098339    4% /</span><br><span class="line">tmpfs           125377      4  125373    1% /dev/shm</span><br><span class="line">/dev/sda1        65536     38   65498    1% /boot</span><br><span class="line">/dev/sda3      1921360     15 1921345    1% /data</span><br><span class="line">/dev/sr0             0      0       0     - /media/CentOS_6.10_Final</span><br></pre></td></tr></table></figure><h2 id="硬链接和软链接"><a href="#硬链接和软链接" class="headerlink" title="硬链接和软链接"></a>硬链接和软链接</h2><h3 id="硬链接"><a href="#硬链接" class="headerlink" title="硬链接"></a>硬链接</h3><ul><li><p>本质上是同一个文件，相当于起一个别名；</p></li><li><p>inode号相同；</p></li><li><p>创建时硬链接数递增</p></li><li><p>删除文件：</p><ul><li>硬链接数递减</li><li>文件要存在，至少有一个链接数；</li><li>当硬链接数为0时，该文件被删除；</li><li>删除原文件后，依然可以通过硬链接访问；</li></ul></li><li><p>不能跨越驱动器或分区</p></li><li><p>不能针对目录创建</p></li><li><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln  filename  [linkname]</span><br></pre></td></tr></table></figure></li></ul><h3 id="符号（软）链接"><a href="#符号（软）链接" class="headerlink" title="符号（软）链接"></a>符号（软）链接</h3><ul><li><p>不同文件，想当于创建一个快捷方式；</p></li><li><p>一个符号链接的内容是它引用的源文件的内容；</p></li><li><p>inode节点号不同；</p></li><li><p>创建后硬链接数不增长；</p></li><li><p>可以对目录创建；</p></li><li><p>可以跨分区；</p></li><li><p>删除源文件后，软链接失效；</p></li><li><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln  -s  filename  [linkname]</span><br></pre></td></tr></table></figure></li></ul><h3 id="readlink命令"><a href="#readlink命令" class="headerlink" title="readlink命令"></a>readlink命令</h3><p>功能：读取软链接指向的真实路径<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 / ]#ll</span><br><span class="line">total 32</span><br><span class="line">lrwxrwxrwx.   1 root root     7 Jul 18 17:25 bin -&gt; usr/bin</span><br><span class="line">dr-xr-xr-x.   5 root root  4096 Jul 18 17:44 boot</span><br><span class="line">drwxr-xr-x.   3 root root    22 Sep 21 15:48 data</span><br><span class="line">drwxr-xr-x   19 root root  3300 Sep 21 11:08 dev</span><br><span class="line">drwxr-xr-x. 138 root root 12288 Sep 21 14:05 etc</span><br><span class="line">drwxr-xr-x.   3 root root    17 Jul 18 17:43 home</span><br><span class="line">lrwxrwxrwx.   1 root root     7 Jul 18 17:25 lib -&gt; usr/lib</span><br><span class="line">lrwxrwxrwx.   1 root root     9 Jul 18 17:25 lib64 -&gt; usr/lib64</span><br><span class="line">drwxr-xr-x.   2 root root     6 Apr 11 12:59 media</span><br><span class="line">drwxr-xr-x.   2 root root     6 Apr 11 12:59 mnt</span><br><span class="line">drwxr-xr-x.   3 root root    16 Jul 18 17:35 opt</span><br><span class="line">dr-xr-xr-x  223 root root     0 Sep 21 11:07 proc</span><br><span class="line">dr-xr-x---.  17 root root  4096 Sep 21 15:48 root</span><br><span class="line">drwxr-xr-x   40 root root  1260 Sep 21 20:01 run</span><br><span class="line">lrwxrwxrwx.   1 root root     8 Jul 18 17:25 sbin -&gt; usr/sbin</span><br><span class="line">drwxr-xr-x.   2 root root     6 Apr 11 12:59 srv</span><br><span class="line">dr-xr-xr-x   13 root root     0 Sep 21 11:07 sys</span><br><span class="line">drwxrwxrwt.  14 root root  4096 Sep 21 16:11 tmp</span><br><span class="line">drwxr-xr-x.  13 root root   155 Jul 18 17:25 usr</span><br><span class="line">drwxr-xr-x.  21 root root  4096 Sep 20 20:42 var</span><br><span class="line"></span><br><span class="line">[root@centos7 / ]#readlink bin</span><br><span class="line">usr/bin</span><br><span class="line">[root@centos7 / ]#readlink lib</span><br><span class="line">usr/lib</span><br></pre></td></tr></table></figure></p><h3 id="如何查找一个文件的硬链接文件？"><a href="#如何查找一个文件的硬链接文件？" class="headerlink" title="如何查找一个文件的硬链接文件？"></a>如何查找一个文件的硬链接文件？</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">## 创建硬链接</span><br><span class="line">[root@centos7 data ]#ln f1 f4</span><br><span class="line"></span><br><span class="line">## 查看属性</span><br><span class="line">[root@centos7 data ]#ll f1</span><br><span class="line">-rw-r--r-- 2 root root 0 Sep 21 20:18 f1</span><br><span class="line"></span><br><span class="line">## 查找f1的硬链接</span><br><span class="line">[root@centos7 data ]#find -samefile f1</span><br><span class="line">./f1</span><br><span class="line">./f4</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>文件类型和相关命令</title>
      <link href="/2018/09/26/%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B%E5%92%8C%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4/"/>
      <url>/2018/09/26/%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B%E5%92%8C%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4/</url>
      <content type="html"><![CDATA[<h2 id="文件类型"><a href="#文件类型" class="headerlink" title="文件类型"></a>文件类型</h2><ul><li>-：普通文件</li><li>d：目录文件</li><li>b：块设备，支持以“block”为单位进行随机访问</li><li>c：字符设备，支持以”character”为单位进行线性访问</li><li>l：符号链接文件</li><li>p：管道文件</li><li>s：套接字socket文件<a id="more"></a></li></ul><h2 id="路径"><a href="#路径" class="headerlink" title="路径"></a>路径</h2><h3 id="绝对路径：从-开始的路径；"><a href="#绝对路径：从-开始的路径；" class="headerlink" title="绝对路径：从/开始的路径；"></a>绝对路径：从/开始的路径；</h3><h3 id="相对路径名：想对于当前目录的路径；"><a href="#相对路径名：想对于当前目录的路径；" class="headerlink" title="相对路径名：想对于当前目录的路径；"></a>相对路径名：想对于当前目录的路径；</h3><ul><li><code>.</code>：当前目录</li><li><code>..</code>：上级目录</li><li><code>~</code>：用户的家目录</li><li><code>-</code>：切换上次输入的目录，和命令配合使用</li></ul><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><h3 id="basename——基名"><a href="#basename——基名" class="headerlink" title="basename——基名"></a>basename——基名</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS6 ~ ]#basename /etc/sysconfig/network-scripts/ifcfg-eth0</span><br><span class="line">ifcfg-eth0</span><br></pre></td></tr></table></figure><h3 id="dirname——目录名"><a href="#dirname——目录名" class="headerlink" title="dirname——目录名"></a>dirname——目录名</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS6 ~ ]#dirname /etc/sysconfig/network-scripts/ifcfg-eth0</span><br><span class="line">/etc/sysconfig/network-scripts</span><br></pre></td></tr></table></figure><h3 id="pwd——显示当前工作目录"><a href="#pwd——显示当前工作目录" class="headerlink" title="pwd——显示当前工作目录"></a>pwd——显示当前工作目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS6 ~ ]#pwd</span><br><span class="line">/root</span><br></pre></td></tr></table></figure><h3 id="cd——切换目录"><a href="#cd——切换目录" class="headerlink" title="cd——切换目录"></a>cd——切换目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">cd：切换到家目录</span><br><span class="line"></span><br><span class="line">cd ~：切换到家目录</span><br><span class="line"></span><br><span class="line">cd ~USERNAME：切换到用户USERNAME的家目录</span><br><span class="line"></span><br><span class="line">cd -：在上一次所在目录与当前目录来回切换（PWD to OLDPWD）</span><br><span class="line"></span><br><span class="line">cd ..：切换到上级目录</span><br><span class="line"></span><br><span class="line">cd /path/to/directory 切换到一个绝对目录</span><br><span class="line"></span><br><span class="line">cd path/to/directory：切换到一个相对目录</span><br></pre></td></tr></table></figure><h3 id="ls——列出内容"><a href="#ls——列出内容" class="headerlink" title="ls——列出内容"></a>ls——列出内容</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">-a， --all：列出所有文件包含隐藏文件</span><br><span class="line"></span><br><span class="line">-A，--almost-all：列出除.和..之外所有的文件</span><br><span class="line"></span><br><span class="line">-F：-F参数在目录名后加了正斜线（/），以方便用户在输出中分辨它们。类似地，它会在可执行 文件（比如上面的my_script文件）的后面加个星号，以便用户找出可在系统上运行的文件。</span><br><span class="line"></span><br><span class="line">l，--long：长格式信息，列出文件的详细属性，命令可以简写为ll，alias ll=&apos;ls -l --color=auto&apos;</span><br><span class="line"></span><br><span class="line">-h，--human-readable：size用人类可读的格式表示</span><br><span class="line"></span><br><span class="line">-d, --directory：查看目录本身而非内部的文件详情</span><br><span class="line"></span><br><span class="line">-r, --reverse：反转排序（降序）</span><br><span class="line"></span><br><span class="line">-R, --recursive 递归显示（基本不用这个，递归显示用tree命令更直观）</span><br><span class="line">-t：按修改时间排序</span><br></pre></td></tr></table></figure><h3 id="cat命令——查看文件内容"><a href="#cat命令——查看文件内容" class="headerlink" title="cat命令——查看文件内容"></a>cat命令——查看文件内容</h3><p>选项：</p><ul><li><p>-s:压缩空白行为一行</p></li><li><p>-n：显示行号</p></li><li><p>-A：显示所有特殊字符</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS6 test ]#cat -A f1</span><br><span class="line">hello world$</span><br><span class="line">$</span><br><span class="line">my host is xin$</span><br><span class="line">$</span><br><span class="line">$</span><br></pre></td></tr></table></figure><h3 id="tac命令——和cat相反"><a href="#tac命令——和cat相反" class="headerlink" title="tac命令——和cat相反"></a>tac命令——和cat相反</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS6 test ]#cat f1</span><br><span class="line">hello world</span><br><span class="line">my host is xin</span><br><span class="line">[root@CentOS6 test ]#tac f1</span><br><span class="line">my host is xin</span><br><span class="line">hello world</span><br></pre></td></tr></table></figure><h3 id="rev命令"><a href="#rev命令" class="headerlink" title="rev命令"></a>rev命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS6 test ]#rev f1</span><br><span class="line">dlrow olleh</span><br><span class="line">nix si tsoh ym</span><br></pre></td></tr></table></figure><h3 id="stat命令——查看文件状态"><a href="#stat命令——查看文件状态" class="headerlink" title="stat命令——查看文件状态"></a>stat命令——查看文件状态</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS6 test ]#stat f1</span><br><span class="line">  File: `f1&apos;</span><br><span class="line">  Size: 30        Blocks: 8          IO Block: 4096   regular file</span><br><span class="line">Device: 803h/2051dInode: 261636      Links: 1</span><br><span class="line">Access: (0644/-rw-r--r--)  Uid: (    0/    root)   Gid: (    0/    root)</span><br><span class="line">Access: 2008-08-11 21:51:13.173001280 +0800</span><br><span class="line">Modify: 2008-08-11 21:51:09.969004686 +0800</span><br><span class="line">Change: 2008-08-11 21:51:09.978004008 +0800</span><br><span class="line"></span><br><span class="line">## 内容有文件权限、文件属主和属组，文件大小，atime、mtime、ctime等内容；</span><br></pre></td></tr></table></figure><h3 id="touch命令——创建空文件或刷新时间"><a href="#touch命令——创建空文件或刷新时间" class="headerlink" title="touch命令——创建空文件或刷新时间"></a>touch命令——创建空文件或刷新时间</h3><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch [OPTION]... FILE...</span><br></pre></td></tr></table></figure><p>选项：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-a 仅改变 atime和ctime</span><br><span class="line">-m 仅改变 mtime和ctime</span><br><span class="line">-t [[CC]YY]MMDDhhmm[.ss]</span><br><span class="line">指定atime和mtime的时间戳</span><br><span class="line">-c 如果文件不存在，则不予创建，即用于刷新时间；</span><br></pre></td></tr></table></figure><h3 id="cp命令——复制文件或目录"><a href="#cp命令——复制文件或目录" class="headerlink" title="cp命令——复制文件或目录"></a>cp命令——复制文件或目录</h3><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cp [OPTION]... [-T] SOURCE DEST</span><br><span class="line">cp [OPTION]... SOURCE... DIRECTORY</span><br><span class="line">cp [OPTION]... -t DIRECTORY SOURCE...</span><br><span class="line">cp SRC DEST</span><br></pre></td></tr></table></figure><p><img src="/2018/09/26/文件类型和相关命令/Users\admin\Desktop\xin_work\笔记本地图片\6db90bd439fc1f0e.png" alt="Markdown"></p><p>选项：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">-i：覆盖前提示 –n:不覆盖，注意两者顺序</span><br><span class="line">-r, -R: 递归复制目录及内部的所有内容</span><br><span class="line">-a: 归档，相当于-dR --preserv=all</span><br><span class="line">-d：--no-dereference --preserv=links 不复制原文件，只复制链接名</span><br><span class="line">--preserv[=ATTR_LIST]</span><br><span class="line">mode: 权限</span><br><span class="line">ownership: 属主属组</span><br><span class="line">timestamp:</span><br><span class="line">links</span><br><span class="line">xattr</span><br><span class="line">context</span><br><span class="line">all</span><br><span class="line">-p: 等同--preserv=mode,ownership,timestamp</span><br><span class="line">-v: --verbose</span><br><span class="line">-f: --force</span><br><span class="line">-u:--update 只复制源比目标更新文件或目标不存在的文件</span><br><span class="line">--backup=numbered 目标存在，覆盖前先备份加数字后缀</span><br></pre></td></tr></table></figure><p>练习：    </p><p>1、定义别名命令baketc，每天将/etc/目录下所有文件，备份到<br>/app独立的子目录下，并要求子目录格式为 backupYYYY-mm-dd，<br>备份过程可见</p><p>2、创建/app/rootdir目录，并复制/root下所有文件到该目录内，<br>要求保留原有权限</p><h3 id="mv——移动和重命名文件"><a href="#mv——移动和重命名文件" class="headerlink" title="mv——移动和重命名文件"></a>mv——移动和重命名文件</h3><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mv [OPTION]... [-T] SOURCE DEST</span><br><span class="line">mv [OPTION]... SOURCE... DIRECTORY</span><br><span class="line">mv [OPTION]... -t DIRECTORY SOURCE..</span><br></pre></td></tr></table></figure><p>选项：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-f：强制移动或覆盖</span><br><span class="line">-i：交互式</span><br></pre></td></tr></table></figure><h3 id="rm命令——删除"><a href="#rm命令——删除" class="headerlink" title="rm命令——删除"></a>rm命令——删除</h3><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm [OPTION]... FILE...</span><br></pre></td></tr></table></figure><p>选项：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-i 交互式</span><br><span class="line">-f 强制删除</span><br><span class="line">-r 递归</span><br><span class="line"> --no-preserve-root 删除/ </span><br><span class="line"> 注意：rm -rf /*是可以删除根的，建议对rm命令设置别名，即rm file时移动文件到一个固定目录下。</span><br></pre></td></tr></table></figure><h4 id="如何删除大文件？"><a href="#如何删除大文件？" class="headerlink" title="如何删除大文件？"></a>如何删除大文件？</h4><p>如果删除一个文件后，空间并未成功释放，是由于某个进程在使用该文件。</p><p>建议删除文件的步骤：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">## 先清空文件内容</span><br><span class="line">&gt; file</span><br><span class="line">## 再rm删除</span><br><span class="line">rm -rf file</span><br></pre></td></tr></table></figure><h3 id="tree命令——以树状形式显示目录结构"><a href="#tree命令——以树状形式显示目录结构" class="headerlink" title="tree命令——以树状形式显示目录结构"></a>tree命令——以树状形式显示目录结构</h3><p>选项：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-d: 只显示目录</span><br><span class="line"></span><br><span class="line">-L level：指定显示的层级数目</span><br><span class="line"></span><br><span class="line">-P pattern: 只显示由指定pattern匹配到的路径</span><br></pre></td></tr></table></figure><h3 id="mkdir命令——创建目录"><a href="#mkdir命令——创建目录" class="headerlink" title="mkdir命令——创建目录"></a>mkdir命令——创建目录</h3><p>选项：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-p：递归创建</span><br><span class="line">-v：显示详细信息</span><br><span class="line">-m：指定权限</span><br></pre></td></tr></table></figure><h3 id="rmdir命令——删除空目录"><a href="#rmdir命令——删除空目录" class="headerlink" title="rmdir命令——删除空目录"></a>rmdir命令——删除空目录</h3><h3 id="练习："><a href="#练习：" class="headerlink" title="练习："></a>练习：</h3><p>1.如何创建/testdir/dir1/x, /testdir/dir1/y, /testdir/dir1/x/a,</p><p>/testdir/dir1/x/b, /testdir/dir1/y/a, /testdir/dir1/y/b</p><p>2.如何创建/testdir/dir2/x, /testdir/dir2/y, /testdir/dir2/x/a,</p><p>/testdir/dir2/x/b</p><p>3.如何创建/testdir/dir3, /testdir/dir4, /testdir/dir5, /testdir/dir5/dir6,</p><p>/testdir/dir5/dir7</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>linux简单命令</title>
      <link href="/2018/09/26/linux%E7%AE%80%E5%8D%95%E5%91%BD%E4%BB%A4/"/>
      <url>/2018/09/26/linux%E7%AE%80%E5%8D%95%E5%91%BD%E4%BB%A4/</url>
      <content type="html"><![CDATA[<h2 id="linux终端"><a href="#linux终端" class="headerlink" title="linux终端"></a>linux终端</h2><p>设备终端：</p><p>物理终端</p><p>虚拟终端<a id="more"></a></p><p>图形终端</p><p>伪终端</p><h2 id="什么是shell？"><a href="#什么是shell？" class="headerlink" title="什么是shell？"></a>什么是shell？</h2><p>Shell 是Linux系统的用户界面，提供了用户与内核进行交互操作的一种接口。 它接收用户输入的命令并把它送入内核去执行 。</p><p>shell也是一种高级程序设计语言。</p><h3 id="查看系统默认shell？"><a href="#查看系统默认shell？" class="headerlink" title="查看系统默认shell？"></a>查看系统默认shell？</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 data ]#echo $SHELL</span><br><span class="line">/bin/bash</span><br></pre></td></tr></table></figure><h3 id="查看系统支持的所有shell？"><a href="#查看系统支持的所有shell？" class="headerlink" title="查看系统支持的所有shell？"></a>查看系统支持的所有shell？</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 data ]#cat /etc/shells</span><br><span class="line">/bin/sh</span><br><span class="line">/bin/bash</span><br><span class="line">/sbin/nologin</span><br><span class="line">/usr/bin/sh</span><br><span class="line">/usr/bin/bash</span><br><span class="line">/usr/sbin/nologin</span><br><span class="line">/bin/tcsh</span><br><span class="line">/bin/csh</span><br></pre></td></tr></table></figure><h2 id="命令提示符"><a href="#命令提示符" class="headerlink" title="命令提示符"></a>命令提示符</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 data ]#</span><br><span class="line">其中，#为管理员；$为普通用户；</span><br></pre></td></tr></table></figure><h3 id="查看提示符格式："><a href="#查看提示符格式：" class="headerlink" title="查看提示符格式："></a>查看提示符格式：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 data ]#echo $PS1</span><br><span class="line">\[\e[1;42;37m\][\u@\h \W ]\$\[\e[0m\]</span><br></pre></td></tr></table></figure><h3 id="修改提示符格式："><a href="#修改提示符格式：" class="headerlink" title="修改提示符格式："></a>修改提示符格式：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">PS1=&quot;\[\e[1;5;41;33m\][\u@\h \W]\\$\[\e[0m\]&quot; </span><br><span class="line">\e \033 </span><br><span class="line">\u 当前用户 </span><br><span class="line">\h 主机名简称 </span><br><span class="line">\H 主机名 </span><br><span class="line">\w 当前工作目录 </span><br><span class="line">\W 当前工作目录基名 </span><br><span class="line">\t  24小时时间格式 </span><br><span class="line">\T  12小时时间格式 </span><br><span class="line">\! 命令历史数 </span><br><span class="line">\# 开机后命令历史数</span><br></pre></td></tr></table></figure><h3 id="颜色配置：字体颜色和背景颜色"><a href="#颜色配置：字体颜色和背景颜色" class="headerlink" title="颜色配置：字体颜色和背景颜色"></a>颜色配置：字体颜色和背景颜色</h3><p>格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">\e[F;Bm  \e[0m</span><br><span class="line">## \e等同于\033,尾部以&apos;\e[0m&apos;关闭颜色输出</span><br><span class="line">##F是背景颜色，B是字体颜色</span><br><span class="line">F B</span><br><span class="line">30 40 黑色</span><br><span class="line">31 41 红色</span><br><span class="line">32 42 绿色</span><br><span class="line">33 43 黄色 </span><br><span class="line">34 44 蓝色</span><br><span class="line">35 45 紫红色</span><br><span class="line">36 46 青蓝色</span><br><span class="line">37 47 白色</span><br><span class="line">另外：1表示高亮显示；5表示闪烁</span><br></pre></td></tr></table></figure><p>示例：</p><p><img src="http://i1.bvimg.com/662847/512f365268b692f1.png" alt="Markdown"></p><p><img src="http://i1.bvimg.com/662847/5b066a261e9c674c.png" alt="Markdown"></p><blockquote><p>查看帮助：man  bash——————/PROMPTING</p></blockquote><h2 id="linux命令介绍"><a href="#linux命令介绍" class="headerlink" title="linux命令介绍"></a>linux命令介绍</h2><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><h4 id="内部命令"><a href="#内部命令" class="headerlink" title="内部命令"></a>内部命令</h4><p>shell集成的，当用户登录时，根据/etc/passwd进行加载shell，并把命令加载到内存中。</p><p>查看:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">help</span><br><span class="line">enable</span><br></pre></td></tr></table></figure><h4 id="外部命令"><a href="#外部命令" class="headerlink" title="外部命令"></a>外部命令</h4><p>在文件系统路径下有对应的可执行程序文件 </p><p>查看：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">which  -a |--skip-alias ;  whereis</span><br></pre></td></tr></table></figure><h4 id="判断内部或外部命令"><a href="#判断内部或外部命令" class="headerlink" title="判断内部或外部命令"></a>判断内部或外部命令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">type  -a command</span><br></pre></td></tr></table></figure><p>### </p><h3 id="hash缓存表"><a href="#hash缓存表" class="headerlink" title="hash缓存表"></a>hash缓存表</h3><p>系统初始hash表为空，当外部命令执行时，默认会从PATH路径下寻找该命 令，找到后会将这条命令的路径记录到hash表中，当再次使用该命令时，shell解 释器首先会查看hash表，存在将执行之，如果不存在，将会去PATH路径下寻找。 利用hash缓存表可大大提高命令的调用速率 </p><h4 id="hash常见用法"><a href="#hash常见用法" class="headerlink" title="hash常见用法"></a>hash常见用法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">## 显示hash缓存</span><br><span class="line">hash  -l</span><br><span class="line"></span><br><span class="line">## 清除name缓存</span><br><span class="line">hash  -d  name</span><br><span class="line"></span><br><span class="line">## 清除所有缓存</span><br><span class="line">hash -r</span><br></pre></td></tr></table></figure><h3 id="命令别名"><a href="#命令别名" class="headerlink" title="命令别名"></a>命令别名</h3><h4 id="显示当前shell进程所有可用的命令别名"><a href="#显示当前shell进程所有可用的命令别名" class="headerlink" title="显示当前shell进程所有可用的命令别名"></a>显示当前shell进程所有可用的命令别名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alias</span><br></pre></td></tr></table></figure><h4 id="定义别名"><a href="#定义别名" class="headerlink" title="定义别名"></a>定义别名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alias NAME=&apos;VALUE&apos;</span><br></pre></td></tr></table></figure><p>注意：在命令行中定义的别名，仅对当前shell进程有效 </p><h4 id="永久保存："><a href="#永久保存：" class="headerlink" title="永久保存："></a>永久保存：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">只有写入配置文件才能永久保存</span><br><span class="line">仅对当前用户：~/.bashrc </span><br><span class="line">对所有用户有效：/etc/bashrc</span><br><span class="line"></span><br><span class="line">默认写入文件后，不会立即生效，需要bash进程重新读取配置文件</span><br><span class="line">source /path/to/config_file</span><br><span class="line">.  /path/to/config_file</span><br></pre></td></tr></table></figure><h4 id="撤销别名"><a href="#撤销别名" class="headerlink" title="撤销别名"></a>撤销别名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">unalias [-a]  name</span><br><span class="line">-a:取消所有别名</span><br></pre></td></tr></table></figure><h4 id="如何执行原命令"><a href="#如何执行原命令" class="headerlink" title="如何执行原命令"></a>如何执行原命令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">\command</span><br><span class="line">&quot;command&quot;</span><br><span class="line">&apos;command&apos;</span><br><span class="line"></span><br><span class="line">##如果是外部命令，还可以使用绝对路径执行</span><br><span class="line">/path/command</span><br></pre></td></tr></table></figure><h2 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">COMMAND [OPTIONS...] [ARGUMENTS...]</span><br></pre></td></tr></table></figure><p>选项：实现特定的功能</p><p>​    短选项：-c，例如：-h，-l</p><p>​    长选项：–word 例如：–all, –human-readable </p><p>参数：命令的作用对象，比如文件名，用户名等 </p><h4 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h4><ul><li>多个选项以及多参数和命令之间使用空白字符分隔 </li><li>取消和结束命令执行：Ctrl+c，Ctrl+d </li><li>多个命令可以用;符号分开</li><li>一个命令可以用\分成多行</li></ul><h2 id="日期和时间"><a href="#日期和时间" class="headerlink" title="日期和时间"></a>日期和时间</h2><h3 id="linux的两种时钟"><a href="#linux的两种时钟" class="headerlink" title="linux的两种时钟"></a>linux的两种时钟</h3><p>​    系统时钟：由Linux内核通过CPU的工作频率进行的 </p><p>​    硬件时钟：主板 </p><p>命令：</p><p>​    查看或设置系统时间：date</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">## 显示CST时间</span><br><span class="line">[root@centos7 data ]#date</span><br><span class="line">Fri Sep 21 16:45:17 CST 2018</span><br><span class="line"></span><br><span class="line">## 显示utc时间</span><br><span class="line">[root@CentOS6 ~ ]#date --utc</span><br><span class="line">Fri Sep 21 08:26:24 UTC 2018</span><br><span class="line"></span><br><span class="line">## 以年、月、date +%F：</span><br><span class="line">date +%Y-%m-%d或者date +%F</span><br><span class="line"></span><br><span class="line">## 以时、分、秒格式显示：</span><br><span class="line">date +%H:%M:%S或 date  +%T</span><br><span class="line"></span><br><span class="line">## 计算当前时间到1970-1-1（unix的诞生日）的秒</span><br><span class="line">date +%s</span><br><span class="line"></span><br><span class="line">## 转换为天数</span><br><span class="line">date  -d @+上面的秒</span><br><span class="line"></span><br><span class="line">## 显示昨天的时间</span><br><span class="line">date -d &apos;-1 day&apos;</span><br><span class="line"></span><br><span class="line">## 显示明天的时间</span><br><span class="line">date -d &apos;1 day&apos;</span><br><span class="line">&gt; date -d支持：day、month、year</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">设置时间</span><br><span class="line">date -s &quot;2008-08-11 20:00:00&quot;</span><br></pre></td></tr></table></figure><p>​    查看硬件时间：clock或hwclock</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS6 ~ ]#clock</span><br><span class="line">Fri 21 Sep 2018 05:28:57 PM CST  -0.125678 seconds</span><br><span class="line"></span><br><span class="line">选项：</span><br><span class="line">-s, --hctosys 设置系统时间，硬件时间覆盖系统时间。</span><br><span class="line">-w, --systohc 设置硬件时间，系统时间覆盖硬件时间。</span><br></pre></td></tr></table></figure><h2 id="关机和重启命令"><a href="#关机和重启命令" class="headerlink" title="关机和重启命令"></a>关机和重启命令</h2><h3 id="关机：halt-poweroff"><a href="#关机：halt-poweroff" class="headerlink" title="关机：halt  poweroff"></a>关机：halt  poweroff</h3><h3 id="重启：reboot"><a href="#重启：reboot" class="headerlink" title="重启：reboot"></a>重启：reboot</h3><p>​    -f：强制，不调用shutdown</p><p>​    -p：切断电源</p><p>关机或重启：shutdown</p><p>​    shutdown [OPTION]…  TIME [MESSAGE] </p><p>​    -r: reboot </p><p>​    -h: halt </p><p>​    -c：cancel </p><p>​    TIME:无指定，默认相当于 +1 </p><p>​        now: 立刻,相当于+0 </p><p>​        +m: 相对时间表示法，几分钟之后；例如 +3 </p><p>​        hh:mm: 绝对时间表示，指明具体时间</p><h2 id="screen命令"><a href="#screen命令" class="headerlink" title="screen命令"></a>screen命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">创建新screen会话 </span><br><span class="line">screen –S [SESSION] </span><br><span class="line"></span><br><span class="line">加入screen会话 </span><br><span class="line">screen –x [SESSION] </span><br><span class="line"></span><br><span class="line">退出并关闭screen会话</span><br><span class="line">exit </span><br><span class="line"></span><br><span class="line">剥离当前screen会话</span><br><span class="line">Ctrl+a,d </span><br><span class="line"></span><br><span class="line">显示所有已经打开的screen会话 </span><br><span class="line">screen -ls </span><br><span class="line"></span><br><span class="line">恢复某screen会话 </span><br><span class="line">screen -r [SESSION]</span><br></pre></td></tr></table></figure><h2 id="echo命令"><a href="#echo命令" class="headerlink" title="echo命令"></a>echo命令</h2><h3 id="功能：显示字符"><a href="#功能：显示字符" class="headerlink" title="功能：显示字符"></a>功能：显示字符</h3><h3 id="语法：echo-neE-字符串"><a href="#语法：echo-neE-字符串" class="headerlink" title="语法：echo [-neE][字符串]"></a>语法：echo [-neE][字符串]</h3><p>说明：echo会将输入的字符串送往标准输出。输出的字符串间以空白字符隔开,并在最后加上换行号</p><h3 id="选项："><a href="#选项：" class="headerlink" title="选项："></a>选项：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">-E （默认）不支持 \ 解释功能</span><br><span class="line"></span><br><span class="line">-n 不自动换行</span><br><span class="line"></span><br><span class="line"> -e 启用 \ 字符的解释功能</span><br><span class="line"></span><br><span class="line">显示变量:echo $变量名</span><br><span class="line"></span><br><span class="line">启用命令选项-e，若字符串中出现以下字符，则特别加以处理，而不会将它当成</span><br><span class="line"></span><br><span class="line">一般文字输出</span><br><span class="line"></span><br><span class="line">​      \aalert (bell)————发出警告声</span><br><span class="line"></span><br><span class="line">​      \bbackspace————删除前一个字符</span><br><span class="line"></span><br><span class="line">​      \csuppress further output——————最后不加上换行符号</span><br><span class="line"></span><br><span class="line">​      \eescape character————————\033</span><br><span class="line"></span><br><span class="line">​      \fform feed————————————换行但光标仍旧停留在原来的位置；</span><br><span class="line"></span><br><span class="line">​      \nnew line————————————换行且光标移至行首；</span><br><span class="line"></span><br><span class="line">​      \rcarriage return——————————光标移至行首，但不换行，即覆盖开始内容</span><br><span class="line"></span><br><span class="line">​      \thorizontal tab——————————插入tab</span><br><span class="line"></span><br><span class="line">​      \vvertical tab——————————\v 与\f相同</span><br><span class="line"></span><br><span class="line">​      \\backslash————————————插入一个“\”</span><br><span class="line"></span><br><span class="line">​      \0nnn  ，插入nnn（八进制）所代表的ASCII字符</span><br><span class="line"></span><br><span class="line">echo -e &apos;\033[43;31;5mmagedu\033[0m&apos;</span><br><span class="line"></span><br><span class="line">​      \xHH插入HH（十六进制）所代表的ASCII字符</span><br></pre></td></tr></table></figure><h2 id="命令行扩展-或"><a href="#命令行扩展-或" class="headerlink" title="命令行扩展  $( ) 或 "></a>命令行扩展  $( ) 或 <code></code></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">## 调用主机名</span><br><span class="line">[root@CentOS6 ~ ]#echo &quot;This system&apos;s name is $(hostname)&quot; </span><br><span class="line">This system&apos;s name is CentOS6.10</span><br><span class="line"></span><br><span class="line">## 调用当前用户</span><br><span class="line">[root@CentOS6 ~ ]#echo &quot;i am `whoami` &quot;</span><br><span class="line">i am root</span><br></pre></td></tr></table></figure><h2 id="括号扩展："><a href="#括号扩展：" class="headerlink" title="括号扩展：{}"></a>括号扩展：{}</h2><p>功能:打印重复 字符串的简化形式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">## 打印连续的数字</span><br><span class="line">[root@CentOS6 ~ ]#echo &#123;1..10&#125;</span><br><span class="line">1 2 3 4 5 6 7 8 9 10</span><br><span class="line"></span><br><span class="line">## 打印不连续的数字</span><br><span class="line">[root@CentOS6 ~ ]#echo &#123;1,3,5&#125;</span><br><span class="line">1 3 5</span><br><span class="line"></span><br><span class="line">##  打印字母</span><br><span class="line">[root@CentOS6 ~ ]#echo &#123;a..z&#125;</span><br><span class="line">a b c d e f g h i j k l m n o p q r s t u v w x y z</span><br><span class="line"></span><br><span class="line">## 结合步进，打印奇数</span><br><span class="line">[root@CentOS6 ~ ]#echo &#123;1..10..2&#125;</span><br><span class="line">1 3 5 7 9</span><br><span class="line"></span><br><span class="line">## 可以用来创建固定前缀的文件，减少重复操作</span><br><span class="line">[root@CentOS6 ~ ]#echo file&#123;1,3,5&#125;</span><br><span class="line">file1 file3 file5</span><br><span class="line"></span><br><span class="line">## 删除</span><br><span class="line">[root@CentOS6 ~ ]#rm -f file&#123;1,3,5&#125;</span><br></pre></td></tr></table></figure><h2 id="命令行历史"><a href="#命令行历史" class="headerlink" title="命令行历史"></a>命令行历史</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">执行前一条命令（去除参数）：  !:0</span><br><span class="line">执行history命令输出对应序号n的命令： !n</span><br><span class="line">执行history历史中倒数第n个命令: !-n</span><br><span class="line">command !^ 利用上一个命令的第一个参数做cmd的参数</span><br><span class="line">command !$ 利用上一个命令的最后一个参数做cmd的参数</span><br><span class="line">command !* 利用上一个命令的全部参数做cmd的参数</span><br><span class="line">command !:n 利用上一个命令的第n个参数做cmd的参数</span><br></pre></td></tr></table></figure><h3 id="history命令"><a href="#history命令" class="headerlink" title="history命令"></a>history命令</h3><p>语法:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">history [-c] [-d offset] [n]</span><br><span class="line">history -anrw [filename]</span><br><span class="line">history -ps arg [arg...]</span><br></pre></td></tr></table></figure><p>选项：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">-c: 清空命令历史</span><br><span class="line">-d offset: 删除历史中指定的第offset个命令</span><br><span class="line"> n: 显示最近的n条历史，默认列出所有历史记录</span><br><span class="line">-a: 追加本次会话新执行的命令历史列表至历史文件</span><br><span class="line">-r: 读历史文件附加到历史列表</span><br><span class="line">-w: 保存历史列表到指定的历史文件</span><br><span class="line">-n: 读历史文件中未读过的行到历史列表</span><br><span class="line">-p: 展开历史参数成多行，但不存在历史列表中</span><br><span class="line">-s: 展开历史参数成一行，附加在历史列表后</span><br></pre></td></tr></table></figure><h2 id="bash快捷键"><a href="#bash快捷键" class="headerlink" title="bash快捷键"></a>bash快捷键</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Ctrl + l 清屏，相当于clear命令</span><br><span class="line">Ctrl + c 终止命令</span><br><span class="line">Ctrl + z 挂起命令</span><br><span class="line">Ctrl + c 终止命令</span><br><span class="line">Ctrl + z 挂起命令</span><br><span class="line">Ctrl + u 从光标处删除至命令行首Ctrl + k 从光标处删除至命令行尾</span><br><span class="line">Alt + r 删除当前整行</span><br><span class="line">Alt + N 提示输入指定字符后，重复显示该字符N次</span><br></pre></td></tr></table></figure><h2 id="whatis命令"><a href="#whatis命令" class="headerlink" title="whatis命令"></a>whatis命令</h2><p>功能：显示命令的简短描述</p><p>基于数据库进行查询</p><p>刚安装后不可立即使用，需要makewhatis(Centos6)  mandb(Centos7)制作数据库</p><p>示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whatis cal 或 man –f cal</span><br></pre></td></tr></table></figure><h2 id="如何获取命令帮助？"><a href="#如何获取命令帮助？" class="headerlink" title="如何获取命令帮助？"></a>如何获取命令帮助？</h2><h3 id="内部命令-1"><a href="#内部命令-1" class="headerlink" title="内部命令"></a>内部命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">help command</span><br><span class="line">man bash</span><br></pre></td></tr></table></figure><h3 id="外部命令-1"><a href="#外部命令-1" class="headerlink" title="外部命令"></a>外部命令</h3><p>​    </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">方法1：command  --help</span><br><span class="line">方法2：使用man手册</span><br><span class="line">方法3：info  command</span><br><span class="line">方法4：程序自身的帮助文档</span><br><span class="line">README</span><br><span class="line">INSTALL</span><br><span class="line">ChangeLog</span><br><span class="line">方法5：发行版的官方文档</span><br><span class="line">方法6：程序官方文档</span><br><span class="line"></span><br><span class="line">建议：先whatis command查看具体的章节，然后再man  章节  command获取帮助。</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>linux基础知识</title>
      <link href="/2018/09/26/linux%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
      <url>/2018/09/26/linux%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
      <content type="html"><![CDATA[<h2 id="计算机系统的组成"><a href="#计算机系统的组成" class="headerlink" title="计算机系统的组成"></a>计算机系统的组成</h2><p>计算机系统由硬件(Hardware)系统和软件(Software)系统两大部分组成<a id="more"></a></p><p><img src="http://wx4.sinaimg.cn/mw690/0060lm7Tly1fvh5pcpcc2j30mv0c1gnv.jpg" alt="xin"></p><h2 id="冯·诺依曼体系结构："><a href="#冯·诺依曼体系结构：" class="headerlink" title="冯·诺依曼体系结构："></a>冯·诺依曼体系结构：</h2><p> 1946年数学家冯·诺依曼于提出 运算器、控制器、存储器、输入设备、输出设备</p><h2 id="linux起源"><a href="#linux起源" class="headerlink" title="linux起源"></a>linux起源</h2><p>1991年的10月5日，Torvalds在comp.os.minix新闻组上发布 消息，正式向外宣布他自行编写的完全自由免费的内核诞生 （Freeminix-like kernel sources for 386-AT）——— FREAX，英文含义是怪诞的、怪物、异想天开 </p><p>类Unix的内核，在GPL下发布</p><p>官网：<a href="http://www.kernel.org" target="_blank" rel="noopener">www.kernel.org</a></p><p>如：CentOS,Ubuntu,Android</p><h3 id="linux发行版"><a href="#linux发行版" class="headerlink" title="linux发行版"></a>linux发行版</h3><ul><li><p>slackware:SUSE  linux  Enterprise  Server </p></li><li><p>debian:  Ubuntu , mint</p></li><li><p>redhat： RHEL: RedHat Enterprise Linux </p></li><li><p>ArchLinux：轻量简洁 </p></li><li><p>Gentoo：极致性能，不提供传统意义的安装程序 </p></li><li><p>LFS: Linux From scratch 自制Linux </p></li><li><p>Android: kernel+busybox（工具集）+java虚拟机 </p></li><li><p><img src="http://i4.bvimg.com/662847/581ffa675f77fbf5.png" alt="Markdown"></p></li></ul><p>linux分支参考网站</p><p>​    <a href="http://futurist.se/gldt/" target="_blank" rel="noopener">http://futurist.se/gldt/</a></p><p>​    <a href="http://www.mindpin.com/d3js-demo/linux/" target="_blank" rel="noopener">http://www.mindpin.com/d3js-demo/linux/</a></p><h3 id="linux内核"><a href="#linux内核" class="headerlink" title="linux内核"></a>linux内核</h3><p><img src="http://i4.bvimg.com/662847/e50f8c942e824751.png" alt="Markdown"></p><h3 id="linux哲学思想"><a href="#linux哲学思想" class="headerlink" title="linux哲学思想"></a>linux哲学思想</h3><ul><li>一切都是一个文件（包括硬件） </li><li>小型，单一用途的程序 </li><li>链接程序，共同完成复杂的任务 </li><li>避免令人困惑的用户界面 </li><li>配置数据存储在文本中</li></ul><h3 id="获取linux发行版"><a href="#获取linux发行版" class="headerlink" title="获取linux发行版"></a>获取linux发行版</h3><ul><li><a href="https://wiki.centos.org/Download" target="_blank" rel="noopener">https://wiki.centos.org/Download</a></li><li><a href="http://mirrors.aliyun.com" target="_blank" rel="noopener">http://mirrors.aliyun.com</a></li><li><a href="http://mirrors.sohu.com" target="_blank" rel="noopener">http://mirrors.sohu.com</a></li><li><a href="http://mirrors.163.com" target="_blank" rel="noopener">http://mirrors.163.com</a></li></ul>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/09/12/hello-world/"/>
      <url>/2018/09/12/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post "></a>Create a new post <a id="more"></a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
    </entry>
    
  
  
</search>
